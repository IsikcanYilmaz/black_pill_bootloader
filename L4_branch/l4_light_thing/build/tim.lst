ARM GAS  /tmp/ccanFWvD.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PWM_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_TIM_PWM_MspInit:
  26              	.LFB132:
  27              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   * @attention
   8:Src/tim.c     ****   *
   9:Src/tim.c     ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/tim.c     ****   * All rights reserved.</center></h2>
  11:Src/tim.c     ****   *
  12:Src/tim.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/tim.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/tim.c     ****   * License. You may obtain a copy of the License at:
  15:Src/tim.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/tim.c     ****   *
  17:Src/tim.c     ****   ******************************************************************************
  18:Src/tim.c     ****   */
  19:Src/tim.c     **** 
  20:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/tim.c     **** #include "tim.h"
  22:Src/tim.c     **** 
  23:Src/tim.c     **** /* USER CODE BEGIN 0 */
  24:Src/tim.c     **** 
  25:Src/tim.c     **** /* USER CODE END 0 */
  26:Src/tim.c     **** 
  27:Src/tim.c     **** TIM_HandleTypeDef htim2;
  28:Src/tim.c     **** TIM_HandleTypeDef htim3;
  29:Src/tim.c     **** DMA_HandleTypeDef hdma_tim3_ch4_up;
  30:Src/tim.c     **** 
  31:Src/tim.c     **** /* TIM2 init function */
ARM GAS  /tmp/ccanFWvD.s 			page 2


  32:Src/tim.c     **** void MX_TIM2_Init(void)
  33:Src/tim.c     **** {
  34:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  35:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  36:Src/tim.c     **** 
  37:Src/tim.c     ****   htim2.Instance = TIM2;
  38:Src/tim.c     ****   htim2.Init.Prescaler = 0;
  39:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  40:Src/tim.c     ****   htim2.Init.Period = 0;
  41:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  42:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  43:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
  44:Src/tim.c     ****   {
  45:Src/tim.c     ****     Error_Handler();
  46:Src/tim.c     ****   }
  47:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  48:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  49:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  50:Src/tim.c     ****   {
  51:Src/tim.c     ****     Error_Handler();
  52:Src/tim.c     ****   }
  53:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  54:Src/tim.c     ****   sConfigOC.Pulse = 0;
  55:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  56:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  57:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  58:Src/tim.c     ****   {
  59:Src/tim.c     ****     Error_Handler();
  60:Src/tim.c     ****   }
  61:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
  62:Src/tim.c     ****   {
  63:Src/tim.c     ****     Error_Handler();
  64:Src/tim.c     ****   }
  65:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
  66:Src/tim.c     ****   {
  67:Src/tim.c     ****     Error_Handler();
  68:Src/tim.c     ****   }
  69:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim2);
  70:Src/tim.c     **** 
  71:Src/tim.c     **** }
  72:Src/tim.c     **** /* TIM3 init function */
  73:Src/tim.c     **** void MX_TIM3_Init(void)
  74:Src/tim.c     **** {
  75:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  76:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  77:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  78:Src/tim.c     **** 
  79:Src/tim.c     ****   htim3.Instance = TIM3;
  80:Src/tim.c     ****   htim3.Init.Prescaler = 0;
  81:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
  82:Src/tim.c     ****   htim3.Init.Period = 0;
  83:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  84:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
  85:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
  86:Src/tim.c     ****   {
  87:Src/tim.c     ****     Error_Handler();
  88:Src/tim.c     ****   }
ARM GAS  /tmp/ccanFWvD.s 			page 3


  89:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  90:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
  91:Src/tim.c     ****   {
  92:Src/tim.c     ****     Error_Handler();
  93:Src/tim.c     ****   }
  94:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
  95:Src/tim.c     ****   {
  96:Src/tim.c     ****     Error_Handler();
  97:Src/tim.c     ****   }
  98:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  99:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 100:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 101:Src/tim.c     ****   {
 102:Src/tim.c     ****     Error_Handler();
 103:Src/tim.c     ****   }
 104:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 105:Src/tim.c     ****   sConfigOC.Pulse = 0;
 106:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 107:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 108:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 109:Src/tim.c     ****   {
 110:Src/tim.c     ****     Error_Handler();
 111:Src/tim.c     ****   }
 112:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim3);
 113:Src/tim.c     **** 
 114:Src/tim.c     **** }
 115:Src/tim.c     **** 
 116:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 117:Src/tim.c     **** {
  28              		.loc 1 117 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 118:Src/tim.c     **** 
 119:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM2)
  34              		.loc 1 119 0
  35 0000 0368     		ldr	r3, [r0]
  36 0002 B3F1804F 		cmp	r3, #1073741824
  37 0006 00D0     		beq	.L7
  38 0008 7047     		bx	lr
  39              	.L7:
 117:Src/tim.c     **** 
  40              		.loc 1 117 0
  41 000a 82B0     		sub	sp, sp, #8
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 8
  44              	.LBB2:
 120:Src/tim.c     ****   {
 121:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 122:Src/tim.c     **** 
 123:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 124:Src/tim.c     ****     /* TIM2 clock enable */
 125:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
  45              		.loc 1 125 0
  46 000c 03F50433 		add	r3, r3, #135168
ARM GAS  /tmp/ccanFWvD.s 			page 4


  47 0010 9A6D     		ldr	r2, [r3, #88]
  48 0012 42F00102 		orr	r2, r2, #1
  49 0016 9A65     		str	r2, [r3, #88]
  50 0018 9B6D     		ldr	r3, [r3, #88]
  51 001a 03F00103 		and	r3, r3, #1
  52 001e 0193     		str	r3, [sp, #4]
  53 0020 019B     		ldr	r3, [sp, #4]
  54              	.LBE2:
 126:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 127:Src/tim.c     **** 
 128:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 129:Src/tim.c     ****   }
 130:Src/tim.c     **** }
  55              		.loc 1 130 0
  56 0022 02B0     		add	sp, sp, #8
  57              	.LCFI1:
  58              		.cfi_def_cfa_offset 0
  59              		@ sp needed
  60 0024 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE132:
  64              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  65              		.align	1
  66              		.global	HAL_TIM_Base_MspInit
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv4-sp-d16
  72              	HAL_TIM_Base_MspInit:
  73              	.LFB133:
 131:Src/tim.c     **** 
 132:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 133:Src/tim.c     **** {
  74              		.loc 1 133 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL1:
 134:Src/tim.c     **** 
 135:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM3)
  79              		.loc 1 135 0
  80 0000 0268     		ldr	r2, [r0]
  81 0002 174B     		ldr	r3, .L17
  82 0004 9A42     		cmp	r2, r3
  83 0006 00D0     		beq	.L15
  84 0008 7047     		bx	lr
  85              	.L15:
 133:Src/tim.c     **** 
  86              		.loc 1 133 0
  87 000a 10B5     		push	{r4, lr}
  88              	.LCFI2:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 4, -8
  91              		.cfi_offset 14, -4
  92 000c 82B0     		sub	sp, sp, #8
  93              	.LCFI3:
  94              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccanFWvD.s 			page 5


  95 000e 0446     		mov	r4, r0
  96              	.LBB3:
 136:Src/tim.c     ****   {
 137:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 138:Src/tim.c     **** 
 139:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 140:Src/tim.c     ****     /* TIM3 clock enable */
 141:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
  97              		.loc 1 141 0
  98 0010 03F50333 		add	r3, r3, #134144
  99 0014 9A6D     		ldr	r2, [r3, #88]
 100 0016 42F00202 		orr	r2, r2, #2
 101 001a 9A65     		str	r2, [r3, #88]
 102 001c 9B6D     		ldr	r3, [r3, #88]
 103 001e 03F00203 		and	r3, r3, #2
 104 0022 0193     		str	r3, [sp, #4]
 105 0024 019B     		ldr	r3, [sp, #4]
 106              	.LBE3:
 142:Src/tim.c     ****   
 143:Src/tim.c     ****     /* TIM3 DMA Init */
 144:Src/tim.c     ****     /* TIM3_CH4_UP Init */
 145:Src/tim.c     ****     hdma_tim3_ch4_up.Instance = DMA1_Channel3;
 107              		.loc 1 145 0
 108 0026 0F48     		ldr	r0, .L17+4
 109              	.LVL2:
 110 0028 0F4B     		ldr	r3, .L17+8
 111 002a 0360     		str	r3, [r0]
 146:Src/tim.c     ****     hdma_tim3_ch4_up.Init.Request = DMA_REQUEST_5;
 112              		.loc 1 146 0
 113 002c 0523     		movs	r3, #5
 114 002e 4360     		str	r3, [r0, #4]
 147:Src/tim.c     ****     hdma_tim3_ch4_up.Init.Direction = DMA_MEMORY_TO_PERIPH;
 115              		.loc 1 147 0
 116 0030 1023     		movs	r3, #16
 117 0032 8360     		str	r3, [r0, #8]
 148:Src/tim.c     ****     hdma_tim3_ch4_up.Init.PeriphInc = DMA_PINC_DISABLE;
 118              		.loc 1 148 0
 119 0034 0023     		movs	r3, #0
 120 0036 C360     		str	r3, [r0, #12]
 149:Src/tim.c     ****     hdma_tim3_ch4_up.Init.MemInc = DMA_MINC_ENABLE;
 121              		.loc 1 149 0
 122 0038 8022     		movs	r2, #128
 123 003a 0261     		str	r2, [r0, #16]
 150:Src/tim.c     ****     hdma_tim3_ch4_up.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 124              		.loc 1 150 0
 125 003c 4FF40072 		mov	r2, #512
 126 0040 4261     		str	r2, [r0, #20]
 151:Src/tim.c     ****     hdma_tim3_ch4_up.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 127              		.loc 1 151 0
 128 0042 8361     		str	r3, [r0, #24]
 152:Src/tim.c     ****     hdma_tim3_ch4_up.Init.Mode = DMA_NORMAL;
 129              		.loc 1 152 0
 130 0044 C361     		str	r3, [r0, #28]
 153:Src/tim.c     ****     hdma_tim3_ch4_up.Init.Priority = DMA_PRIORITY_LOW;
 131              		.loc 1 153 0
 132 0046 0362     		str	r3, [r0, #32]
 154:Src/tim.c     ****     if (HAL_DMA_Init(&hdma_tim3_ch4_up) != HAL_OK)
ARM GAS  /tmp/ccanFWvD.s 			page 6


 133              		.loc 1 154 0
 134 0048 FFF7FEFF 		bl	HAL_DMA_Init
 135              	.LVL3:
 136 004c 28B9     		cbnz	r0, .L16
 137              	.L10:
 155:Src/tim.c     ****     {
 156:Src/tim.c     ****       Error_Handler();
 157:Src/tim.c     ****     }
 158:Src/tim.c     **** 
 159:Src/tim.c     ****     /* Several peripheral DMA handle pointers point to the same DMA handle.
 160:Src/tim.c     ****      Be aware that there is only one channel to perform all the requested DMAs. */
 161:Src/tim.c     ****     __HAL_LINKDMA(tim_baseHandle,hdma[TIM_DMA_ID_CC4],hdma_tim3_ch4_up);
 138              		.loc 1 161 0
 139 004e 054B     		ldr	r3, .L17+4
 140 0050 2363     		str	r3, [r4, #48]
 162:Src/tim.c     ****     __HAL_LINKDMA(tim_baseHandle,hdma[TIM_DMA_ID_UPDATE],hdma_tim3_ch4_up);
 141              		.loc 1 162 0
 142 0052 2362     		str	r3, [r4, #32]
 143 0054 9C62     		str	r4, [r3, #40]
 163:Src/tim.c     **** 
 164:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 165:Src/tim.c     **** 
 166:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 167:Src/tim.c     ****   }
 168:Src/tim.c     **** }
 144              		.loc 1 168 0
 145 0056 02B0     		add	sp, sp, #8
 146              	.LCFI4:
 147              		.cfi_remember_state
 148              		.cfi_def_cfa_offset 8
 149              		@ sp needed
 150 0058 10BD     		pop	{r4, pc}
 151              	.LVL4:
 152              	.L16:
 153              	.LCFI5:
 154              		.cfi_restore_state
 156:Src/tim.c     ****     }
 155              		.loc 1 156 0
 156 005a FFF7FEFF 		bl	Error_Handler
 157              	.LVL5:
 158 005e F6E7     		b	.L10
 159              	.L18:
 160              		.align	2
 161              	.L17:
 162 0060 00040040 		.word	1073742848
 163 0064 00000000 		.word	hdma_tim3_ch4_up
 164 0068 30000240 		.word	1073872944
 165              		.cfi_endproc
 166              	.LFE133:
 168              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 169              		.align	1
 170              		.global	HAL_TIM_MspPostInit
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	HAL_TIM_MspPostInit:
ARM GAS  /tmp/ccanFWvD.s 			page 7


 177              	.LFB134:
 169:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 170:Src/tim.c     **** {
 178              		.loc 1 170 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 32
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              	.LVL6:
 183 0000 30B5     		push	{r4, r5, lr}
 184              	.LCFI6:
 185              		.cfi_def_cfa_offset 12
 186              		.cfi_offset 4, -12
 187              		.cfi_offset 5, -8
 188              		.cfi_offset 14, -4
 189 0002 89B0     		sub	sp, sp, #36
 190              	.LCFI7:
 191              		.cfi_def_cfa_offset 48
 171:Src/tim.c     **** 
 172:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 192              		.loc 1 172 0
 193 0004 0023     		movs	r3, #0
 194 0006 0393     		str	r3, [sp, #12]
 195 0008 0493     		str	r3, [sp, #16]
 196 000a 0593     		str	r3, [sp, #20]
 197 000c 0693     		str	r3, [sp, #24]
 198 000e 0793     		str	r3, [sp, #28]
 173:Src/tim.c     ****   if(timHandle->Instance==TIM2)
 199              		.loc 1 173 0
 200 0010 0368     		ldr	r3, [r0]
 201 0012 B3F1804F 		cmp	r3, #1073741824
 202 0016 04D0     		beq	.L23
 174:Src/tim.c     ****   {
 175:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 176:Src/tim.c     **** 
 177:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 0 */
 178:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 179:Src/tim.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 180:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 181:Src/tim.c     ****     PA0     ------> TIM2_CH1
 182:Src/tim.c     ****     PA1     ------> TIM2_CH2
 183:Src/tim.c     ****     PB10     ------> TIM2_CH3 
 184:Src/tim.c     ****     */
 185:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 186:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 187:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 188:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 189:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 190:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 191:Src/tim.c     **** 
 192:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 193:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 194:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 195:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 196:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 197:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 198:Src/tim.c     **** 
 199:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
ARM GAS  /tmp/ccanFWvD.s 			page 8


 200:Src/tim.c     **** 
 201:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 1 */
 202:Src/tim.c     ****   }
 203:Src/tim.c     ****   else if(timHandle->Instance==TIM3)
 203              		.loc 1 203 0
 204 0018 224A     		ldr	r2, .L25
 205 001a 9342     		cmp	r3, r2
 206 001c 2DD0     		beq	.L24
 207              	.LVL7:
 208              	.L19:
 204:Src/tim.c     ****   {
 205:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 206:Src/tim.c     **** 
 207:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 208:Src/tim.c     ****   
 209:Src/tim.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 210:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 211:Src/tim.c     ****     PB1     ------> TIM3_CH4 
 212:Src/tim.c     ****     */
 213:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_1;
 214:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 215:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 216:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 217:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 218:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 219:Src/tim.c     **** 
 220:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 221:Src/tim.c     **** 
 222:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
 223:Src/tim.c     ****   }
 224:Src/tim.c     **** 
 225:Src/tim.c     **** }
 209              		.loc 1 225 0
 210 001e 09B0     		add	sp, sp, #36
 211              	.LCFI8:
 212              		.cfi_remember_state
 213              		.cfi_def_cfa_offset 12
 214              		@ sp needed
 215 0020 30BD     		pop	{r4, r5, pc}
 216              	.LVL8:
 217              	.L23:
 218              	.LCFI9:
 219              		.cfi_restore_state
 220              	.LBB4:
 178:Src/tim.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 221              		.loc 1 178 0
 222 0022 03F50433 		add	r3, r3, #135168
 223 0026 DA6C     		ldr	r2, [r3, #76]
 224 0028 42F00102 		orr	r2, r2, #1
 225 002c DA64     		str	r2, [r3, #76]
 226 002e DA6C     		ldr	r2, [r3, #76]
 227 0030 02F00102 		and	r2, r2, #1
 228 0034 0092     		str	r2, [sp]
 229 0036 009A     		ldr	r2, [sp]
 230              	.LBE4:
 231              	.LBB5:
 179:Src/tim.c     ****     /**TIM2 GPIO Configuration    
ARM GAS  /tmp/ccanFWvD.s 			page 9


 232              		.loc 1 179 0
 233 0038 DA6C     		ldr	r2, [r3, #76]
 234 003a 42F00202 		orr	r2, r2, #2
 235 003e DA64     		str	r2, [r3, #76]
 236 0040 DB6C     		ldr	r3, [r3, #76]
 237 0042 03F00203 		and	r3, r3, #2
 238 0046 0193     		str	r3, [sp, #4]
 239 0048 019B     		ldr	r3, [sp, #4]
 240              	.LBE5:
 185:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 241              		.loc 1 185 0
 242 004a 0323     		movs	r3, #3
 243 004c 0393     		str	r3, [sp, #12]
 186:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 244              		.loc 1 186 0
 245 004e 0225     		movs	r5, #2
 246 0050 0495     		str	r5, [sp, #16]
 189:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 247              		.loc 1 189 0
 248 0052 0124     		movs	r4, #1
 249 0054 0794     		str	r4, [sp, #28]
 190:Src/tim.c     **** 
 250              		.loc 1 190 0
 251 0056 03A9     		add	r1, sp, #12
 252 0058 4FF09040 		mov	r0, #1207959552
 253              	.LVL9:
 254 005c FFF7FEFF 		bl	HAL_GPIO_Init
 255              	.LVL10:
 192:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 256              		.loc 1 192 0
 257 0060 4FF48063 		mov	r3, #1024
 258 0064 0393     		str	r3, [sp, #12]
 193:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 259              		.loc 1 193 0
 260 0066 0495     		str	r5, [sp, #16]
 194:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 261              		.loc 1 194 0
 262 0068 0023     		movs	r3, #0
 263 006a 0593     		str	r3, [sp, #20]
 195:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 264              		.loc 1 195 0
 265 006c 0693     		str	r3, [sp, #24]
 196:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 266              		.loc 1 196 0
 267 006e 0794     		str	r4, [sp, #28]
 197:Src/tim.c     **** 
 268              		.loc 1 197 0
 269 0070 03A9     		add	r1, sp, #12
 270 0072 0D48     		ldr	r0, .L25+4
 271 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 272              	.LVL11:
 273 0078 D1E7     		b	.L19
 274              	.LVL12:
 275              	.L24:
 276              	.LBB6:
 209:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 277              		.loc 1 209 0
ARM GAS  /tmp/ccanFWvD.s 			page 10


 278 007a 0C4B     		ldr	r3, .L25+8
 279 007c DA6C     		ldr	r2, [r3, #76]
 280 007e 42F00202 		orr	r2, r2, #2
 281 0082 DA64     		str	r2, [r3, #76]
 282 0084 DB6C     		ldr	r3, [r3, #76]
 283 0086 03F00203 		and	r3, r3, #2
 284 008a 0293     		str	r3, [sp, #8]
 285 008c 029B     		ldr	r3, [sp, #8]
 286              	.LBE6:
 213:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 287              		.loc 1 213 0
 288 008e 0223     		movs	r3, #2
 289 0090 0393     		str	r3, [sp, #12]
 214:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 214 0
 291 0092 0493     		str	r3, [sp, #16]
 216:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 292              		.loc 1 216 0
 293 0094 0322     		movs	r2, #3
 294 0096 0692     		str	r2, [sp, #24]
 217:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 295              		.loc 1 217 0
 296 0098 0793     		str	r3, [sp, #28]
 218:Src/tim.c     **** 
 297              		.loc 1 218 0
 298 009a 03A9     		add	r1, sp, #12
 299 009c 0248     		ldr	r0, .L25+4
 300              	.LVL13:
 301 009e FFF7FEFF 		bl	HAL_GPIO_Init
 302              	.LVL14:
 303              		.loc 1 225 0
 304 00a2 BCE7     		b	.L19
 305              	.L26:
 306              		.align	2
 307              	.L25:
 308 00a4 00040040 		.word	1073742848
 309 00a8 00040048 		.word	1207960576
 310 00ac 00100240 		.word	1073876992
 311              		.cfi_endproc
 312              	.LFE134:
 314              		.section	.text.MX_TIM2_Init,"ax",%progbits
 315              		.align	1
 316              		.global	MX_TIM2_Init
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	MX_TIM2_Init:
 323              	.LFB130:
  33:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 324              		.loc 1 33 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 40
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 00B5     		push	{lr}
 329              	.LCFI10:
 330              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccanFWvD.s 			page 11


 331              		.cfi_offset 14, -4
 332 0002 8BB0     		sub	sp, sp, #44
 333              	.LCFI11:
 334              		.cfi_def_cfa_offset 48
  34:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 335              		.loc 1 34 0
 336 0004 0023     		movs	r3, #0
 337 0006 0793     		str	r3, [sp, #28]
 338 0008 0893     		str	r3, [sp, #32]
 339 000a 0993     		str	r3, [sp, #36]
  35:Src/tim.c     **** 
 340              		.loc 1 35 0
 341 000c 0093     		str	r3, [sp]
 342 000e 0193     		str	r3, [sp, #4]
 343 0010 0293     		str	r3, [sp, #8]
 344 0012 0393     		str	r3, [sp, #12]
 345 0014 0493     		str	r3, [sp, #16]
 346 0016 0593     		str	r3, [sp, #20]
 347 0018 0693     		str	r3, [sp, #24]
  37:Src/tim.c     ****   htim2.Init.Prescaler = 0;
 348              		.loc 1 37 0
 349 001a 2048     		ldr	r0, .L39
 350 001c 4FF08042 		mov	r2, #1073741824
 351 0020 0260     		str	r2, [r0]
  38:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 352              		.loc 1 38 0
 353 0022 4360     		str	r3, [r0, #4]
  39:Src/tim.c     ****   htim2.Init.Period = 0;
 354              		.loc 1 39 0
 355 0024 8360     		str	r3, [r0, #8]
  40:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 356              		.loc 1 40 0
 357 0026 C360     		str	r3, [r0, #12]
  41:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 358              		.loc 1 41 0
 359 0028 0361     		str	r3, [r0, #16]
  42:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 360              		.loc 1 42 0
 361 002a 8361     		str	r3, [r0, #24]
  43:Src/tim.c     ****   {
 362              		.loc 1 43 0
 363 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 364              	.LVL15:
 365 0030 20BB     		cbnz	r0, .L34
 366              	.L28:
  47:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 367              		.loc 1 47 0
 368 0032 0023     		movs	r3, #0
 369 0034 0793     		str	r3, [sp, #28]
  48:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 370              		.loc 1 48 0
 371 0036 0993     		str	r3, [sp, #36]
  49:Src/tim.c     ****   {
 372              		.loc 1 49 0
 373 0038 07A9     		add	r1, sp, #28
 374 003a 1848     		ldr	r0, .L39
 375 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /tmp/ccanFWvD.s 			page 12


 376              	.LVL16:
 377 0040 F8B9     		cbnz	r0, .L35
 378              	.L29:
  53:Src/tim.c     ****   sConfigOC.Pulse = 0;
 379              		.loc 1 53 0
 380 0042 6023     		movs	r3, #96
 381 0044 0093     		str	r3, [sp]
  54:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 382              		.loc 1 54 0
 383 0046 0022     		movs	r2, #0
 384 0048 0192     		str	r2, [sp, #4]
  55:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 385              		.loc 1 55 0
 386 004a 0292     		str	r2, [sp, #8]
  56:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 387              		.loc 1 56 0
 388 004c 0492     		str	r2, [sp, #16]
  57:Src/tim.c     ****   {
 389              		.loc 1 57 0
 390 004e 6946     		mov	r1, sp
 391 0050 1248     		ldr	r0, .L39
 392 0052 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 393              	.LVL17:
 394 0056 B8B9     		cbnz	r0, .L36
 395              	.L30:
  61:Src/tim.c     ****   {
 396              		.loc 1 61 0
 397 0058 0422     		movs	r2, #4
 398 005a 6946     		mov	r1, sp
 399 005c 0F48     		ldr	r0, .L39
 400 005e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 401              	.LVL18:
 402 0062 A0B9     		cbnz	r0, .L37
 403              	.L31:
  65:Src/tim.c     ****   {
 404              		.loc 1 65 0
 405 0064 0822     		movs	r2, #8
 406 0066 6946     		mov	r1, sp
 407 0068 0C48     		ldr	r0, .L39
 408 006a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 409              	.LVL19:
 410 006e 88B9     		cbnz	r0, .L38
 411              	.L32:
  69:Src/tim.c     **** 
 412              		.loc 1 69 0
 413 0070 0A48     		ldr	r0, .L39
 414 0072 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 415              	.LVL20:
  71:Src/tim.c     **** /* TIM3 init function */
 416              		.loc 1 71 0
 417 0076 0BB0     		add	sp, sp, #44
 418              	.LCFI12:
 419              		.cfi_remember_state
 420              		.cfi_def_cfa_offset 4
 421              		@ sp needed
 422 0078 5DF804FB 		ldr	pc, [sp], #4
 423              	.L34:
ARM GAS  /tmp/ccanFWvD.s 			page 13


 424              	.LCFI13:
 425              		.cfi_restore_state
  45:Src/tim.c     ****   }
 426              		.loc 1 45 0
 427 007c FFF7FEFF 		bl	Error_Handler
 428              	.LVL21:
 429 0080 D7E7     		b	.L28
 430              	.L35:
  51:Src/tim.c     ****   }
 431              		.loc 1 51 0
 432 0082 FFF7FEFF 		bl	Error_Handler
 433              	.LVL22:
 434 0086 DCE7     		b	.L29
 435              	.L36:
  59:Src/tim.c     ****   }
 436              		.loc 1 59 0
 437 0088 FFF7FEFF 		bl	Error_Handler
 438              	.LVL23:
 439 008c E4E7     		b	.L30
 440              	.L37:
  63:Src/tim.c     ****   }
 441              		.loc 1 63 0
 442 008e FFF7FEFF 		bl	Error_Handler
 443              	.LVL24:
 444 0092 E7E7     		b	.L31
 445              	.L38:
  67:Src/tim.c     ****   }
 446              		.loc 1 67 0
 447 0094 FFF7FEFF 		bl	Error_Handler
 448              	.LVL25:
 449 0098 EAE7     		b	.L32
 450              	.L40:
 451 009a 00BF     		.align	2
 452              	.L39:
 453 009c 00000000 		.word	htim2
 454              		.cfi_endproc
 455              	.LFE130:
 457              		.section	.text.MX_TIM3_Init,"ax",%progbits
 458              		.align	1
 459              		.global	MX_TIM3_Init
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 463              		.fpu fpv4-sp-d16
 465              	MX_TIM3_Init:
 466              	.LFB131:
  74:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 467              		.loc 1 74 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 56
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 00B5     		push	{lr}
 472              	.LCFI14:
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 14, -4
 475 0002 8FB0     		sub	sp, sp, #60
 476              	.LCFI15:
ARM GAS  /tmp/ccanFWvD.s 			page 14


 477              		.cfi_def_cfa_offset 64
  75:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 478              		.loc 1 75 0
 479 0004 0023     		movs	r3, #0
 480 0006 0A93     		str	r3, [sp, #40]
 481 0008 0B93     		str	r3, [sp, #44]
 482 000a 0C93     		str	r3, [sp, #48]
 483 000c 0D93     		str	r3, [sp, #52]
  76:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 484              		.loc 1 76 0
 485 000e 0793     		str	r3, [sp, #28]
 486 0010 0893     		str	r3, [sp, #32]
 487 0012 0993     		str	r3, [sp, #36]
  77:Src/tim.c     **** 
 488              		.loc 1 77 0
 489 0014 0093     		str	r3, [sp]
 490 0016 0193     		str	r3, [sp, #4]
 491 0018 0293     		str	r3, [sp, #8]
 492 001a 0393     		str	r3, [sp, #12]
 493 001c 0493     		str	r3, [sp, #16]
 494 001e 0593     		str	r3, [sp, #20]
 495 0020 0693     		str	r3, [sp, #24]
  79:Src/tim.c     ****   htim3.Init.Prescaler = 0;
 496              		.loc 1 79 0
 497 0022 2148     		ldr	r0, .L53
 498 0024 214A     		ldr	r2, .L53+4
 499 0026 0260     		str	r2, [r0]
  80:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 500              		.loc 1 80 0
 501 0028 4360     		str	r3, [r0, #4]
  81:Src/tim.c     ****   htim3.Init.Period = 0;
 502              		.loc 1 81 0
 503 002a 8360     		str	r3, [r0, #8]
  82:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 504              		.loc 1 82 0
 505 002c C360     		str	r3, [r0, #12]
  83:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 506              		.loc 1 83 0
 507 002e 0361     		str	r3, [r0, #16]
  84:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 508              		.loc 1 84 0
 509 0030 8023     		movs	r3, #128
 510 0032 8361     		str	r3, [r0, #24]
  85:Src/tim.c     ****   {
 511              		.loc 1 85 0
 512 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 513              	.LVL26:
 514 0038 30BB     		cbnz	r0, .L48
 515              	.L42:
  89:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 516              		.loc 1 89 0
 517 003a 0EA9     		add	r1, sp, #56
 518 003c 4FF48053 		mov	r3, #4096
 519 0040 41F8103D 		str	r3, [r1, #-16]!
  90:Src/tim.c     ****   {
 520              		.loc 1 90 0
 521 0044 1848     		ldr	r0, .L53
ARM GAS  /tmp/ccanFWvD.s 			page 15


 522 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 523              	.LVL27:
 524 004a 00BB     		cbnz	r0, .L49
 525              	.L43:
  94:Src/tim.c     ****   {
 526              		.loc 1 94 0
 527 004c 1648     		ldr	r0, .L53
 528 004e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 529              	.LVL28:
 530 0052 F8B9     		cbnz	r0, .L50
 531              	.L44:
  98:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 532              		.loc 1 98 0
 533 0054 0023     		movs	r3, #0
 534 0056 0793     		str	r3, [sp, #28]
  99:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 535              		.loc 1 99 0
 536 0058 0993     		str	r3, [sp, #36]
 100:Src/tim.c     ****   {
 537              		.loc 1 100 0
 538 005a 07A9     		add	r1, sp, #28
 539 005c 1248     		ldr	r0, .L53
 540 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 541              	.LVL29:
 542 0062 D0B9     		cbnz	r0, .L51
 543              	.L45:
 104:Src/tim.c     ****   sConfigOC.Pulse = 0;
 544              		.loc 1 104 0
 545 0064 6023     		movs	r3, #96
 546 0066 0093     		str	r3, [sp]
 105:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 547              		.loc 1 105 0
 548 0068 0023     		movs	r3, #0
 549 006a 0193     		str	r3, [sp, #4]
 106:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 550              		.loc 1 106 0
 551 006c 0293     		str	r3, [sp, #8]
 107:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 552              		.loc 1 107 0
 553 006e 0493     		str	r3, [sp, #16]
 108:Src/tim.c     ****   {
 554              		.loc 1 108 0
 555 0070 0C22     		movs	r2, #12
 556 0072 6946     		mov	r1, sp
 557 0074 0C48     		ldr	r0, .L53
 558 0076 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 559              	.LVL30:
 560 007a 88B9     		cbnz	r0, .L52
 561              	.L46:
 112:Src/tim.c     **** 
 562              		.loc 1 112 0
 563 007c 0A48     		ldr	r0, .L53
 564 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 565              	.LVL31:
 114:Src/tim.c     **** 
 566              		.loc 1 114 0
 567 0082 0FB0     		add	sp, sp, #60
ARM GAS  /tmp/ccanFWvD.s 			page 16


 568              	.LCFI16:
 569              		.cfi_remember_state
 570              		.cfi_def_cfa_offset 4
 571              		@ sp needed
 572 0084 5DF804FB 		ldr	pc, [sp], #4
 573              	.L48:
 574              	.LCFI17:
 575              		.cfi_restore_state
  87:Src/tim.c     ****   }
 576              		.loc 1 87 0
 577 0088 FFF7FEFF 		bl	Error_Handler
 578              	.LVL32:
 579 008c D5E7     		b	.L42
 580              	.L49:
  92:Src/tim.c     ****   }
 581              		.loc 1 92 0
 582 008e FFF7FEFF 		bl	Error_Handler
 583              	.LVL33:
 584 0092 DBE7     		b	.L43
 585              	.L50:
  96:Src/tim.c     ****   }
 586              		.loc 1 96 0
 587 0094 FFF7FEFF 		bl	Error_Handler
 588              	.LVL34:
 589 0098 DCE7     		b	.L44
 590              	.L51:
 102:Src/tim.c     ****   }
 591              		.loc 1 102 0
 592 009a FFF7FEFF 		bl	Error_Handler
 593              	.LVL35:
 594 009e E1E7     		b	.L45
 595              	.L52:
 110:Src/tim.c     ****   }
 596              		.loc 1 110 0
 597 00a0 FFF7FEFF 		bl	Error_Handler
 598              	.LVL36:
 599 00a4 EAE7     		b	.L46
 600              	.L54:
 601 00a6 00BF     		.align	2
 602              	.L53:
 603 00a8 00000000 		.word	htim3
 604 00ac 00040040 		.word	1073742848
 605              		.cfi_endproc
 606              	.LFE131:
 608              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 609              		.align	1
 610              		.global	HAL_TIM_PWM_MspDeInit
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu fpv4-sp-d16
 616              	HAL_TIM_PWM_MspDeInit:
 617              	.LFB135:
 226:Src/tim.c     **** 
 227:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 228:Src/tim.c     **** {
 618              		.loc 1 228 0
ARM GAS  /tmp/ccanFWvD.s 			page 17


 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623              	.LVL37:
 229:Src/tim.c     **** 
 230:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM2)
 624              		.loc 1 230 0
 625 0000 0368     		ldr	r3, [r0]
 626 0002 B3F1804F 		cmp	r3, #1073741824
 627 0006 00D0     		beq	.L57
 628              	.L55:
 231:Src/tim.c     ****   {
 232:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 233:Src/tim.c     **** 
 234:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 235:Src/tim.c     ****     /* Peripheral clock disable */
 236:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 237:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 238:Src/tim.c     **** 
 239:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 240:Src/tim.c     ****   }
 241:Src/tim.c     **** }
 629              		.loc 1 241 0
 630 0008 7047     		bx	lr
 631              	.L57:
 236:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 632              		.loc 1 236 0
 633 000a 034A     		ldr	r2, .L58
 634 000c 936D     		ldr	r3, [r2, #88]
 635 000e 23F00103 		bic	r3, r3, #1
 636 0012 9365     		str	r3, [r2, #88]
 637              		.loc 1 241 0
 638 0014 F8E7     		b	.L55
 639              	.L59:
 640 0016 00BF     		.align	2
 641              	.L58:
 642 0018 00100240 		.word	1073876992
 643              		.cfi_endproc
 644              	.LFE135:
 646              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 647              		.align	1
 648              		.global	HAL_TIM_Base_MspDeInit
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 652              		.fpu fpv4-sp-d16
 654              	HAL_TIM_Base_MspDeInit:
 655              	.LFB136:
 242:Src/tim.c     **** 
 243:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 244:Src/tim.c     **** {
 656              		.loc 1 244 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              	.LVL38:
ARM GAS  /tmp/ccanFWvD.s 			page 18


 245:Src/tim.c     **** 
 246:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM3)
 661              		.loc 1 246 0
 662 0000 0268     		ldr	r2, [r0]
 663 0002 094B     		ldr	r3, .L67
 664 0004 9A42     		cmp	r2, r3
 665 0006 00D0     		beq	.L66
 666 0008 7047     		bx	lr
 667              	.L66:
 244:Src/tim.c     **** 
 668              		.loc 1 244 0
 669 000a 10B5     		push	{r4, lr}
 670              	.LCFI18:
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 4, -8
 673              		.cfi_offset 14, -4
 674 000c 0446     		mov	r4, r0
 247:Src/tim.c     ****   {
 248:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 249:Src/tim.c     **** 
 250:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 251:Src/tim.c     ****     /* Peripheral clock disable */
 252:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 675              		.loc 1 252 0
 676 000e 074A     		ldr	r2, .L67+4
 677 0010 936D     		ldr	r3, [r2, #88]
 678 0012 23F00203 		bic	r3, r3, #2
 679 0016 9365     		str	r3, [r2, #88]
 253:Src/tim.c     **** 
 254:Src/tim.c     ****     /* TIM3 DMA DeInit */
 255:Src/tim.c     ****     HAL_DMA_DeInit(tim_baseHandle->hdma[TIM_DMA_ID_CC4]);
 680              		.loc 1 255 0
 681 0018 006B     		ldr	r0, [r0, #48]
 682              	.LVL39:
 683 001a FFF7FEFF 		bl	HAL_DMA_DeInit
 684              	.LVL40:
 256:Src/tim.c     ****     HAL_DMA_DeInit(tim_baseHandle->hdma[TIM_DMA_ID_UPDATE]);
 685              		.loc 1 256 0
 686 001e 206A     		ldr	r0, [r4, #32]
 687 0020 FFF7FEFF 		bl	HAL_DMA_DeInit
 688              	.LVL41:
 257:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 258:Src/tim.c     **** 
 259:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 260:Src/tim.c     ****   }
 261:Src/tim.c     **** } 
 689              		.loc 1 261 0
 690 0024 10BD     		pop	{r4, pc}
 691              	.LVL42:
 692              	.L68:
 693 0026 00BF     		.align	2
 694              	.L67:
 695 0028 00040040 		.word	1073742848
 696 002c 00100240 		.word	1073876992
 697              		.cfi_endproc
 698              	.LFE136:
 700              		.comm	hdma_tim3_ch4_up,72,4
ARM GAS  /tmp/ccanFWvD.s 			page 19


 701              		.comm	htim3,64,4
 702              		.comm	htim2,64,4
 703              		.text
 704              	.Letext0:
 705              		.file 2 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/inc
 706              		.file 3 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/inc
 707              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 708              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 709              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l452xx.h"
 710              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 711              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 712              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 713              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 714              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 715              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 716              		.file 13 "Inc/tim.h"
 717              		.file 14 "Inc/main.h"
 718              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
ARM GAS  /tmp/ccanFWvD.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccanFWvD.s:18     .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccanFWvD.s:25     .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccanFWvD.s:65     .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccanFWvD.s:72     .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccanFWvD.s:162    .text.HAL_TIM_Base_MspInit:0000000000000060 $d
                            *COM*:0000000000000048 hdma_tim3_ch4_up
     /tmp/ccanFWvD.s:169    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccanFWvD.s:176    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccanFWvD.s:308    .text.HAL_TIM_MspPostInit:00000000000000a4 $d
     /tmp/ccanFWvD.s:315    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccanFWvD.s:322    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccanFWvD.s:453    .text.MX_TIM2_Init:000000000000009c $d
                            *COM*:0000000000000040 htim2
     /tmp/ccanFWvD.s:458    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccanFWvD.s:465    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccanFWvD.s:603    .text.MX_TIM3_Init:00000000000000a8 $d
                            *COM*:0000000000000040 htim3
     /tmp/ccanFWvD.s:609    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccanFWvD.s:616    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccanFWvD.s:642    .text.HAL_TIM_PWM_MspDeInit:0000000000000018 $d
     /tmp/ccanFWvD.s:647    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccanFWvD.s:654    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccanFWvD.s:695    .text.HAL_TIM_Base_MspDeInit:0000000000000028 $d

UNDEFINED SYMBOLS
HAL_DMA_Init
Error_Handler
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_DMA_DeInit
