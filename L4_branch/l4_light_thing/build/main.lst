ARM GAS  /tmp/ccjnskvb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB131:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "dma.h"
  24:Src/main.c    **** #include "tim.h"
  25:Src/main.c    **** #include "usart.h"
  26:Src/main.c    **** #include "gpio.h"
  27:Src/main.c    **** 
  28:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  29:Src/main.c    **** /* USER CODE BEGIN Includes */
  30:Src/main.c    **** #include "addressable_led_driver.h"
  31:Src/main.c    **** /* USER CODE END Includes */
ARM GAS  /tmp/ccjnskvb.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE END PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PD */
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  54:Src/main.c    **** void SystemClock_Config(void);
  55:Src/main.c    **** /* USER CODE BEGIN PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /**
  65:Src/main.c    ****   * @brief  The application entry point.
  66:Src/main.c    ****   * @retval int
  67:Src/main.c    ****   */
  68:Src/main.c    **** int main(void)
  69:Src/main.c    **** {
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE END 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Src/main.c    ****   HAL_Init();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE BEGIN Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Configure the system clock */
  84:Src/main.c    ****   SystemClock_Config();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END SysInit */
ARM GAS  /tmp/ccjnskvb.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Initialize all configured peripherals */
  91:Src/main.c    ****   MX_GPIO_Init();
  92:Src/main.c    ****   MX_DMA_Init();
  93:Src/main.c    ****   MX_TIM2_Init();
  94:Src/main.c    ****   MX_TIM3_Init();
  95:Src/main.c    ****   MX_USART2_UART_Init();
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    ****   AddrLED_Init();
  98:Src/main.c    ****   /* USER CODE END 2 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Infinite loop */
 101:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 102:Src/main.c    ****   while (1)
 103:Src/main.c    ****   {
 104:Src/main.c    ****     /* USER CODE END WHILE */
 105:Src/main.c    **** 
 106:Src/main.c    ****     /* USER CODE BEGIN 3 */
 107:Src/main.c    ****   }
 108:Src/main.c    ****   /* USER CODE END 3 */
 109:Src/main.c    **** }
 110:Src/main.c    **** 
 111:Src/main.c    **** /**
 112:Src/main.c    ****   * @brief System Clock Configuration
 113:Src/main.c    ****   * @retval None
 114:Src/main.c    ****   */
 115:Src/main.c    **** void SystemClock_Config(void)
 116:Src/main.c    **** {
  28              		.loc 1 116 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 192
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 B1B0     		sub	sp, sp, #196
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 208
 117:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 117 0
  42 0004 2422     		movs	r2, #36
  43 0006 0021     		movs	r1, #0
  44 0008 20A8     		add	r0, sp, #128
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 118:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 118 0
  48 000e 0024     		movs	r4, #0
  49 0010 1A94     		str	r4, [sp, #104]
  50 0012 1B94     		str	r4, [sp, #108]
  51 0014 1C94     		str	r4, [sp, #112]
  52 0016 1D94     		str	r4, [sp, #116]
  53 0018 1E94     		str	r4, [sp, #120]
 119:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
ARM GAS  /tmp/ccjnskvb.s 			page 4


  54              		.loc 1 119 0
  55 001a 6822     		movs	r2, #104
  56 001c 2146     		mov	r1, r4
  57 001e 6846     		mov	r0, sp
  58 0020 FFF7FEFF 		bl	memset
  59              	.LVL1:
 120:Src/main.c    **** 
 121:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 122:Src/main.c    ****   */
 123:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  60              		.loc 1 123 0
  61 0024 0225     		movs	r5, #2
  62 0026 1F95     		str	r5, [sp, #124]
 124:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  63              		.loc 1 124 0
  64 0028 4FF48073 		mov	r3, #256
  65 002c 2293     		str	r3, [sp, #136]
 125:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  66              		.loc 1 125 0
  67 002e 4023     		movs	r3, #64
  68 0030 2393     		str	r3, [sp, #140]
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  69              		.loc 1 126 0
  70 0032 2995     		str	r5, [sp, #164]
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  71              		.loc 1 127 0
  72 0034 2A95     		str	r5, [sp, #168]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
  73              		.loc 1 128 0
  74 0036 0123     		movs	r3, #1
  75 0038 2B93     		str	r3, [sp, #172]
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 10;
  76              		.loc 1 129 0
  77 003a 0A23     		movs	r3, #10
  78 003c 2C93     		str	r3, [sp, #176]
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
  79              		.loc 1 130 0
  80 003e 0723     		movs	r3, #7
  81 0040 2D93     		str	r3, [sp, #180]
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  82              		.loc 1 131 0
  83 0042 2E95     		str	r5, [sp, #184]
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  84              		.loc 1 132 0
  85 0044 2F95     		str	r5, [sp, #188]
 133:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  86              		.loc 1 133 0
  87 0046 1FA8     		add	r0, sp, #124
  88 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL2:
 134:Src/main.c    ****   {
 135:Src/main.c    ****     Error_Handler();
 136:Src/main.c    ****   }
 137:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 138:Src/main.c    ****   */
 139:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  90              		.loc 1 139 0
ARM GAS  /tmp/ccjnskvb.s 			page 5


  91 004c 0F23     		movs	r3, #15
  92 004e 1A93     		str	r3, [sp, #104]
 140:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 141:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  93              		.loc 1 141 0
  94 0050 0323     		movs	r3, #3
  95 0052 1B93     		str	r3, [sp, #108]
 142:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  96              		.loc 1 142 0
  97 0054 1C94     		str	r4, [sp, #112]
 143:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  98              		.loc 1 143 0
  99 0056 1D94     		str	r4, [sp, #116]
 144:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 100              		.loc 1 144 0
 101 0058 1E94     		str	r4, [sp, #120]
 145:Src/main.c    **** 
 146:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 102              		.loc 1 146 0
 103 005a 0421     		movs	r1, #4
 104 005c 1AA8     		add	r0, sp, #104
 105 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 106              	.LVL3:
 147:Src/main.c    ****   {
 148:Src/main.c    ****     Error_Handler();
 149:Src/main.c    ****   }
 150:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 107              		.loc 1 150 0
 108 0062 0095     		str	r5, [sp]
 151:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 109              		.loc 1 151 0
 110 0064 0994     		str	r4, [sp, #36]
 152:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 111              		.loc 1 152 0
 112 0066 6846     		mov	r0, sp
 113 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 114              	.LVL4:
 153:Src/main.c    ****   {
 154:Src/main.c    ****     Error_Handler();
 155:Src/main.c    ****   }
 156:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 157:Src/main.c    ****   */
 158:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 115              		.loc 1 158 0
 116 006c 4FF40070 		mov	r0, #512
 117 0070 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 118              	.LVL5:
 159:Src/main.c    ****   {
 160:Src/main.c    ****     Error_Handler();
 161:Src/main.c    ****   }
 162:Src/main.c    **** }
 119              		.loc 1 162 0
 120 0074 31B0     		add	sp, sp, #196
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 12
 123              		@ sp needed
 124 0076 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccjnskvb.s 			page 6


 125              		.cfi_endproc
 126              	.LFE131:
 128              		.section	.text.main,"ax",%progbits
 129              		.align	1
 130              		.global	main
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu fpv4-sp-d16
 136              	main:
 137              	.LFB130:
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
 138              		.loc 1 69 0
 139              		.cfi_startproc
 140              		@ Volatile: function does not return.
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143 0000 08B5     		push	{r3, lr}
 144              	.LCFI3:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 3, -8
 147              		.cfi_offset 14, -4
  77:Src/main.c    **** 
 148              		.loc 1 77 0
 149 0002 FFF7FEFF 		bl	HAL_Init
 150              	.LVL6:
  84:Src/main.c    **** 
 151              		.loc 1 84 0
 152 0006 FFF7FEFF 		bl	SystemClock_Config
 153              	.LVL7:
  91:Src/main.c    ****   MX_DMA_Init();
 154              		.loc 1 91 0
 155 000a FFF7FEFF 		bl	MX_GPIO_Init
 156              	.LVL8:
  92:Src/main.c    ****   MX_TIM2_Init();
 157              		.loc 1 92 0
 158 000e FFF7FEFF 		bl	MX_DMA_Init
 159              	.LVL9:
  93:Src/main.c    ****   MX_TIM3_Init();
 160              		.loc 1 93 0
 161 0012 FFF7FEFF 		bl	MX_TIM2_Init
 162              	.LVL10:
  94:Src/main.c    ****   MX_USART2_UART_Init();
 163              		.loc 1 94 0
 164 0016 FFF7FEFF 		bl	MX_TIM3_Init
 165              	.LVL11:
  95:Src/main.c    ****   /* USER CODE BEGIN 2 */
 166              		.loc 1 95 0
 167 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 168              	.LVL12:
  97:Src/main.c    ****   /* USER CODE END 2 */
 169              		.loc 1 97 0
 170 001e FFF7FEFF 		bl	AddrLED_Init
 171              	.LVL13:
 172              	.L4:
 173 0022 FEE7     		b	.L4
 174              		.cfi_endproc
ARM GAS  /tmp/ccjnskvb.s 			page 7


 175              	.LFE130:
 177              		.section	.text.Error_Handler,"ax",%progbits
 178              		.align	1
 179              		.global	Error_Handler
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu fpv4-sp-d16
 185              	Error_Handler:
 186              	.LFB132:
 163:Src/main.c    **** 
 164:Src/main.c    **** /* USER CODE BEGIN 4 */
 165:Src/main.c    **** 
 166:Src/main.c    **** /* USER CODE END 4 */
 167:Src/main.c    **** 
 168:Src/main.c    **** /**
 169:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 170:Src/main.c    ****   * @retval None
 171:Src/main.c    ****   */
 172:Src/main.c    **** void Error_Handler(void)
 173:Src/main.c    **** {
 187              		.loc 1 173 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 174:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 175:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 178:Src/main.c    **** }
 192              		.loc 1 178 0
 193 0000 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE132:
 197              		.text
 198              	.Letext0:
 199              		.file 2 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/inc
 200              		.file 3 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/inc
 201              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 202              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 203              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l452xx.h"
 204              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 205              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 206              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 207              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 208              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 209              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 210              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 211              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 212              		.file 15 "Inc/tim.h"
 213              		.file 16 "Inc/usart.h"
 214              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 215              		.file 18 "Inc/gpio.h"
 216              		.file 19 "Inc/dma.h"
 217              		.file 20 "Inc/addressable_led_driver.h"
 218              		.file 21 "<built-in>"
ARM GAS  /tmp/ccjnskvb.s 			page 8


ARM GAS  /tmp/ccjnskvb.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccjnskvb.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccjnskvb.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccjnskvb.s:129    .text.main:0000000000000000 $t
     /tmp/ccjnskvb.s:136    .text.main:0000000000000000 main
     /tmp/ccjnskvb.s:178    .text.Error_Handler:0000000000000000 $t
     /tmp/ccjnskvb.s:185    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM2_Init
MX_TIM3_Init
MX_USART2_UART_Init
AddrLED_Init
