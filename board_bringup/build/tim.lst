ARM GAS  /tmp/ccwrJ6Vb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PWM_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_TIM_PWM_MspInit:
  26              	.LFB316:
  27              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   * @attention
   8:Src/tim.c     ****   *
   9:Src/tim.c     ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/tim.c     ****   * All rights reserved.</center></h2>
  11:Src/tim.c     ****   *
  12:Src/tim.c     ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/tim.c     ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/tim.c     ****   * the License. You may obtain a copy of the License at:
  15:Src/tim.c     ****   *                             www.st.com/SLA0044
  16:Src/tim.c     ****   *
  17:Src/tim.c     ****   ******************************************************************************
  18:Src/tim.c     ****   */
  19:Src/tim.c     **** 
  20:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/tim.c     **** #include "tim.h"
  22:Src/tim.c     **** 
  23:Src/tim.c     **** /* USER CODE BEGIN 0 */
  24:Src/tim.c     **** 
  25:Src/tim.c     **** /* USER CODE END 0 */
  26:Src/tim.c     **** 
  27:Src/tim.c     **** TIM_HandleTypeDef htim3;
  28:Src/tim.c     **** DMA_HandleTypeDef hdma_tim3_ch4_up;
  29:Src/tim.c     **** 
  30:Src/tim.c     **** /* TIM3 init function */
  31:Src/tim.c     **** void MX_TIM3_Init(void)
ARM GAS  /tmp/ccwrJ6Vb.s 			page 2


  32:Src/tim.c     **** {
  33:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  34:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  35:Src/tim.c     **** 
  36:Src/tim.c     ****   htim3.Instance = TIM3;
  37:Src/tim.c     ****   htim3.Init.Prescaler = 0;
  38:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
  39:Src/tim.c     ****   htim3.Init.Period = 0;
  40:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  41:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  42:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
  43:Src/tim.c     ****   {
  44:Src/tim.c     ****     Error_Handler();
  45:Src/tim.c     ****   }
  46:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  47:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  48:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
  49:Src/tim.c     ****   {
  50:Src/tim.c     ****     Error_Handler();
  51:Src/tim.c     ****   }
  52:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  53:Src/tim.c     ****   sConfigOC.Pulse = 0;
  54:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  55:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  56:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
  57:Src/tim.c     ****   {
  58:Src/tim.c     ****     Error_Handler();
  59:Src/tim.c     ****   }
  60:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim3);
  61:Src/tim.c     **** 
  62:Src/tim.c     **** }
  63:Src/tim.c     **** 
  64:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
  65:Src/tim.c     **** {
  28              		.loc 1 65 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  66:Src/tim.c     **** 
  67:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
  33              		.loc 1 67 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 174B     		ldr	r3, .L10
  36 0004 9A42     		cmp	r2, r3
  37 0006 00D0     		beq	.L8
  38 0008 7047     		bx	lr
  39              	.L8:
  65:Src/tim.c     **** 
  40              		.loc 1 65 0
  41 000a 10B5     		push	{r4, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 4, -8
  45              		.cfi_offset 14, -4
  46 000c 82B0     		sub	sp, sp, #8
  47              	.LCFI1:
ARM GAS  /tmp/ccwrJ6Vb.s 			page 3


  48              		.cfi_def_cfa_offset 16
  49 000e 0446     		mov	r4, r0
  50              	.LBB2:
  68:Src/tim.c     ****   {
  69:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
  70:Src/tim.c     **** 
  71:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
  72:Src/tim.c     ****     /* TIM3 clock enable */
  73:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
  51              		.loc 1 73 0
  52 0010 03F50333 		add	r3, r3, #134144
  53 0014 9A6D     		ldr	r2, [r3, #88]
  54 0016 42F00202 		orr	r2, r2, #2
  55 001a 9A65     		str	r2, [r3, #88]
  56 001c 9B6D     		ldr	r3, [r3, #88]
  57 001e 03F00203 		and	r3, r3, #2
  58 0022 0193     		str	r3, [sp, #4]
  59 0024 019B     		ldr	r3, [sp, #4]
  60              	.LBE2:
  74:Src/tim.c     ****   
  75:Src/tim.c     ****     /* TIM3 DMA Init */
  76:Src/tim.c     ****     /* TIM3_CH4_UP Init */
  77:Src/tim.c     ****     hdma_tim3_ch4_up.Instance = DMA1_Channel3;
  61              		.loc 1 77 0
  62 0026 0F48     		ldr	r0, .L10+4
  63              	.LVL1:
  64 0028 0F4B     		ldr	r3, .L10+8
  65 002a 0360     		str	r3, [r0]
  78:Src/tim.c     ****     hdma_tim3_ch4_up.Init.Request = DMA_REQUEST_5;
  66              		.loc 1 78 0
  67 002c 0523     		movs	r3, #5
  68 002e 4360     		str	r3, [r0, #4]
  79:Src/tim.c     ****     hdma_tim3_ch4_up.Init.Direction = DMA_MEMORY_TO_PERIPH;
  69              		.loc 1 79 0
  70 0030 1023     		movs	r3, #16
  71 0032 8360     		str	r3, [r0, #8]
  80:Src/tim.c     ****     hdma_tim3_ch4_up.Init.PeriphInc = DMA_PINC_DISABLE;
  72              		.loc 1 80 0
  73 0034 0023     		movs	r3, #0
  74 0036 C360     		str	r3, [r0, #12]
  81:Src/tim.c     ****     hdma_tim3_ch4_up.Init.MemInc = DMA_MINC_ENABLE;
  75              		.loc 1 81 0
  76 0038 8022     		movs	r2, #128
  77 003a 0261     		str	r2, [r0, #16]
  82:Src/tim.c     ****     hdma_tim3_ch4_up.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
  78              		.loc 1 82 0
  79 003c 4FF48072 		mov	r2, #256
  80 0040 4261     		str	r2, [r0, #20]
  83:Src/tim.c     ****     hdma_tim3_ch4_up.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
  81              		.loc 1 83 0
  82 0042 8361     		str	r3, [r0, #24]
  84:Src/tim.c     ****     hdma_tim3_ch4_up.Init.Mode = DMA_NORMAL;
  83              		.loc 1 84 0
  84 0044 C361     		str	r3, [r0, #28]
  85:Src/tim.c     ****     hdma_tim3_ch4_up.Init.Priority = DMA_PRIORITY_LOW;
  85              		.loc 1 85 0
  86 0046 0362     		str	r3, [r0, #32]
ARM GAS  /tmp/ccwrJ6Vb.s 			page 4


  86:Src/tim.c     ****     if (HAL_DMA_Init(&hdma_tim3_ch4_up) != HAL_OK)
  87              		.loc 1 86 0
  88 0048 FFF7FEFF 		bl	HAL_DMA_Init
  89              	.LVL2:
  90 004c 28B9     		cbnz	r0, .L9
  91              	.L3:
  87:Src/tim.c     ****     {
  88:Src/tim.c     ****       Error_Handler();
  89:Src/tim.c     ****     }
  90:Src/tim.c     **** 
  91:Src/tim.c     ****     /* Several peripheral DMA handle pointers point to the same DMA handle.
  92:Src/tim.c     ****      Be aware that there is only one channel to perform all the requested DMAs. */
  93:Src/tim.c     ****     __HAL_LINKDMA(tim_pwmHandle,hdma[TIM_DMA_ID_CC4],hdma_tim3_ch4_up);
  92              		.loc 1 93 0
  93 004e 054B     		ldr	r3, .L10+4
  94 0050 2363     		str	r3, [r4, #48]
  94:Src/tim.c     ****     __HAL_LINKDMA(tim_pwmHandle,hdma[TIM_DMA_ID_UPDATE],hdma_tim3_ch4_up);
  95              		.loc 1 94 0
  96 0052 2362     		str	r3, [r4, #32]
  97 0054 9C62     		str	r4, [r3, #40]
  95:Src/tim.c     **** 
  96:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  97:Src/tim.c     **** 
  98:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
  99:Src/tim.c     ****   }
 100:Src/tim.c     **** }
  98              		.loc 1 100 0
  99 0056 02B0     		add	sp, sp, #8
 100              	.LCFI2:
 101              		.cfi_remember_state
 102              		.cfi_def_cfa_offset 8
 103              		@ sp needed
 104 0058 10BD     		pop	{r4, pc}
 105              	.LVL3:
 106              	.L9:
 107              	.LCFI3:
 108              		.cfi_restore_state
  88:Src/tim.c     ****     }
 109              		.loc 1 88 0
 110 005a FFF7FEFF 		bl	Error_Handler
 111              	.LVL4:
 112 005e F6E7     		b	.L3
 113              	.L11:
 114              		.align	2
 115              	.L10:
 116 0060 00040040 		.word	1073742848
 117 0064 00000000 		.word	hdma_tim3_ch4_up
 118 0068 30000240 		.word	1073872944
 119              		.cfi_endproc
 120              	.LFE316:
 122              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 123              		.align	1
 124              		.global	HAL_TIM_MspPostInit
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccwrJ6Vb.s 			page 5


 130              	HAL_TIM_MspPostInit:
 131              	.LFB317:
 101:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 102:Src/tim.c     **** {
 132              		.loc 1 102 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 24
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              	.LVL5:
 137 0000 00B5     		push	{lr}
 138              	.LCFI4:
 139              		.cfi_def_cfa_offset 4
 140              		.cfi_offset 14, -4
 141 0002 87B0     		sub	sp, sp, #28
 142              	.LCFI5:
 143              		.cfi_def_cfa_offset 32
 103:Src/tim.c     **** 
 104:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 144              		.loc 1 104 0
 145 0004 0023     		movs	r3, #0
 146 0006 0193     		str	r3, [sp, #4]
 147 0008 0293     		str	r3, [sp, #8]
 148 000a 0393     		str	r3, [sp, #12]
 149 000c 0493     		str	r3, [sp, #16]
 150 000e 0593     		str	r3, [sp, #20]
 105:Src/tim.c     ****   if(timHandle->Instance==TIM3)
 151              		.loc 1 105 0
 152 0010 0268     		ldr	r2, [r0]
 153 0012 0D4B     		ldr	r3, .L16
 154 0014 9A42     		cmp	r2, r3
 155 0016 02D0     		beq	.L15
 156              	.LVL6:
 157              	.L12:
 106:Src/tim.c     ****   {
 107:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 108:Src/tim.c     **** 
 109:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 110:Src/tim.c     ****   
 111:Src/tim.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 112:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 113:Src/tim.c     ****     PB1     ------> TIM3_CH4 
 114:Src/tim.c     ****     */
 115:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_1;
 116:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 117:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 118:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 119:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 120:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 121:Src/tim.c     **** 
 122:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 123:Src/tim.c     **** 
 124:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
 125:Src/tim.c     ****   }
 126:Src/tim.c     **** 
 127:Src/tim.c     **** }
 158              		.loc 1 127 0
 159 0018 07B0     		add	sp, sp, #28
ARM GAS  /tmp/ccwrJ6Vb.s 			page 6


 160              	.LCFI6:
 161              		.cfi_remember_state
 162              		.cfi_def_cfa_offset 4
 163              		@ sp needed
 164 001a 5DF804FB 		ldr	pc, [sp], #4
 165              	.LVL7:
 166              	.L15:
 167              	.LCFI7:
 168              		.cfi_restore_state
 169              	.LBB3:
 111:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 170              		.loc 1 111 0
 171 001e 03F50333 		add	r3, r3, #134144
 172 0022 DA6C     		ldr	r2, [r3, #76]
 173 0024 42F00202 		orr	r2, r2, #2
 174 0028 DA64     		str	r2, [r3, #76]
 175 002a DB6C     		ldr	r3, [r3, #76]
 176 002c 03F00203 		and	r3, r3, #2
 177 0030 0093     		str	r3, [sp]
 178 0032 009B     		ldr	r3, [sp]
 179              	.LBE3:
 115:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 180              		.loc 1 115 0
 181 0034 0223     		movs	r3, #2
 182 0036 0193     		str	r3, [sp, #4]
 116:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 183              		.loc 1 116 0
 184 0038 0293     		str	r3, [sp, #8]
 119:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 185              		.loc 1 119 0
 186 003a 0593     		str	r3, [sp, #20]
 120:Src/tim.c     **** 
 187              		.loc 1 120 0
 188 003c 01A9     		add	r1, sp, #4
 189 003e 0348     		ldr	r0, .L16+4
 190              	.LVL8:
 191 0040 FFF7FEFF 		bl	HAL_GPIO_Init
 192              	.LVL9:
 193              		.loc 1 127 0
 194 0044 E8E7     		b	.L12
 195              	.L17:
 196 0046 00BF     		.align	2
 197              	.L16:
 198 0048 00040040 		.word	1073742848
 199 004c 00040048 		.word	1207960576
 200              		.cfi_endproc
 201              	.LFE317:
 203              		.section	.text.MX_TIM3_Init,"ax",%progbits
 204              		.align	1
 205              		.global	MX_TIM3_Init
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	MX_TIM3_Init:
 212              	.LFB315:
  32:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  /tmp/ccwrJ6Vb.s 			page 7


 213              		.loc 1 32 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 40
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 00B5     		push	{lr}
 218              	.LCFI8:
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 14, -4
 221 0002 8BB0     		sub	sp, sp, #44
 222              	.LCFI9:
 223              		.cfi_def_cfa_offset 48
  33:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 224              		.loc 1 33 0
 225 0004 0023     		movs	r3, #0
 226 0006 0793     		str	r3, [sp, #28]
 227 0008 0893     		str	r3, [sp, #32]
 228 000a 0993     		str	r3, [sp, #36]
  34:Src/tim.c     **** 
 229              		.loc 1 34 0
 230 000c 0093     		str	r3, [sp]
 231 000e 0193     		str	r3, [sp, #4]
 232 0010 0293     		str	r3, [sp, #8]
 233 0012 0393     		str	r3, [sp, #12]
 234 0014 0493     		str	r3, [sp, #16]
 235 0016 0593     		str	r3, [sp, #20]
 236 0018 0693     		str	r3, [sp, #24]
  36:Src/tim.c     ****   htim3.Init.Prescaler = 0;
 237              		.loc 1 36 0
 238 001a 1748     		ldr	r0, .L26
 239 001c 174A     		ldr	r2, .L26+4
 240 001e 0260     		str	r2, [r0]
  37:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 241              		.loc 1 37 0
 242 0020 4360     		str	r3, [r0, #4]
  38:Src/tim.c     ****   htim3.Init.Period = 0;
 243              		.loc 1 38 0
 244 0022 8360     		str	r3, [r0, #8]
  39:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 245              		.loc 1 39 0
 246 0024 C360     		str	r3, [r0, #12]
  40:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 247              		.loc 1 40 0
 248 0026 0361     		str	r3, [r0, #16]
  41:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 249              		.loc 1 41 0
 250 0028 8361     		str	r3, [r0, #24]
  42:Src/tim.c     ****   {
 251              		.loc 1 42 0
 252 002a FFF7FEFF 		bl	HAL_TIM_PWM_Init
 253              	.LVL10:
 254 002e C8B9     		cbnz	r0, .L23
 255              	.L19:
  46:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 256              		.loc 1 46 0
 257 0030 0023     		movs	r3, #0
 258 0032 0793     		str	r3, [sp, #28]
  47:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
ARM GAS  /tmp/ccwrJ6Vb.s 			page 8


 259              		.loc 1 47 0
 260 0034 0993     		str	r3, [sp, #36]
  48:Src/tim.c     ****   {
 261              		.loc 1 48 0
 262 0036 07A9     		add	r1, sp, #28
 263 0038 0F48     		ldr	r0, .L26
 264 003a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 265              	.LVL11:
 266 003e A0B9     		cbnz	r0, .L24
 267              	.L20:
  52:Src/tim.c     ****   sConfigOC.Pulse = 0;
 268              		.loc 1 52 0
 269 0040 6023     		movs	r3, #96
 270 0042 0093     		str	r3, [sp]
  53:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 271              		.loc 1 53 0
 272 0044 0023     		movs	r3, #0
 273 0046 0193     		str	r3, [sp, #4]
  54:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 274              		.loc 1 54 0
 275 0048 0293     		str	r3, [sp, #8]
  55:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 276              		.loc 1 55 0
 277 004a 0493     		str	r3, [sp, #16]
  56:Src/tim.c     ****   {
 278              		.loc 1 56 0
 279 004c 0C22     		movs	r2, #12
 280 004e 6946     		mov	r1, sp
 281 0050 0948     		ldr	r0, .L26
 282 0052 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 283              	.LVL12:
 284 0056 58B9     		cbnz	r0, .L25
 285              	.L21:
  60:Src/tim.c     **** 
 286              		.loc 1 60 0
 287 0058 0748     		ldr	r0, .L26
 288 005a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 289              	.LVL13:
  62:Src/tim.c     **** 
 290              		.loc 1 62 0
 291 005e 0BB0     		add	sp, sp, #44
 292              	.LCFI10:
 293              		.cfi_remember_state
 294              		.cfi_def_cfa_offset 4
 295              		@ sp needed
 296 0060 5DF804FB 		ldr	pc, [sp], #4
 297              	.L23:
 298              	.LCFI11:
 299              		.cfi_restore_state
  44:Src/tim.c     ****   }
 300              		.loc 1 44 0
 301 0064 FFF7FEFF 		bl	Error_Handler
 302              	.LVL14:
 303 0068 E2E7     		b	.L19
 304              	.L24:
  50:Src/tim.c     ****   }
 305              		.loc 1 50 0
ARM GAS  /tmp/ccwrJ6Vb.s 			page 9


 306 006a FFF7FEFF 		bl	Error_Handler
 307              	.LVL15:
 308 006e E7E7     		b	.L20
 309              	.L25:
  58:Src/tim.c     ****   }
 310              		.loc 1 58 0
 311 0070 FFF7FEFF 		bl	Error_Handler
 312              	.LVL16:
 313 0074 F0E7     		b	.L21
 314              	.L27:
 315 0076 00BF     		.align	2
 316              	.L26:
 317 0078 00000000 		.word	htim3
 318 007c 00040040 		.word	1073742848
 319              		.cfi_endproc
 320              	.LFE315:
 322              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 323              		.align	1
 324              		.global	HAL_TIM_PWM_MspDeInit
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu fpv4-sp-d16
 330              	HAL_TIM_PWM_MspDeInit:
 331              	.LFB318:
 128:Src/tim.c     **** 
 129:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 130:Src/tim.c     **** {
 332              		.loc 1 130 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              	.LVL17:
 131:Src/tim.c     **** 
 132:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM3)
 337              		.loc 1 132 0
 338 0000 0268     		ldr	r2, [r0]
 339 0002 094B     		ldr	r3, .L35
 340 0004 9A42     		cmp	r2, r3
 341 0006 00D0     		beq	.L34
 342 0008 7047     		bx	lr
 343              	.L34:
 130:Src/tim.c     **** 
 344              		.loc 1 130 0
 345 000a 10B5     		push	{r4, lr}
 346              	.LCFI12:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 4, -8
 349              		.cfi_offset 14, -4
 350 000c 0446     		mov	r4, r0
 133:Src/tim.c     ****   {
 134:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 135:Src/tim.c     **** 
 136:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 137:Src/tim.c     ****     /* Peripheral clock disable */
 138:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 351              		.loc 1 138 0
ARM GAS  /tmp/ccwrJ6Vb.s 			page 10


 352 000e 074A     		ldr	r2, .L35+4
 353 0010 936D     		ldr	r3, [r2, #88]
 354 0012 23F00203 		bic	r3, r3, #2
 355 0016 9365     		str	r3, [r2, #88]
 139:Src/tim.c     **** 
 140:Src/tim.c     ****     /* TIM3 DMA DeInit */
 141:Src/tim.c     ****     HAL_DMA_DeInit(tim_pwmHandle->hdma[TIM_DMA_ID_CC4]);
 356              		.loc 1 141 0
 357 0018 006B     		ldr	r0, [r0, #48]
 358              	.LVL18:
 359 001a FFF7FEFF 		bl	HAL_DMA_DeInit
 360              	.LVL19:
 142:Src/tim.c     ****     HAL_DMA_DeInit(tim_pwmHandle->hdma[TIM_DMA_ID_UPDATE]);
 361              		.loc 1 142 0
 362 001e 206A     		ldr	r0, [r4, #32]
 363 0020 FFF7FEFF 		bl	HAL_DMA_DeInit
 364              	.LVL20:
 143:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 144:Src/tim.c     **** 
 145:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 146:Src/tim.c     ****   }
 147:Src/tim.c     **** } 
 365              		.loc 1 147 0
 366 0024 10BD     		pop	{r4, pc}
 367              	.LVL21:
 368              	.L36:
 369 0026 00BF     		.align	2
 370              	.L35:
 371 0028 00040040 		.word	1073742848
 372 002c 00100240 		.word	1073876992
 373              		.cfi_endproc
 374              	.LFE318:
 376              		.comm	hdma_tim3_ch4_up,72,4
 377              		.comm	htim3,64,4
 378              		.text
 379              	.Letext0:
 380              		.file 2 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/inc
 381              		.file 3 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/inc
 382              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 383              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 384              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 385              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 386              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 387              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 388              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 389              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 390              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 391              		.file 13 "Inc/tim.h"
 392              		.file 14 "Inc/main.h"
 393              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
ARM GAS  /tmp/ccwrJ6Vb.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccwrJ6Vb.s:18     .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccwrJ6Vb.s:25     .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccwrJ6Vb.s:116    .text.HAL_TIM_PWM_MspInit:0000000000000060 $d
                            *COM*:0000000000000048 hdma_tim3_ch4_up
     /tmp/ccwrJ6Vb.s:123    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccwrJ6Vb.s:130    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccwrJ6Vb.s:198    .text.HAL_TIM_MspPostInit:0000000000000048 $d
     /tmp/ccwrJ6Vb.s:204    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccwrJ6Vb.s:211    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccwrJ6Vb.s:317    .text.MX_TIM3_Init:0000000000000078 $d
                            *COM*:0000000000000040 htim3
     /tmp/ccwrJ6Vb.s:323    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccwrJ6Vb.s:330    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccwrJ6Vb.s:371    .text.HAL_TIM_PWM_MspDeInit:0000000000000028 $d

UNDEFINED SYMBOLS
HAL_DMA_Init
Error_Handler
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_DMA_DeInit
