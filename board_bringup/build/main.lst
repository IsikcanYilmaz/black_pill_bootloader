ARM GAS  /tmp/ccYbNIUA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB319:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "dma.h"
  25:Src/main.c    **** #include "i2c.h"
  26:Src/main.c    **** #include "tim.h"
  27:Src/main.c    **** #include "usb_device.h"
  28:Src/main.c    **** #include "gpio.h"
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN Includes */
ARM GAS  /tmp/ccYbNIUA.s 			page 2


  32:Src/main.c    **** #include <string.h>
  33:Src/main.c    **** /* USER CODE END Includes */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PD */
  42:Src/main.c    **** /* USER CODE END PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** /* USER CODE BEGIN PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /**
  67:Src/main.c    ****   * @brief  The application entry point.
  68:Src/main.c    ****   * @retval int
  69:Src/main.c    ****   */
  70:Src/main.c    **** int main(void)
  71:Src/main.c    **** {
  72:Src/main.c    ****   /* USER CODE BEGIN 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* USER CODE END 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Src/main.c    ****   HAL_Init();
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE BEGIN Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Configure the system clock */
  86:Src/main.c    ****   SystemClock_Config();
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccYbNIUA.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE END SysInit */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Initialize all configured peripherals */
  93:Src/main.c    ****   MX_GPIO_Init();
  94:Src/main.c    ****   MX_DMA_Init();
  95:Src/main.c    ****   MX_ADC1_Init();
  96:Src/main.c    ****   MX_I2C1_Init();
  97:Src/main.c    ****   MX_I2C2_Init();
  98:Src/main.c    ****   MX_TIM3_Init();
  99:Src/main.c    ****   MX_USB_DEVICE_Init();
 100:Src/main.c    ****   /* USER CODE BEGIN 2 */
 101:Src/main.c    ****   /*AddrLEDManager_Init();*/
 102:Src/main.c    ****   /*AddrLEDManager_SanityTest();*/
 103:Src/main.c    ****   /*AddrLEDManager_RefreshTimerStart();*/
 104:Src/main.c    ****   /* USER CODE END 2 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Infinite loop */
 107:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 108:Src/main.c    ****   while (1)
 109:Src/main.c    ****   {
 110:Src/main.c    ****     /* USER CODE END WHILE */
 111:Src/main.c    **** 
 112:Src/main.c    ****     /* USER CODE BEGIN 3 */
 113:Src/main.c    ****   }
 114:Src/main.c    ****   /* USER CODE END 3 */
 115:Src/main.c    **** }
 116:Src/main.c    **** 
 117:Src/main.c    **** /**
 118:Src/main.c    ****   * @brief System Clock Configuration
 119:Src/main.c    ****   * @retval None
 120:Src/main.c    ****   */
 121:Src/main.c    **** void SystemClock_Config(void)
 122:Src/main.c    **** {
  28              		.loc 1 122 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 224
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 B9B0     		sub	sp, sp, #228
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 248
 123:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  43              		.loc 1 123 0
  44 0004 2422     		movs	r2, #36
  45 0006 0021     		movs	r1, #0
  46 0008 28A8     		add	r0, sp, #160
  47 000a FFF7FEFF 		bl	memset
  48              	.LVL0:
 124:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccYbNIUA.s 			page 4


  49              		.loc 1 124 0
  50 000e 0024     		movs	r4, #0
  51 0010 2294     		str	r4, [sp, #136]
  52 0012 2394     		str	r4, [sp, #140]
  53 0014 2494     		str	r4, [sp, #144]
  54 0016 2594     		str	r4, [sp, #148]
  55 0018 2694     		str	r4, [sp, #152]
 125:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  56              		.loc 1 125 0
  57 001a 8822     		movs	r2, #136
  58 001c 2146     		mov	r1, r4
  59 001e 6846     		mov	r0, sp
  60 0020 FFF7FEFF 		bl	memset
  61              	.LVL1:
 126:Src/main.c    **** 
 127:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 128:Src/main.c    ****   */
 129:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
  62              		.loc 1 129 0
  63 0024 1023     		movs	r3, #16
  64 0026 2793     		str	r3, [sp, #156]
 130:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
  65              		.loc 1 130 0
  66 0028 0126     		movs	r6, #1
  67 002a 2D96     		str	r6, [sp, #180]
 131:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 132:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
  68              		.loc 1 132 0
  69 002c 6023     		movs	r3, #96
  70 002e 2F93     		str	r3, [sp, #188]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  71              		.loc 1 133 0
  72 0030 0225     		movs	r5, #2
  73 0032 3195     		str	r5, [sp, #196]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
  74              		.loc 1 134 0
  75 0034 3296     		str	r6, [sp, #200]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
  76              		.loc 1 135 0
  77 0036 3396     		str	r6, [sp, #204]
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 40;
  78              		.loc 1 136 0
  79 0038 2823     		movs	r3, #40
  80 003a 3493     		str	r3, [sp, #208]
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
  81              		.loc 1 137 0
  82 003c 0727     		movs	r7, #7
  83 003e 3597     		str	r7, [sp, #212]
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  84              		.loc 1 138 0
  85 0040 3695     		str	r5, [sp, #216]
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  86              		.loc 1 139 0
  87 0042 3795     		str	r5, [sp, #220]
 140:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  88              		.loc 1 140 0
  89 0044 27A8     		add	r0, sp, #156
ARM GAS  /tmp/ccYbNIUA.s 			page 5


  90 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
  91              	.LVL2:
 141:Src/main.c    ****   {
 142:Src/main.c    ****     Error_Handler();
 143:Src/main.c    ****   }
 144:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 145:Src/main.c    ****   */
 146:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  92              		.loc 1 146 0
  93 004a 0F23     		movs	r3, #15
  94 004c 2293     		str	r3, [sp, #136]
 147:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  95              		.loc 1 148 0
  96 004e 0323     		movs	r3, #3
  97 0050 2393     		str	r3, [sp, #140]
 149:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 149 0
  99 0052 2494     		str	r4, [sp, #144]
 150:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 100              		.loc 1 150 0
 101 0054 2594     		str	r4, [sp, #148]
 151:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 151 0
 103 0056 2694     		str	r4, [sp, #152]
 152:Src/main.c    **** 
 153:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 104              		.loc 1 153 0
 105 0058 0421     		movs	r1, #4
 106 005a 22A8     		add	r0, sp, #136
 107 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 108              	.LVL3:
 154:Src/main.c    ****   {
 155:Src/main.c    ****     Error_Handler();
 156:Src/main.c    ****   }
 157:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_I2C2
 109              		.loc 1 157 0
 110 0060 46F2C003 		movw	r3, #24768
 111 0064 0093     		str	r3, [sp]
 158:Src/main.c    ****                               |RCC_PERIPHCLK_USB|RCC_PERIPHCLK_ADC;
 159:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 112              		.loc 1 159 0
 113 0066 1494     		str	r4, [sp, #80]
 160:Src/main.c    ****   PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 114              		.loc 1 160 0
 115 0068 1594     		str	r4, [sp, #84]
 161:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 116              		.loc 1 161 0
 117 006a 4FF08053 		mov	r3, #268435456
 118 006e 1E93     		str	r3, [sp, #120]
 162:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 119              		.loc 1 162 0
 120 0070 4FF08063 		mov	r3, #67108864
 121 0074 1B93     		str	r3, [sp, #108]
 163:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 122              		.loc 1 163 0
 123 0076 0196     		str	r6, [sp, #4]
ARM GAS  /tmp/ccYbNIUA.s 			page 6


 164:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 124              		.loc 1 164 0
 125 0078 0296     		str	r6, [sp, #8]
 165:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 126              		.loc 1 165 0
 127 007a 1823     		movs	r3, #24
 128 007c 0393     		str	r3, [sp, #12]
 166:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 129              		.loc 1 166 0
 130 007e 0497     		str	r7, [sp, #16]
 167:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 131              		.loc 1 167 0
 132 0080 0595     		str	r5, [sp, #20]
 168:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 133              		.loc 1 168 0
 134 0082 0695     		str	r5, [sp, #24]
 169:Src/main.c    ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK|RCC_PLLSAI1_ADC1CLK;
 135              		.loc 1 169 0
 136 0084 4FF08873 		mov	r3, #17825792
 137 0088 0793     		str	r3, [sp, #28]
 170:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 138              		.loc 1 170 0
 139 008a 6846     		mov	r0, sp
 140 008c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 141              	.LVL4:
 171:Src/main.c    ****   {
 172:Src/main.c    ****     Error_Handler();
 173:Src/main.c    ****   }
 174:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 175:Src/main.c    ****   */
 176:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 142              		.loc 1 176 0
 143 0090 4FF40070 		mov	r0, #512
 144 0094 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 145              	.LVL5:
 177:Src/main.c    ****   {
 178:Src/main.c    ****     Error_Handler();
 179:Src/main.c    ****   }
 180:Src/main.c    **** }
 146              		.loc 1 180 0
 147 0098 39B0     		add	sp, sp, #228
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 20
 150              		@ sp needed
 151 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 152              		.cfi_endproc
 153              	.LFE319:
 155              		.section	.text.main,"ax",%progbits
 156              		.align	1
 157              		.global	main
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	main:
 164              	.LFB318:
  71:Src/main.c    ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/ccYbNIUA.s 			page 7


 165              		.loc 1 71 0
 166              		.cfi_startproc
 167              		@ Volatile: function does not return.
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 08B5     		push	{r3, lr}
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 3, -8
 174              		.cfi_offset 14, -4
  79:Src/main.c    **** 
 175              		.loc 1 79 0
 176 0002 FFF7FEFF 		bl	HAL_Init
 177              	.LVL6:
  86:Src/main.c    **** 
 178              		.loc 1 86 0
 179 0006 FFF7FEFF 		bl	SystemClock_Config
 180              	.LVL7:
  93:Src/main.c    ****   MX_DMA_Init();
 181              		.loc 1 93 0
 182 000a FFF7FEFF 		bl	MX_GPIO_Init
 183              	.LVL8:
  94:Src/main.c    ****   MX_ADC1_Init();
 184              		.loc 1 94 0
 185 000e FFF7FEFF 		bl	MX_DMA_Init
 186              	.LVL9:
  95:Src/main.c    ****   MX_I2C1_Init();
 187              		.loc 1 95 0
 188 0012 FFF7FEFF 		bl	MX_ADC1_Init
 189              	.LVL10:
  96:Src/main.c    ****   MX_I2C2_Init();
 190              		.loc 1 96 0
 191 0016 FFF7FEFF 		bl	MX_I2C1_Init
 192              	.LVL11:
  97:Src/main.c    ****   MX_TIM3_Init();
 193              		.loc 1 97 0
 194 001a FFF7FEFF 		bl	MX_I2C2_Init
 195              	.LVL12:
  98:Src/main.c    ****   MX_USB_DEVICE_Init();
 196              		.loc 1 98 0
 197 001e FFF7FEFF 		bl	MX_TIM3_Init
 198              	.LVL13:
  99:Src/main.c    ****   /* USER CODE BEGIN 2 */
 199              		.loc 1 99 0
 200 0022 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 201              	.LVL14:
 202              	.L4:
 203 0026 FEE7     		b	.L4
 204              		.cfi_endproc
 205              	.LFE318:
 207              		.section	.text.Error_Handler,"ax",%progbits
 208              		.align	1
 209              		.global	Error_Handler
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccYbNIUA.s 			page 8


 215              	Error_Handler:
 216              	.LFB320:
 181:Src/main.c    **** 
 182:Src/main.c    **** /* USER CODE BEGIN 4 */
 183:Src/main.c    **** 
 184:Src/main.c    **** /* USER CODE END 4 */
 185:Src/main.c    **** 
 186:Src/main.c    **** /**
 187:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 188:Src/main.c    ****   * @retval None
 189:Src/main.c    ****   */
 190:Src/main.c    **** void Error_Handler(void)
 191:Src/main.c    **** {
 217              		.loc 1 191 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 192:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 193:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 196:Src/main.c    **** }
 222              		.loc 1 196 0
 223 0000 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE320:
 227              		.text
 228              	.Letext0:
 229              		.file 2 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/inc
 230              		.file 3 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/inc
 231              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 232              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 233              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 234              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 235              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 236              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 237              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 238              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 239              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 240              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 241              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 242              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 243              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 244              		.file 17 "Inc/adc.h"
 245              		.file 18 "Inc/i2c.h"
 246              		.file 19 "Inc/tim.h"
 247              		.file 20 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/in
 248              		.file 21 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/in
 249              		.file 22 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none
 250              		.file 23 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/in
 251              		.file 24 "/home/jon/KODMOD/EMBEDDED_TOOLCHAINS/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/in
 252              		.file 25 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 253              		.file 26 "Inc/gpio.h"
 254              		.file 27 "Inc/dma.h"
 255              		.file 28 "Inc/usb_device.h"
 256              		.file 29 "<built-in>"
ARM GAS  /tmp/ccYbNIUA.s 			page 9


ARM GAS  /tmp/ccYbNIUA.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccYbNIUA.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccYbNIUA.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccYbNIUA.s:156    .text.main:0000000000000000 $t
     /tmp/ccYbNIUA.s:163    .text.main:0000000000000000 main
     /tmp/ccYbNIUA.s:208    .text.Error_Handler:0000000000000000 $t
     /tmp/ccYbNIUA.s:215    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_I2C1_Init
MX_I2C2_Init
MX_TIM3_Init
MX_USB_DEVICE_Init
