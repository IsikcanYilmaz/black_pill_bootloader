ARM GAS  /tmp/ccXByMiy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f3xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SystemCoreClock
  18              		.section	.data.SystemCoreClock,"aw",%progbits
  19              		.align	2
  22              	SystemCoreClock:
  23 0000 00127A00 		.word	8000000
  24              		.global	AHBPrescTable
  25              		.section	.rodata.AHBPrescTable,"a",%progbits
  26              		.align	2
  29              	AHBPrescTable:
  30 0000 00       		.byte	0
  31 0001 00       		.byte	0
  32 0002 00       		.byte	0
  33 0003 00       		.byte	0
  34 0004 00       		.byte	0
  35 0005 00       		.byte	0
  36 0006 00       		.byte	0
  37 0007 00       		.byte	0
  38 0008 01       		.byte	1
  39 0009 02       		.byte	2
  40 000a 03       		.byte	3
  41 000b 04       		.byte	4
  42 000c 06       		.byte	6
  43 000d 07       		.byte	7
  44 000e 08       		.byte	8
  45 000f 09       		.byte	9
  46              		.global	APBPrescTable
  47              		.section	.rodata.APBPrescTable,"a",%progbits
  48              		.align	2
  51              	APBPrescTable:
  52 0000 00       		.byte	0
  53 0001 00       		.byte	0
  54 0002 00       		.byte	0
  55 0003 00       		.byte	0
  56 0004 01       		.byte	1
  57 0005 02       		.byte	2
  58 0006 03       		.byte	3
  59 0007 04       		.byte	4
  60              		.section	.text.SystemInit,"ax",%progbits
  61              		.align	1
  62              		.global	SystemInit
  63              		.syntax unified
ARM GAS  /tmp/ccXByMiy.s 			page 2


  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	SystemInit:
  69              	.LFB130:
  70              		.file 1 "../Core/Src/system_stm32f3xx.c"
   1:../Core/Src/system_stm32f3xx.c **** /**
   2:../Core/Src/system_stm32f3xx.c ****   ******************************************************************************
   3:../Core/Src/system_stm32f3xx.c ****   * @file    system_stm32f3xx.c
   4:../Core/Src/system_stm32f3xx.c ****   * @author  MCD Application Team
   5:../Core/Src/system_stm32f3xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   6:../Core/Src/system_stm32f3xx.c ****   *
   7:../Core/Src/system_stm32f3xx.c ****   * 1. This file provides two functions and one global variable to be called from
   8:../Core/Src/system_stm32f3xx.c ****   *    user application:
   9:../Core/Src/system_stm32f3xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:../Core/Src/system_stm32f3xx.c ****   *                      before branch to main program. This call is made inside
  11:../Core/Src/system_stm32f3xx.c ****   *                      the "startup_stm32f3xx.s" file.
  12:../Core/Src/system_stm32f3xx.c ****   *
  13:../Core/Src/system_stm32f3xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:../Core/Src/system_stm32f3xx.c ****   *                                  by the user application to setup the SysTick
  15:../Core/Src/system_stm32f3xx.c ****   *                                  timer or configure other parameters.
  16:../Core/Src/system_stm32f3xx.c ****   *
  17:../Core/Src/system_stm32f3xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:../Core/Src/system_stm32f3xx.c ****   *                                 be called whenever the core clock is changed
  19:../Core/Src/system_stm32f3xx.c ****   *                                 during program execution.
  20:../Core/Src/system_stm32f3xx.c ****   *
  21:../Core/Src/system_stm32f3xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  22:../Core/Src/system_stm32f3xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f3xx.s" file, to
  23:../Core/Src/system_stm32f3xx.c ****   *    configure the system clock before to branch to main program.
  24:../Core/Src/system_stm32f3xx.c ****   *
  25:../Core/Src/system_stm32f3xx.c ****   * 3. This file configures the system clock as follows:
  26:../Core/Src/system_stm32f3xx.c ****   *=============================================================================
  27:../Core/Src/system_stm32f3xx.c ****   *                         Supported STM32F3xx device
  28:../Core/Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  29:../Core/Src/system_stm32f3xx.c ****   *        System Clock source                    | HSI
  30:../Core/Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  31:../Core/Src/system_stm32f3xx.c ****   *        SYSCLK(Hz)                             | 8000000
  32:../Core/Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  33:../Core/Src/system_stm32f3xx.c ****   *        HCLK(Hz)                               | 8000000
  34:../Core/Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  35:../Core/Src/system_stm32f3xx.c ****   *        AHB Prescaler                          | 1
  36:../Core/Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  37:../Core/Src/system_stm32f3xx.c ****   *        APB2 Prescaler                         | 1
  38:../Core/Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  39:../Core/Src/system_stm32f3xx.c ****   *        APB1 Prescaler                         | 1
  40:../Core/Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  41:../Core/Src/system_stm32f3xx.c ****   *        USB Clock                              | DISABLE
  42:../Core/Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  43:../Core/Src/system_stm32f3xx.c ****   *=============================================================================
  44:../Core/Src/system_stm32f3xx.c ****   ******************************************************************************
  45:../Core/Src/system_stm32f3xx.c ****   * @attention
  46:../Core/Src/system_stm32f3xx.c ****   *
  47:../Core/Src/system_stm32f3xx.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  48:../Core/Src/system_stm32f3xx.c ****   * All rights reserved.</center></h2>
  49:../Core/Src/system_stm32f3xx.c ****   *
  50:../Core/Src/system_stm32f3xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  51:../Core/Src/system_stm32f3xx.c ****   * the "License"; You may not use this file except in compliance with the
ARM GAS  /tmp/ccXByMiy.s 			page 3


  52:../Core/Src/system_stm32f3xx.c ****   * License. You may obtain a copy of the License at:
  53:../Core/Src/system_stm32f3xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  54:../Core/Src/system_stm32f3xx.c ****   *
  55:../Core/Src/system_stm32f3xx.c ****   ******************************************************************************
  56:../Core/Src/system_stm32f3xx.c ****   */
  57:../Core/Src/system_stm32f3xx.c **** 
  58:../Core/Src/system_stm32f3xx.c **** /** @addtogroup CMSIS
  59:../Core/Src/system_stm32f3xx.c ****   * @{
  60:../Core/Src/system_stm32f3xx.c ****   */
  61:../Core/Src/system_stm32f3xx.c **** 
  62:../Core/Src/system_stm32f3xx.c **** /** @addtogroup stm32f3xx_system
  63:../Core/Src/system_stm32f3xx.c ****   * @{
  64:../Core/Src/system_stm32f3xx.c ****   */
  65:../Core/Src/system_stm32f3xx.c **** 
  66:../Core/Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Includes
  67:../Core/Src/system_stm32f3xx.c ****   * @{
  68:../Core/Src/system_stm32f3xx.c ****   */
  69:../Core/Src/system_stm32f3xx.c **** 
  70:../Core/Src/system_stm32f3xx.c **** #include "stm32f3xx.h"
  71:../Core/Src/system_stm32f3xx.c **** 
  72:../Core/Src/system_stm32f3xx.c **** /**
  73:../Core/Src/system_stm32f3xx.c ****   * @}
  74:../Core/Src/system_stm32f3xx.c ****   */
  75:../Core/Src/system_stm32f3xx.c **** 
  76:../Core/Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_TypesDefinitions
  77:../Core/Src/system_stm32f3xx.c ****   * @{
  78:../Core/Src/system_stm32f3xx.c ****   */
  79:../Core/Src/system_stm32f3xx.c **** 
  80:../Core/Src/system_stm32f3xx.c **** /**
  81:../Core/Src/system_stm32f3xx.c ****   * @}
  82:../Core/Src/system_stm32f3xx.c ****   */
  83:../Core/Src/system_stm32f3xx.c **** 
  84:../Core/Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Defines
  85:../Core/Src/system_stm32f3xx.c ****   * @{
  86:../Core/Src/system_stm32f3xx.c ****   */
  87:../Core/Src/system_stm32f3xx.c **** #if !defined  (HSE_VALUE) 
  88:../Core/Src/system_stm32f3xx.c ****   #define HSE_VALUE    ((uint32_t)8000000) /*!< Default value of the External oscillator in Hz.
  89:../Core/Src/system_stm32f3xx.c ****                                                 This value can be provided and adapted by the user 
  90:../Core/Src/system_stm32f3xx.c **** #endif /* HSE_VALUE */
  91:../Core/Src/system_stm32f3xx.c **** 
  92:../Core/Src/system_stm32f3xx.c **** #if !defined  (HSI_VALUE)
  93:../Core/Src/system_stm32f3xx.c ****   #define HSI_VALUE    ((uint32_t)8000000) /*!< Default value of the Internal oscillator in Hz.
  94:../Core/Src/system_stm32f3xx.c ****                                                 This value can be provided and adapted by the user 
  95:../Core/Src/system_stm32f3xx.c **** #endif /* HSI_VALUE */
  96:../Core/Src/system_stm32f3xx.c **** 
  97:../Core/Src/system_stm32f3xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  98:../Core/Src/system_stm32f3xx.c ****      Internal SRAM. */
  99:../Core/Src/system_stm32f3xx.c **** /* #define VECT_TAB_SRAM */
 100:../Core/Src/system_stm32f3xx.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field.
 101:../Core/Src/system_stm32f3xx.c ****                                   This value must be a multiple of 0x200. */
 102:../Core/Src/system_stm32f3xx.c **** /**
 103:../Core/Src/system_stm32f3xx.c ****   * @}
 104:../Core/Src/system_stm32f3xx.c ****   */
 105:../Core/Src/system_stm32f3xx.c **** 
 106:../Core/Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Macros
 107:../Core/Src/system_stm32f3xx.c ****   * @{
 108:../Core/Src/system_stm32f3xx.c ****   */
ARM GAS  /tmp/ccXByMiy.s 			page 4


 109:../Core/Src/system_stm32f3xx.c **** 
 110:../Core/Src/system_stm32f3xx.c **** /**
 111:../Core/Src/system_stm32f3xx.c ****   * @}
 112:../Core/Src/system_stm32f3xx.c ****   */
 113:../Core/Src/system_stm32f3xx.c **** 
 114:../Core/Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Variables
 115:../Core/Src/system_stm32f3xx.c ****   * @{
 116:../Core/Src/system_stm32f3xx.c ****   */
 117:../Core/Src/system_stm32f3xx.c ****   /* This variable is updated in three ways:
 118:../Core/Src/system_stm32f3xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 119:../Core/Src/system_stm32f3xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 120:../Core/Src/system_stm32f3xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 121:../Core/Src/system_stm32f3xx.c ****          Note: If you use this function to configure the system clock there is no need to
 122:../Core/Src/system_stm32f3xx.c ****                call the 2 first functions listed above, since SystemCoreClock variable is 
 123:../Core/Src/system_stm32f3xx.c ****                updated automatically.
 124:../Core/Src/system_stm32f3xx.c ****   */
 125:../Core/Src/system_stm32f3xx.c **** uint32_t SystemCoreClock = 8000000;
 126:../Core/Src/system_stm32f3xx.c **** 
 127:../Core/Src/system_stm32f3xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 128:../Core/Src/system_stm32f3xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 129:../Core/Src/system_stm32f3xx.c **** 
 130:../Core/Src/system_stm32f3xx.c **** /**
 131:../Core/Src/system_stm32f3xx.c ****   * @}
 132:../Core/Src/system_stm32f3xx.c ****   */
 133:../Core/Src/system_stm32f3xx.c **** 
 134:../Core/Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_FunctionPrototypes
 135:../Core/Src/system_stm32f3xx.c ****   * @{
 136:../Core/Src/system_stm32f3xx.c ****   */
 137:../Core/Src/system_stm32f3xx.c **** 
 138:../Core/Src/system_stm32f3xx.c **** /**
 139:../Core/Src/system_stm32f3xx.c ****   * @}
 140:../Core/Src/system_stm32f3xx.c ****   */
 141:../Core/Src/system_stm32f3xx.c **** 
 142:../Core/Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Functions
 143:../Core/Src/system_stm32f3xx.c ****   * @{
 144:../Core/Src/system_stm32f3xx.c ****   */
 145:../Core/Src/system_stm32f3xx.c **** 
 146:../Core/Src/system_stm32f3xx.c **** /**
 147:../Core/Src/system_stm32f3xx.c ****   * @brief  Setup the microcontroller system
 148:../Core/Src/system_stm32f3xx.c ****   * @param  None
 149:../Core/Src/system_stm32f3xx.c ****   * @retval None
 150:../Core/Src/system_stm32f3xx.c ****   */
 151:../Core/Src/system_stm32f3xx.c **** void SystemInit(void)
 152:../Core/Src/system_stm32f3xx.c **** {
  71              		.loc 1 152 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76 0000 80B4     		push	{r7}
  77              	.LCFI0:
  78              		.cfi_def_cfa_offset 4
  79              		.cfi_offset 7, -4
  80 0002 00AF     		add	r7, sp, #0
  81              	.LCFI1:
  82              		.cfi_def_cfa_register 7
 153:../Core/Src/system_stm32f3xx.c **** /* FPU settings --------------------------------------------------------------*/
ARM GAS  /tmp/ccXByMiy.s 			page 5


 154:../Core/Src/system_stm32f3xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 155:../Core/Src/system_stm32f3xx.c ****   SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  83              		.loc 1 155 0
  84 0004 084A     		ldr	r2, .L2
  85 0006 084B     		ldr	r3, .L2
  86 0008 D3F88830 		ldr	r3, [r3, #136]
  87 000c 43F47003 		orr	r3, r3, #15728640
  88 0010 C2F88830 		str	r3, [r2, #136]
 156:../Core/Src/system_stm32f3xx.c **** #endif
 157:../Core/Src/system_stm32f3xx.c **** 
 158:../Core/Src/system_stm32f3xx.c **** #ifdef VECT_TAB_SRAM
 159:../Core/Src/system_stm32f3xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 160:../Core/Src/system_stm32f3xx.c **** #else
 161:../Core/Src/system_stm32f3xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  89              		.loc 1 161 0
  90 0014 044B     		ldr	r3, .L2
  91 0016 4FF00062 		mov	r2, #134217728
  92 001a 9A60     		str	r2, [r3, #8]
 162:../Core/Src/system_stm32f3xx.c **** #endif
 163:../Core/Src/system_stm32f3xx.c **** }
  93              		.loc 1 163 0
  94 001c 00BF     		nop
  95 001e BD46     		mov	sp, r7
  96              	.LCFI2:
  97              		.cfi_def_cfa_register 13
  98              		@ sp needed
  99 0020 5DF8047B 		ldr	r7, [sp], #4
 100              	.LCFI3:
 101              		.cfi_restore 7
 102              		.cfi_def_cfa_offset 0
 103 0024 7047     		bx	lr
 104              	.L3:
 105 0026 00BF     		.align	2
 106              	.L2:
 107 0028 00ED00E0 		.word	-536810240
 108              		.cfi_endproc
 109              	.LFE130:
 111              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 112              		.align	1
 113              		.global	SystemCoreClockUpdate
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	SystemCoreClockUpdate:
 120              	.LFB131:
 164:../Core/Src/system_stm32f3xx.c **** 
 165:../Core/Src/system_stm32f3xx.c **** /**
 166:../Core/Src/system_stm32f3xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 167:../Core/Src/system_stm32f3xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 168:../Core/Src/system_stm32f3xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 169:../Core/Src/system_stm32f3xx.c ****   *         other parameters.
 170:../Core/Src/system_stm32f3xx.c ****   *
 171:../Core/Src/system_stm32f3xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 172:../Core/Src/system_stm32f3xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 173:../Core/Src/system_stm32f3xx.c ****   *         based on this variable will be incorrect.
 174:../Core/Src/system_stm32f3xx.c ****   *
ARM GAS  /tmp/ccXByMiy.s 			page 6


 175:../Core/Src/system_stm32f3xx.c ****   * @note   - The system frequency computed by this function is not the real
 176:../Core/Src/system_stm32f3xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 177:../Core/Src/system_stm32f3xx.c ****   *           constant and the selected clock source:
 178:../Core/Src/system_stm32f3xx.c ****   *
 179:../Core/Src/system_stm32f3xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 180:../Core/Src/system_stm32f3xx.c ****   *
 181:../Core/Src/system_stm32f3xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 182:../Core/Src/system_stm32f3xx.c ****   *
 183:../Core/Src/system_stm32f3xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 184:../Core/Src/system_stm32f3xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 185:../Core/Src/system_stm32f3xx.c ****   *
 186:../Core/Src/system_stm32f3xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f3xx_hal.h file (default value
 187:../Core/Src/system_stm32f3xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 188:../Core/Src/system_stm32f3xx.c ****   *             in voltage and temperature.
 189:../Core/Src/system_stm32f3xx.c ****   *
 190:../Core/Src/system_stm32f3xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f3xx_hal.h file (default value
 191:../Core/Src/system_stm32f3xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 192:../Core/Src/system_stm32f3xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 193:../Core/Src/system_stm32f3xx.c ****   *              have wrong result.
 194:../Core/Src/system_stm32f3xx.c ****   *
 195:../Core/Src/system_stm32f3xx.c ****   *         - The result of this function could be not correct when using fractional
 196:../Core/Src/system_stm32f3xx.c ****   *           value for HSE crystal.
 197:../Core/Src/system_stm32f3xx.c ****   *
 198:../Core/Src/system_stm32f3xx.c ****   * @param  None
 199:../Core/Src/system_stm32f3xx.c ****   * @retval None
 200:../Core/Src/system_stm32f3xx.c ****   */
 201:../Core/Src/system_stm32f3xx.c **** void SystemCoreClockUpdate (void)
 202:../Core/Src/system_stm32f3xx.c **** {
 121              		.loc 1 202 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 16
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126 0000 80B4     		push	{r7}
 127              	.LCFI4:
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 7, -4
 130 0002 85B0     		sub	sp, sp, #20
 131              	.LCFI5:
 132              		.cfi_def_cfa_offset 24
 133 0004 00AF     		add	r7, sp, #0
 134              	.LCFI6:
 135              		.cfi_def_cfa_register 7
 203:../Core/Src/system_stm32f3xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, predivfactor = 0;
 136              		.loc 1 203 0
 137 0006 0023     		movs	r3, #0
 138 0008 FB60     		str	r3, [r7, #12]
 139 000a 0023     		movs	r3, #0
 140 000c BB60     		str	r3, [r7, #8]
 141 000e 0023     		movs	r3, #0
 142 0010 7B60     		str	r3, [r7, #4]
 143 0012 0023     		movs	r3, #0
 144 0014 3B60     		str	r3, [r7]
 204:../Core/Src/system_stm32f3xx.c **** 
 205:../Core/Src/system_stm32f3xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 206:../Core/Src/system_stm32f3xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 145              		.loc 1 206 0
ARM GAS  /tmp/ccXByMiy.s 			page 7


 146 0016 2A4B     		ldr	r3, .L13
 147 0018 5B68     		ldr	r3, [r3, #4]
 148 001a 03F00C03 		and	r3, r3, #12
 149 001e FB60     		str	r3, [r7, #12]
 207:../Core/Src/system_stm32f3xx.c **** 
 208:../Core/Src/system_stm32f3xx.c ****   switch (tmp)
 150              		.loc 1 208 0
 151 0020 FB68     		ldr	r3, [r7, #12]
 152 0022 042B     		cmp	r3, #4
 153 0024 07D0     		beq	.L6
 154 0026 082B     		cmp	r3, #8
 155 0028 09D0     		beq	.L7
 156 002a 002B     		cmp	r3, #0
 157 002c 2FD1     		bne	.L12
 209:../Core/Src/system_stm32f3xx.c ****   {
 210:../Core/Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
 211:../Core/Src/system_stm32f3xx.c ****       SystemCoreClock = HSI_VALUE;
 158              		.loc 1 211 0
 159 002e 254B     		ldr	r3, .L13+4
 160 0030 254A     		ldr	r2, .L13+8
 161 0032 1A60     		str	r2, [r3]
 212:../Core/Src/system_stm32f3xx.c ****       break;
 162              		.loc 1 212 0
 163 0034 2FE0     		b	.L9
 164              	.L6:
 213:../Core/Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
 214:../Core/Src/system_stm32f3xx.c ****       SystemCoreClock = HSE_VALUE;
 165              		.loc 1 214 0
 166 0036 234B     		ldr	r3, .L13+4
 167 0038 234A     		ldr	r2, .L13+8
 168 003a 1A60     		str	r2, [r3]
 215:../Core/Src/system_stm32f3xx.c ****       break;
 169              		.loc 1 215 0
 170 003c 2BE0     		b	.L9
 171              	.L7:
 216:../Core/Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 217:../Core/Src/system_stm32f3xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 218:../Core/Src/system_stm32f3xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMUL;
 172              		.loc 1 218 0
 173 003e 204B     		ldr	r3, .L13
 174 0040 5B68     		ldr	r3, [r3, #4]
 175 0042 03F47013 		and	r3, r3, #3932160
 176 0046 BB60     		str	r3, [r7, #8]
 219:../Core/Src/system_stm32f3xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 177              		.loc 1 219 0
 178 0048 1D4B     		ldr	r3, .L13
 179 004a 5B68     		ldr	r3, [r3, #4]
 180 004c 03F48033 		and	r3, r3, #65536
 181 0050 7B60     		str	r3, [r7, #4]
 220:../Core/Src/system_stm32f3xx.c ****       pllmull = ( pllmull >> 18) + 2;
 182              		.loc 1 220 0
 183 0052 BB68     		ldr	r3, [r7, #8]
 184 0054 9B0C     		lsrs	r3, r3, #18
 185 0056 0233     		adds	r3, r3, #2
 186 0058 BB60     		str	r3, [r7, #8]
 221:../Core/Src/system_stm32f3xx.c **** 
 222:../Core/Src/system_stm32f3xx.c **** #if defined (STM32F302xE) || defined (STM32F303xE) || defined (STM32F398xx)
ARM GAS  /tmp/ccXByMiy.s 			page 8


 223:../Core/Src/system_stm32f3xx.c ****         predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 224:../Core/Src/system_stm32f3xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
 225:../Core/Src/system_stm32f3xx.c ****       {
 226:../Core/Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 227:../Core/Src/system_stm32f3xx.c ****         SystemCoreClock = (HSE_VALUE / predivfactor) * pllmull;
 228:../Core/Src/system_stm32f3xx.c ****       }
 229:../Core/Src/system_stm32f3xx.c ****       else
 230:../Core/Src/system_stm32f3xx.c ****       {
 231:../Core/Src/system_stm32f3xx.c ****         /* HSI oscillator clock selected as PREDIV1 clock entry */
 232:../Core/Src/system_stm32f3xx.c ****         SystemCoreClock = (HSI_VALUE / predivfactor) * pllmull;
 233:../Core/Src/system_stm32f3xx.c ****       }
 234:../Core/Src/system_stm32f3xx.c **** #else      
 235:../Core/Src/system_stm32f3xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSI_DIV2)
 187              		.loc 1 235 0
 188 005a 7B68     		ldr	r3, [r7, #4]
 189 005c 002B     		cmp	r3, #0
 190 005e 06D1     		bne	.L10
 236:../Core/Src/system_stm32f3xx.c ****       {
 237:../Core/Src/system_stm32f3xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 238:../Core/Src/system_stm32f3xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 191              		.loc 1 238 0
 192 0060 BB68     		ldr	r3, [r7, #8]
 193 0062 1A4A     		ldr	r2, .L13+12
 194 0064 02FB03F3 		mul	r3, r2, r3
 195 0068 164A     		ldr	r2, .L13+4
 196 006a 1360     		str	r3, [r2]
 239:../Core/Src/system_stm32f3xx.c ****       }
 240:../Core/Src/system_stm32f3xx.c ****       else
 241:../Core/Src/system_stm32f3xx.c ****       {
 242:../Core/Src/system_stm32f3xx.c ****         predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 243:../Core/Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 244:../Core/Src/system_stm32f3xx.c ****         SystemCoreClock = (HSE_VALUE / predivfactor) * pllmull;
 245:../Core/Src/system_stm32f3xx.c ****       }
 246:../Core/Src/system_stm32f3xx.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx */
 247:../Core/Src/system_stm32f3xx.c ****       break;
 197              		.loc 1 247 0
 198 006c 13E0     		b	.L9
 199              	.L10:
 242:../Core/Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 200              		.loc 1 242 0
 201 006e 144B     		ldr	r3, .L13
 202 0070 DB6A     		ldr	r3, [r3, #44]
 203 0072 03F00F03 		and	r3, r3, #15
 204 0076 0133     		adds	r3, r3, #1
 205 0078 3B60     		str	r3, [r7]
 244:../Core/Src/system_stm32f3xx.c ****       }
 206              		.loc 1 244 0
 207 007a 134A     		ldr	r2, .L13+8
 208 007c 3B68     		ldr	r3, [r7]
 209 007e B2FBF3F3 		udiv	r3, r2, r3
 210 0082 BA68     		ldr	r2, [r7, #8]
 211 0084 02FB03F3 		mul	r3, r2, r3
 212 0088 0E4A     		ldr	r2, .L13+4
 213 008a 1360     		str	r3, [r2]
 214              		.loc 1 247 0
 215 008c 03E0     		b	.L9
 216              	.L12:
ARM GAS  /tmp/ccXByMiy.s 			page 9


 248:../Core/Src/system_stm32f3xx.c ****     default: /* HSI used as system clock */
 249:../Core/Src/system_stm32f3xx.c ****       SystemCoreClock = HSI_VALUE;
 217              		.loc 1 249 0
 218 008e 0D4B     		ldr	r3, .L13+4
 219 0090 0D4A     		ldr	r2, .L13+8
 220 0092 1A60     		str	r2, [r3]
 250:../Core/Src/system_stm32f3xx.c ****       break;
 221              		.loc 1 250 0
 222 0094 00BF     		nop
 223              	.L9:
 251:../Core/Src/system_stm32f3xx.c ****   }
 252:../Core/Src/system_stm32f3xx.c ****   /* Compute HCLK clock frequency ----------------*/
 253:../Core/Src/system_stm32f3xx.c ****   /* Get HCLK prescaler */
 254:../Core/Src/system_stm32f3xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 224              		.loc 1 254 0
 225 0096 0A4B     		ldr	r3, .L13
 226 0098 5B68     		ldr	r3, [r3, #4]
 227 009a 1B09     		lsrs	r3, r3, #4
 228 009c 03F00F03 		and	r3, r3, #15
 229 00a0 0B4A     		ldr	r2, .L13+16
 230 00a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 231 00a4 FB60     		str	r3, [r7, #12]
 255:../Core/Src/system_stm32f3xx.c ****   /* HCLK clock frequency */
 256:../Core/Src/system_stm32f3xx.c ****   SystemCoreClock >>= tmp;
 232              		.loc 1 256 0
 233 00a6 074B     		ldr	r3, .L13+4
 234 00a8 1A68     		ldr	r2, [r3]
 235 00aa FB68     		ldr	r3, [r7, #12]
 236 00ac 22FA03F3 		lsr	r3, r2, r3
 237 00b0 044A     		ldr	r2, .L13+4
 238 00b2 1360     		str	r3, [r2]
 257:../Core/Src/system_stm32f3xx.c **** }
 239              		.loc 1 257 0
 240 00b4 00BF     		nop
 241 00b6 1437     		adds	r7, r7, #20
 242              	.LCFI7:
 243              		.cfi_def_cfa_offset 4
 244 00b8 BD46     		mov	sp, r7
 245              	.LCFI8:
 246              		.cfi_def_cfa_register 13
 247              		@ sp needed
 248 00ba 5DF8047B 		ldr	r7, [sp], #4
 249              	.LCFI9:
 250              		.cfi_restore 7
 251              		.cfi_def_cfa_offset 0
 252 00be 7047     		bx	lr
 253              	.L14:
 254              		.align	2
 255              	.L13:
 256 00c0 00100240 		.word	1073876992
 257 00c4 00000000 		.word	SystemCoreClock
 258 00c8 00127A00 		.word	8000000
 259 00cc 00093D00 		.word	4000000
 260 00d0 00000000 		.word	AHBPrescTable
 261              		.cfi_endproc
 262              	.LFE131:
 264              		.text
ARM GAS  /tmp/ccXByMiy.s 			page 10


 265              	.Letext0:
 266              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 267              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 268              		.file 4 "../Drivers/CMSIS/Include/core_cm4.h"
 269              		.file 5 "../Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 270              		.file 6 "../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 271              		.file 7 "../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccXByMiy.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f3xx.c
     /tmp/ccXByMiy.s:22     .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccXByMiy.s:19     .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccXByMiy.s:29     .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccXByMiy.s:26     .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccXByMiy.s:51     .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccXByMiy.s:48     .rodata.APBPrescTable:0000000000000000 $d
     /tmp/ccXByMiy.s:61     .text.SystemInit:0000000000000000 $t
     /tmp/ccXByMiy.s:68     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccXByMiy.s:107    .text.SystemInit:0000000000000028 $d
     /tmp/ccXByMiy.s:112    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccXByMiy.s:119    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccXByMiy.s:256    .text.SystemCoreClockUpdate:00000000000000c0 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
