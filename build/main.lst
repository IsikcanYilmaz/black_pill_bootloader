ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	1
  19              		.global	main
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	main:
  27              	.LFB292:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  21:Src/main.c    **** #include "main.h"
  22:Src/main.c    **** #include "adc.h"
  23:Src/main.c    **** #include "dma.h"
  24:Src/main.c    **** #include "i2c.h"
  25:Src/main.c    **** #include "tim.h"
  26:Src/main.c    **** #include "usart.h"
  27:Src/main.c    **** #include "gpio.h"
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN Includes */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s 			page 2


  31:Src/main.c    **** #include "addressable_led_driver.h"
  32:Src/main.c    **** #include "addressable_led_manager.h"
  33:Src/main.c    **** #include "sw_timers.h"
  34:Src/main.c    **** #include "geometry.h"
  35:Src/main.c    **** /* USER CODE END Includes */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PTD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PD */
  44:Src/main.c    **** /* USER CODE END PD */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PM */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /**
  69:Src/main.c    ****   * @brief  The application entry point.
  70:Src/main.c    ****   * @retval int
  71:Src/main.c    ****   */
  72:Src/main.c    **** int main(void)
  73:Src/main.c    **** {
  29              		.loc 1 73 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
  75:Src/main.c    **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s 			page 3


  76:Src/main.c    ****   /* USER CODE END 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Src/main.c    ****   HAL_Init();
  41              		.loc 1 81 3
  42 0004 FFF7FEFF 		bl	HAL_Init
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE BEGIN Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE END Init */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Configure the system clock */
  88:Src/main.c    ****   SystemClock_Config();
  43              		.loc 1 88 3
  44 0008 FFF7FEFF 		bl	SystemClock_Config
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END SysInit */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Initialize all configured peripherals */
  95:Src/main.c    ****   MX_GPIO_Init();
  45              		.loc 1 95 3
  46 000c FFF7FEFF 		bl	MX_GPIO_Init
  96:Src/main.c    ****   MX_DMA_Init();
  47              		.loc 1 96 3
  48 0010 FFF7FEFF 		bl	MX_DMA_Init
  97:Src/main.c    ****   MX_TIM2_Init();
  49              		.loc 1 97 3
  50 0014 FFF7FEFF 		bl	MX_TIM2_Init
  98:Src/main.c    ****   MX_TIM3_Init();
  51              		.loc 1 98 3
  52 0018 FFF7FEFF 		bl	MX_TIM3_Init
  99:Src/main.c    ****   MX_USART2_UART_Init();
  53              		.loc 1 99 3
  54 001c FFF7FEFF 		bl	MX_USART2_UART_Init
 100:Src/main.c    ****   MX_ADC1_Init();
  55              		.loc 1 100 3
  56 0020 FFF7FEFF 		bl	MX_ADC1_Init
 101:Src/main.c    ****   MX_I2C1_Init();
  57              		.loc 1 101 3
  58 0024 FFF7FEFF 		bl	MX_I2C1_Init
 102:Src/main.c    ****   MX_I2C2_Init();
  59              		.loc 1 102 3
  60 0028 FFF7FEFF 		bl	MX_I2C2_Init
 103:Src/main.c    ****   MX_UART4_Init();
  61              		.loc 1 103 3
  62 002c FFF7FEFF 		bl	MX_UART4_Init
 104:Src/main.c    ****   MX_USB_PCD_Init();
  63              		.loc 1 104 3
  64 0030 FFF7FEFF 		bl	MX_USB_PCD_Init
 105:Src/main.c    ****   /* USER CODE BEGIN 2 */
 106:Src/main.c    ****   
 107:Src/main.c    ****   ButtonDriver_Init();
  65              		.loc 1 107 3
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s 			page 4


  66 0034 FFF7FEFF 		bl	ButtonDriver_Init
 108:Src/main.c    ****   DbgUart_Init();
  67              		.loc 1 108 3
  68 0038 FFF7FEFF 		bl	DbgUart_Init
 109:Src/main.c    ****   AddrLEDManager_Init();
  69              		.loc 1 109 3
  70 003c FFF7FEFF 		bl	AddrLEDManager_Init
 110:Src/main.c    ****   Geometry_Init();
  71              		.loc 1 110 3
  72 0040 FFF7FEFF 		bl	Geometry_Init
 111:Src/main.c    **** 
 112:Src/main.c    ****   // Infinite loop v // TODO // refactor this test stuff
 113:Src/main.c    ****   AddrLEDManager_SanityTest();
  73              		.loc 1 113 3
  74 0044 FFF7FEFF 		bl	AddrLEDManager_SanityTest
  75              	.L2:
 114:Src/main.c    ****   //AddrLEDManager_RefreshTimerStart();
 115:Src/main.c    ****   /* USER CODE END 2 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Infinite loop */
 118:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 119:Src/main.c    ****   while (1)
  76              		.loc 1 119 9 discriminator 1
  77 0048 FEE7     		b	.L2
  78              		.cfi_endproc
  79              	.LFE292:
  81              		.section	.text.SystemClock_Config,"ax",%progbits
  82              		.align	1
  83              		.global	SystemClock_Config
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	SystemClock_Config:
  90              	.LFB293:
 120:Src/main.c    ****   {
 121:Src/main.c    ****     /* USER CODE END WHILE */
 122:Src/main.c    **** 
 123:Src/main.c    ****     /* USER CODE BEGIN 3 */
 124:Src/main.c    ****   }
 125:Src/main.c    ****   /* USER CODE END 3 */
 126:Src/main.c    **** }
 127:Src/main.c    **** 
 128:Src/main.c    **** /**
 129:Src/main.c    ****   * @brief System Clock Configuration
 130:Src/main.c    ****   * @retval None
 131:Src/main.c    ****   */
 132:Src/main.c    **** void SystemClock_Config(void)
 133:Src/main.c    **** {
  91              		.loc 1 133 1
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 88
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95 0000 80B5     		push	{r7, lr}
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s 			page 5


  99              		.cfi_offset 14, -4
 100 0002 96B0     		sub	sp, sp, #88
 101              	.LCFI3:
 102              		.cfi_def_cfa_offset 96
 103 0004 00AF     		add	r7, sp, #0
 104              	.LCFI4:
 105              		.cfi_def_cfa_register 7
 134:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 106              		.loc 1 134 22
 107 0006 07F11403 		add	r3, r7, #20
 108 000a 4422     		movs	r2, #68
 109 000c 0021     		movs	r1, #0
 110 000e 1846     		mov	r0, r3
 111 0010 FFF7FEFF 		bl	memset
 135:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 112              		.loc 1 135 22
 113 0014 3B46     		mov	r3, r7
 114 0016 0022     		movs	r2, #0
 115 0018 1A60     		str	r2, [r3]
 116 001a 5A60     		str	r2, [r3, #4]
 117 001c 9A60     		str	r2, [r3, #8]
 118 001e DA60     		str	r2, [r3, #12]
 119 0020 1A61     		str	r2, [r3, #16]
 136:Src/main.c    **** 
 137:Src/main.c    ****   /** Configure the main internal regulator output voltage
 138:Src/main.c    ****   */
 139:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 120              		.loc 1 139 7
 121 0022 4FF40070 		mov	r0, #512
 122 0026 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 123 002a 0346     		mov	r3, r0
 124              		.loc 1 139 6
 125 002c 002B     		cmp	r3, #0
 126 002e 01D0     		beq	.L4
 140:Src/main.c    ****   {
 141:Src/main.c    ****     Error_Handler();
 127              		.loc 1 141 5
 128 0030 FFF7FEFF 		bl	Error_Handler
 129              	.L4:
 142:Src/main.c    ****   }
 143:Src/main.c    **** 
 144:Src/main.c    ****   /** Configure LSE Drive Capability
 145:Src/main.c    ****   */
 146:Src/main.c    ****   HAL_PWR_EnableBkUpAccess();
 130              		.loc 1 146 3
 131 0034 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 147:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 132              		.loc 1 147 3
 133 0038 224B     		ldr	r3, .L7
 134 003a D3F89030 		ldr	r3, [r3, #144]
 135 003e 214A     		ldr	r2, .L7
 136 0040 23F01803 		bic	r3, r3, #24
 137 0044 C2F89030 		str	r3, [r2, #144]
 148:Src/main.c    **** 
 149:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 150:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 151:Src/main.c    ****   */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s 			page 6


 152:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_LSE
 138              		.loc 1 152 36
 139 0048 3423     		movs	r3, #52
 140 004a 7B61     		str	r3, [r7, #20]
 153:Src/main.c    ****                               |RCC_OSCILLATORTYPE_MSI;
 154:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 141              		.loc 1 154 30
 142 004c 0123     		movs	r3, #1
 143 004e FB61     		str	r3, [r7, #28]
 155:Src/main.c    ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 144              		.loc 1 155 32
 145 0050 0123     		movs	r3, #1
 146 0052 BB63     		str	r3, [r7, #56]
 156:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 147              		.loc 1 156 30
 148 0054 0123     		movs	r3, #1
 149 0056 FB62     		str	r3, [r7, #44]
 157:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 150              		.loc 1 157 41
 151 0058 0023     		movs	r3, #0
 152 005a 3B63     		str	r3, [r7, #48]
 158:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 153              		.loc 1 158 35
 154 005c 6023     		movs	r3, #96
 155 005e 7B63     		str	r3, [r7, #52]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 156              		.loc 1 159 34
 157 0060 0223     		movs	r3, #2
 158 0062 FB63     		str	r3, [r7, #60]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 159              		.loc 1 160 35
 160 0064 0123     		movs	r3, #1
 161 0066 3B64     		str	r3, [r7, #64]
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 162              		.loc 1 161 30
 163 0068 0123     		movs	r3, #1
 164 006a 7B64     		str	r3, [r7, #68]
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 40;
 165              		.loc 1 162 30
 166 006c 2823     		movs	r3, #40
 167 006e BB64     		str	r3, [r7, #72]
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 168              		.loc 1 163 30
 169 0070 0723     		movs	r3, #7
 170 0072 FB64     		str	r3, [r7, #76]
 164:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 171              		.loc 1 164 30
 172 0074 0223     		movs	r3, #2
 173 0076 3B65     		str	r3, [r7, #80]
 165:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 174              		.loc 1 165 30
 175 0078 0223     		movs	r3, #2
 176 007a 7B65     		str	r3, [r7, #84]
 166:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 177              		.loc 1 166 7
 178 007c 07F11403 		add	r3, r7, #20
 179 0080 1846     		mov	r0, r3
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s 			page 7


 180 0082 FFF7FEFF 		bl	HAL_RCC_OscConfig
 181 0086 0346     		mov	r3, r0
 182              		.loc 1 166 6
 183 0088 002B     		cmp	r3, #0
 184 008a 01D0     		beq	.L5
 167:Src/main.c    ****   {
 168:Src/main.c    ****     Error_Handler();
 185              		.loc 1 168 5
 186 008c FFF7FEFF 		bl	Error_Handler
 187              	.L5:
 169:Src/main.c    ****   }
 170:Src/main.c    **** 
 171:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 172:Src/main.c    ****   */
 173:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 188              		.loc 1 173 31
 189 0090 0F23     		movs	r3, #15
 190 0092 3B60     		str	r3, [r7]
 174:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 175:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 191              		.loc 1 175 34
 192 0094 0323     		movs	r3, #3
 193 0096 7B60     		str	r3, [r7, #4]
 176:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 194              		.loc 1 176 35
 195 0098 0023     		movs	r3, #0
 196 009a BB60     		str	r3, [r7, #8]
 177:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 197              		.loc 1 177 36
 198 009c 0023     		movs	r3, #0
 199 009e FB60     		str	r3, [r7, #12]
 178:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 200              		.loc 1 178 36
 201 00a0 0023     		movs	r3, #0
 202 00a2 3B61     		str	r3, [r7, #16]
 179:Src/main.c    **** 
 180:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 203              		.loc 1 180 7
 204 00a4 3B46     		mov	r3, r7
 205 00a6 0421     		movs	r1, #4
 206 00a8 1846     		mov	r0, r3
 207 00aa FFF7FEFF 		bl	HAL_RCC_ClockConfig
 208 00ae 0346     		mov	r3, r0
 209              		.loc 1 180 6
 210 00b0 002B     		cmp	r3, #0
 211 00b2 01D0     		beq	.L6
 181:Src/main.c    ****   {
 182:Src/main.c    ****     Error_Handler();
 212              		.loc 1 182 5
 213 00b4 FFF7FEFF 		bl	Error_Handler
 214              	.L6:
 183:Src/main.c    ****   }
 184:Src/main.c    **** 
 185:Src/main.c    ****   /** Enable MSI Auto calibration
 186:Src/main.c    ****   */
 187:Src/main.c    ****   HAL_RCCEx_EnableMSIPLLMode();
 215              		.loc 1 187 3
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s 			page 8


 216 00b8 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 188:Src/main.c    **** }
 217              		.loc 1 188 1
 218 00bc 00BF     		nop
 219 00be 5837     		adds	r7, r7, #88
 220              	.LCFI5:
 221              		.cfi_def_cfa_offset 8
 222 00c0 BD46     		mov	sp, r7
 223              	.LCFI6:
 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 00c2 80BD     		pop	{r7, pc}
 227              	.L8:
 228              		.align	2
 229              	.L7:
 230 00c4 00100240 		.word	1073876992
 231              		.cfi_endproc
 232              	.LFE293:
 234              		.section	.text.Error_Handler,"ax",%progbits
 235              		.align	1
 236              		.global	Error_Handler
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv4-sp-d16
 242              	Error_Handler:
 243              	.LFB294:
 189:Src/main.c    **** 
 190:Src/main.c    **** /* USER CODE BEGIN 4 */
 191:Src/main.c    **** 
 192:Src/main.c    **** /* USER CODE END 4 */
 193:Src/main.c    **** 
 194:Src/main.c    **** /**
 195:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 196:Src/main.c    ****   * @retval None
 197:Src/main.c    ****   */
 198:Src/main.c    **** void Error_Handler(void)
 199:Src/main.c    **** {
 244              		.loc 1 199 1
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 80B4     		push	{r7}
 250              	.LCFI7:
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 7, -4
 253 0002 00AF     		add	r7, sp, #0
 254              	.LCFI8:
 255              		.cfi_def_cfa_register 7
 200:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 201:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 202:Src/main.c    **** 
 203:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 204:Src/main.c    **** }
 256              		.loc 1 204 1
 257 0004 00BF     		nop
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s 			page 9


 258 0006 BD46     		mov	sp, r7
 259              	.LCFI9:
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 0008 5DF8047B 		ldr	r7, [sp], #4
 263              	.LCFI10:
 264              		.cfi_restore 7
 265              		.cfi_def_cfa_offset 0
 266 000c 7047     		bx	lr
 267              		.cfi_endproc
 268              	.LFE294:
 270              		.text
 271              	.Letext0:
 272              		.file 2 "/Users/isikcanyilmaz/KODMOD/b607/test/mcu/tools/gcc9.2.1/mac/arm-none-eabi/include/machin
 273              		.file 3 "/Users/isikcanyilmaz/KODMOD/b607/test/mcu/tools/gcc9.2.1/mac/arm-none-eabi/include/sys/_s
 274              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 275              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 276              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l452xx.h"
 277              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 278              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 279              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 280              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 281              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 282              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 283              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 284              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 285              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 286              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 287              		.file 17 "Inc/adc.h"
 288              		.file 18 "Inc/i2c.h"
 289              		.file 19 "Inc/tim.h"
 290              		.file 20 "Inc/usart.h"
 291              		.file 21 "Inc/addressable_led_manager.h"
 292              		.file 22 "Inc/sw_timers.h"
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s:18     .text.main:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s:26     .text.main:0000000000000000 main
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s:89     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s:82     .text.SystemClock_Config:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s:242    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s:230    .text.SystemClock_Config:00000000000000c4 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccPKL7Fg.s:235    .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM2_Init
MX_TIM3_Init
MX_USART2_UART_Init
MX_ADC1_Init
MX_I2C1_Init
MX_I2C2_Init
MX_UART4_Init
MX_USB_PCD_Init
ButtonDriver_Init
DbgUart_Init
AddrLEDManager_Init
Geometry_Init
AddrLEDManager_SanityTest
memset
HAL_PWREx_ControlVoltageScaling
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_EnableMSIPLLMode
