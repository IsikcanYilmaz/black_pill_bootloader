ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	hadc1,104,4
  18              		.section	.text.MX_ADC1_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_ADC1_Init
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	MX_ADC1_Init:
  28              	.LFB292:
  29              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /* USER CODE BEGIN Header */
   2:Src/adc.c     **** /**
   3:Src/adc.c     ****   ******************************************************************************
   4:Src/adc.c     ****   * @file    adc.c
   5:Src/adc.c     ****   * @brief   This file provides code for the configuration
   6:Src/adc.c     ****   *          of the ADC instances.
   7:Src/adc.c     ****   ******************************************************************************
   8:Src/adc.c     ****   * @attention
   9:Src/adc.c     ****   *
  10:Src/adc.c     ****   * Copyright (c) 2022 STMicroelectronics.
  11:Src/adc.c     ****   * All rights reserved.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Src/adc.c     ****   * in the root directory of this software component.
  15:Src/adc.c     ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Src/adc.c     ****   *
  17:Src/adc.c     ****   ******************************************************************************
  18:Src/adc.c     ****   */
  19:Src/adc.c     **** /* USER CODE END Header */
  20:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/adc.c     **** #include "adc.h"
  22:Src/adc.c     **** 
  23:Src/adc.c     **** /* USER CODE BEGIN 0 */
  24:Src/adc.c     **** 
  25:Src/adc.c     **** /* USER CODE END 0 */
  26:Src/adc.c     **** 
  27:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  28:Src/adc.c     **** 
  29:Src/adc.c     **** /* ADC1 init function */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 2


  30:Src/adc.c     **** void MX_ADC1_Init(void)
  31:Src/adc.c     **** {
  30              		.loc 1 31 1
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 24
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 32
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  32:Src/adc.c     **** 
  33:Src/adc.c     ****   /* USER CODE BEGIN ADC1_Init 0 */
  34:Src/adc.c     **** 
  35:Src/adc.c     ****   /* USER CODE END ADC1_Init 0 */
  36:Src/adc.c     **** 
  37:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  45              		.loc 1 37 26
  46 0006 3B46     		mov	r3, r7
  47 0008 0022     		movs	r2, #0
  48 000a 1A60     		str	r2, [r3]
  49 000c 5A60     		str	r2, [r3, #4]
  50 000e 9A60     		str	r2, [r3, #8]
  51 0010 DA60     		str	r2, [r3, #12]
  52 0012 1A61     		str	r2, [r3, #16]
  53 0014 5A61     		str	r2, [r3, #20]
  38:Src/adc.c     **** 
  39:Src/adc.c     ****   /* USER CODE BEGIN ADC1_Init 1 */
  40:Src/adc.c     **** 
  41:Src/adc.c     ****   /* USER CODE END ADC1_Init 1 */
  42:Src/adc.c     **** 
  43:Src/adc.c     ****   /** Common config
  44:Src/adc.c     ****   */
  45:Src/adc.c     ****   hadc1.Instance = ADC1;
  54              		.loc 1 45 18
  55 0016 294B     		ldr	r3, .L5
  56 0018 294A     		ldr	r2, .L5+4
  57 001a 1A60     		str	r2, [r3]
  46:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  58              		.loc 1 46 29
  59 001c 274B     		ldr	r3, .L5
  60 001e 0022     		movs	r2, #0
  61 0020 5A60     		str	r2, [r3, #4]
  47:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  62              		.loc 1 47 25
  63 0022 264B     		ldr	r3, .L5
  64 0024 0022     		movs	r2, #0
  65 0026 9A60     		str	r2, [r3, #8]
  48:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  66              		.loc 1 48 24
  67 0028 244B     		ldr	r3, .L5
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 3


  68 002a 0022     		movs	r2, #0
  69 002c DA60     		str	r2, [r3, #12]
  49:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
  70              		.loc 1 49 27
  71 002e 234B     		ldr	r3, .L5
  72 0030 0022     		movs	r2, #0
  73 0032 1A61     		str	r2, [r3, #16]
  50:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  74              		.loc 1 50 27
  75 0034 214B     		ldr	r3, .L5
  76 0036 0422     		movs	r2, #4
  77 0038 5A61     		str	r2, [r3, #20]
  51:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  78              		.loc 1 51 31
  79 003a 204B     		ldr	r3, .L5
  80 003c 0022     		movs	r2, #0
  81 003e 1A76     		strb	r2, [r3, #24]
  52:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  82              		.loc 1 52 33
  83 0040 1E4B     		ldr	r3, .L5
  84 0042 0022     		movs	r2, #0
  85 0044 5A76     		strb	r2, [r3, #25]
  53:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  86              		.loc 1 53 30
  87 0046 1D4B     		ldr	r3, .L5
  88 0048 0122     		movs	r2, #1
  89 004a DA61     		str	r2, [r3, #28]
  54:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  90              		.loc 1 54 36
  91 004c 1B4B     		ldr	r3, .L5
  92 004e 0022     		movs	r2, #0
  93 0050 83F82020 		strb	r2, [r3, #32]
  55:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  94              		.loc 1 55 31
  95 0054 194B     		ldr	r3, .L5
  96 0056 0022     		movs	r2, #0
  97 0058 9A62     		str	r2, [r3, #40]
  56:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  98              		.loc 1 56 35
  99 005a 184B     		ldr	r3, .L5
 100 005c 0022     		movs	r2, #0
 101 005e DA62     		str	r2, [r3, #44]
  57:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 102              		.loc 1 57 36
 103 0060 164B     		ldr	r3, .L5
 104 0062 0022     		movs	r2, #0
 105 0064 83F83020 		strb	r2, [r3, #48]
  58:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 106              		.loc 1 58 22
 107 0068 144B     		ldr	r3, .L5
 108 006a 0022     		movs	r2, #0
 109 006c 5A63     		str	r2, [r3, #52]
  59:Src/adc.c     ****   hadc1.Init.OversamplingMode = DISABLE;
 110              		.loc 1 59 31
 111 006e 134B     		ldr	r3, .L5
 112 0070 0022     		movs	r2, #0
 113 0072 83F83820 		strb	r2, [r3, #56]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 4


  60:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 114              		.loc 1 60 7
 115 0076 1148     		ldr	r0, .L5
 116 0078 FFF7FEFF 		bl	HAL_ADC_Init
 117 007c 0346     		mov	r3, r0
 118              		.loc 1 60 6
 119 007e 002B     		cmp	r3, #0
 120 0080 01D0     		beq	.L2
  61:Src/adc.c     ****   {
  62:Src/adc.c     ****     Error_Handler();
 121              		.loc 1 62 5
 122 0082 FFF7FEFF 		bl	Error_Handler
 123              	.L2:
  63:Src/adc.c     ****   }
  64:Src/adc.c     **** 
  65:Src/adc.c     ****   /** Configure Regular Channel
  66:Src/adc.c     ****   */
  67:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_11;
 124              		.loc 1 67 19
 125 0086 0F4B     		ldr	r3, .L5+8
 126 0088 3B60     		str	r3, [r7]
  68:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 127              		.loc 1 68 16
 128 008a 0623     		movs	r3, #6
 129 008c 7B60     		str	r3, [r7, #4]
  69:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 130              		.loc 1 69 24
 131 008e 0023     		movs	r3, #0
 132 0090 BB60     		str	r3, [r7, #8]
  70:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 133              		.loc 1 70 22
 134 0092 7F23     		movs	r3, #127
 135 0094 FB60     		str	r3, [r7, #12]
  71:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 136              		.loc 1 71 24
 137 0096 0423     		movs	r3, #4
 138 0098 3B61     		str	r3, [r7, #16]
  72:Src/adc.c     ****   sConfig.Offset = 0;
 139              		.loc 1 72 18
 140 009a 0023     		movs	r3, #0
 141 009c 7B61     		str	r3, [r7, #20]
  73:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 142              		.loc 1 73 7
 143 009e 3B46     		mov	r3, r7
 144 00a0 1946     		mov	r1, r3
 145 00a2 0648     		ldr	r0, .L5
 146 00a4 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 147 00a8 0346     		mov	r3, r0
 148              		.loc 1 73 6
 149 00aa 002B     		cmp	r3, #0
 150 00ac 01D0     		beq	.L4
  74:Src/adc.c     ****   {
  75:Src/adc.c     ****     Error_Handler();
 151              		.loc 1 75 5
 152 00ae FFF7FEFF 		bl	Error_Handler
 153              	.L4:
  76:Src/adc.c     ****   }
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 5


  77:Src/adc.c     ****   /* USER CODE BEGIN ADC1_Init 2 */
  78:Src/adc.c     **** 
  79:Src/adc.c     ****   /* USER CODE END ADC1_Init 2 */
  80:Src/adc.c     **** 
  81:Src/adc.c     **** }
 154              		.loc 1 81 1
 155 00b2 00BF     		nop
 156 00b4 1837     		adds	r7, r7, #24
 157              	.LCFI3:
 158              		.cfi_def_cfa_offset 8
 159 00b6 BD46     		mov	sp, r7
 160              	.LCFI4:
 161              		.cfi_def_cfa_register 13
 162              		@ sp needed
 163 00b8 80BD     		pop	{r7, pc}
 164              	.L6:
 165 00ba 00BF     		.align	2
 166              	.L5:
 167 00bc 00000000 		.word	hadc1
 168 00c0 00000450 		.word	1342439424
 169 00c4 0008302E 		.word	774899712
 170              		.cfi_endproc
 171              	.LFE292:
 173              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 174              		.align	1
 175              		.global	HAL_ADC_MspInit
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	HAL_ADC_MspInit:
 182              	.LFB293:
  82:Src/adc.c     **** 
  83:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  84:Src/adc.c     **** {
 183              		.loc 1 84 1
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 144
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              	.LCFI5:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0002 A4B0     		sub	sp, sp, #144
 193              	.LCFI6:
 194              		.cfi_def_cfa_offset 152
 195 0004 00AF     		add	r7, sp, #0
 196              	.LCFI7:
 197              		.cfi_def_cfa_register 7
 198 0006 7860     		str	r0, [r7, #4]
  85:Src/adc.c     **** 
  86:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 199              		.loc 1 86 20
 200 0008 07F17C03 		add	r3, r7, #124
 201 000c 0022     		movs	r2, #0
 202 000e 1A60     		str	r2, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 6


 203 0010 5A60     		str	r2, [r3, #4]
 204 0012 9A60     		str	r2, [r3, #8]
 205 0014 DA60     		str	r2, [r3, #12]
 206 0016 1A61     		str	r2, [r3, #16]
  87:Src/adc.c     ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 207              		.loc 1 87 28
 208 0018 07F11403 		add	r3, r7, #20
 209 001c 6822     		movs	r2, #104
 210 001e 0021     		movs	r1, #0
 211 0020 1846     		mov	r0, r3
 212 0022 FFF7FEFF 		bl	memset
  88:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 213              		.loc 1 88 15
 214 0026 7B68     		ldr	r3, [r7, #4]
 215 0028 1B68     		ldr	r3, [r3]
 216              		.loc 1 88 5
 217 002a 334A     		ldr	r2, .L11
 218 002c 9342     		cmp	r3, r2
 219 002e 5FD1     		bne	.L10
  89:Src/adc.c     ****   {
  90:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  91:Src/adc.c     **** 
  92:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
  93:Src/adc.c     **** 
  94:Src/adc.c     ****   /** Initializes the peripherals clock
  95:Src/adc.c     ****   */
  96:Src/adc.c     ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 220              		.loc 1 96 40
 221 0030 4FF48043 		mov	r3, #16384
 222 0034 7B61     		str	r3, [r7, #20]
  97:Src/adc.c     ****     PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 223              		.loc 1 97 37
 224 0036 4FF08053 		mov	r3, #268435456
 225 003a 3B67     		str	r3, [r7, #112]
  98:Src/adc.c     ****     PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 226              		.loc 1 98 41
 227 003c 0123     		movs	r3, #1
 228 003e BB61     		str	r3, [r7, #24]
  99:Src/adc.c     ****     PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 229              		.loc 1 99 36
 230 0040 0123     		movs	r3, #1
 231 0042 FB61     		str	r3, [r7, #28]
 100:Src/adc.c     ****     PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 232              		.loc 1 100 36
 233 0044 1023     		movs	r3, #16
 234 0046 3B62     		str	r3, [r7, #32]
 101:Src/adc.c     ****     PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 235              		.loc 1 101 36
 236 0048 0723     		movs	r3, #7
 237 004a 7B62     		str	r3, [r7, #36]
 102:Src/adc.c     ****     PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 238              		.loc 1 102 36
 239 004c 0223     		movs	r3, #2
 240 004e BB62     		str	r3, [r7, #40]
 103:Src/adc.c     ****     PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 241              		.loc 1 103 36
 242 0050 0223     		movs	r3, #2
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 7


 243 0052 FB62     		str	r3, [r7, #44]
 104:Src/adc.c     ****     PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 244              		.loc 1 104 43
 245 0054 4FF08073 		mov	r3, #16777216
 246 0058 3B63     		str	r3, [r7, #48]
 105:Src/adc.c     ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 247              		.loc 1 105 9
 248 005a 07F11403 		add	r3, r7, #20
 249 005e 1846     		mov	r0, r3
 250 0060 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 251 0064 0346     		mov	r3, r0
 252              		.loc 1 105 8
 253 0066 002B     		cmp	r3, #0
 254 0068 01D0     		beq	.L9
 106:Src/adc.c     ****     {
 107:Src/adc.c     ****       Error_Handler();
 255              		.loc 1 107 7
 256 006a FFF7FEFF 		bl	Error_Handler
 257              	.L9:
 258              	.LBB2:
 108:Src/adc.c     ****     }
 109:Src/adc.c     **** 
 110:Src/adc.c     ****     /* ADC1 clock enable */
 111:Src/adc.c     ****     __HAL_RCC_ADC_CLK_ENABLE();
 259              		.loc 1 111 5
 260 006e 234B     		ldr	r3, .L11+4
 261 0070 DB6C     		ldr	r3, [r3, #76]
 262 0072 224A     		ldr	r2, .L11+4
 263 0074 43F40053 		orr	r3, r3, #8192
 264 0078 D364     		str	r3, [r2, #76]
 265 007a 204B     		ldr	r3, .L11+4
 266 007c DB6C     		ldr	r3, [r3, #76]
 267 007e 03F40053 		and	r3, r3, #8192
 268 0082 3B61     		str	r3, [r7, #16]
 269 0084 3B69     		ldr	r3, [r7, #16]
 270              	.LBE2:
 271              	.LBB3:
 112:Src/adc.c     **** 
 113:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 272              		.loc 1 113 5
 273 0086 1D4B     		ldr	r3, .L11+4
 274 0088 DB6C     		ldr	r3, [r3, #76]
 275 008a 1C4A     		ldr	r2, .L11+4
 276 008c 43F00103 		orr	r3, r3, #1
 277 0090 D364     		str	r3, [r2, #76]
 278 0092 1A4B     		ldr	r3, .L11+4
 279 0094 DB6C     		ldr	r3, [r3, #76]
 280 0096 03F00103 		and	r3, r3, #1
 281 009a FB60     		str	r3, [r7, #12]
 282 009c FB68     		ldr	r3, [r7, #12]
 283              	.LBE3:
 284              	.LBB4:
 114:Src/adc.c     ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 285              		.loc 1 114 5
 286 009e 174B     		ldr	r3, .L11+4
 287 00a0 DB6C     		ldr	r3, [r3, #76]
 288 00a2 164A     		ldr	r2, .L11+4
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 8


 289 00a4 43F00203 		orr	r3, r3, #2
 290 00a8 D364     		str	r3, [r2, #76]
 291 00aa 144B     		ldr	r3, .L11+4
 292 00ac DB6C     		ldr	r3, [r3, #76]
 293 00ae 03F00203 		and	r3, r3, #2
 294 00b2 BB60     		str	r3, [r7, #8]
 295 00b4 BB68     		ldr	r3, [r7, #8]
 296              	.LBE4:
 115:Src/adc.c     ****     /**ADC1 GPIO Configuration
 116:Src/adc.c     ****     PA6     ------> ADC1_IN11
 117:Src/adc.c     ****     PB0     ------> ADC1_IN15
 118:Src/adc.c     ****     */
 119:Src/adc.c     ****     GPIO_InitStruct.Pin = BATT_ADC_IN_Pin;
 297              		.loc 1 119 25
 298 00b6 4023     		movs	r3, #64
 299 00b8 FB67     		str	r3, [r7, #124]
 120:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 300              		.loc 1 120 26
 301 00ba 0B23     		movs	r3, #11
 302 00bc C7F88030 		str	r3, [r7, #128]
 121:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 303              		.loc 1 121 26
 304 00c0 0023     		movs	r3, #0
 305 00c2 C7F88430 		str	r3, [r7, #132]
 122:Src/adc.c     ****     HAL_GPIO_Init(BATT_ADC_IN_GPIO_Port, &GPIO_InitStruct);
 306              		.loc 1 122 5
 307 00c6 07F17C03 		add	r3, r7, #124
 308 00ca 1946     		mov	r1, r3
 309 00cc 4FF09040 		mov	r0, #1207959552
 310 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 123:Src/adc.c     **** 
 124:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 311              		.loc 1 124 25
 312 00d4 0123     		movs	r3, #1
 313 00d6 FB67     		str	r3, [r7, #124]
 125:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 314              		.loc 1 125 26
 315 00d8 0B23     		movs	r3, #11
 316 00da C7F88030 		str	r3, [r7, #128]
 126:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 317              		.loc 1 126 26
 318 00de 0023     		movs	r3, #0
 319 00e0 C7F88430 		str	r3, [r7, #132]
 127:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 320              		.loc 1 127 5
 321 00e4 07F17C03 		add	r3, r7, #124
 322 00e8 1946     		mov	r1, r3
 323 00ea 0548     		ldr	r0, .L11+8
 324 00ec FFF7FEFF 		bl	HAL_GPIO_Init
 325              	.L10:
 128:Src/adc.c     **** 
 129:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 130:Src/adc.c     **** 
 131:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 132:Src/adc.c     ****   }
 133:Src/adc.c     **** }
 326              		.loc 1 133 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 9


 327 00f0 00BF     		nop
 328 00f2 9037     		adds	r7, r7, #144
 329              	.LCFI8:
 330              		.cfi_def_cfa_offset 8
 331 00f4 BD46     		mov	sp, r7
 332              	.LCFI9:
 333              		.cfi_def_cfa_register 13
 334              		@ sp needed
 335 00f6 80BD     		pop	{r7, pc}
 336              	.L12:
 337              		.align	2
 338              	.L11:
 339 00f8 00000450 		.word	1342439424
 340 00fc 00100240 		.word	1073876992
 341 0100 00040048 		.word	1207960576
 342              		.cfi_endproc
 343              	.LFE293:
 345              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 346              		.align	1
 347              		.global	HAL_ADC_MspDeInit
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu fpv4-sp-d16
 353              	HAL_ADC_MspDeInit:
 354              	.LFB294:
 134:Src/adc.c     **** 
 135:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 136:Src/adc.c     **** {
 355              		.loc 1 136 1
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359 0000 80B5     		push	{r7, lr}
 360              	.LCFI10:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              	.LCFI11:
 366              		.cfi_def_cfa_offset 16
 367 0004 00AF     		add	r7, sp, #0
 368              	.LCFI12:
 369              		.cfi_def_cfa_register 7
 370 0006 7860     		str	r0, [r7, #4]
 137:Src/adc.c     **** 
 138:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 371              		.loc 1 138 15
 372 0008 7B68     		ldr	r3, [r7, #4]
 373 000a 1B68     		ldr	r3, [r3]
 374              		.loc 1 138 5
 375 000c 0A4A     		ldr	r2, .L16
 376 000e 9342     		cmp	r3, r2
 377 0010 0ED1     		bne	.L15
 139:Src/adc.c     ****   {
 140:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 141:Src/adc.c     **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 10


 142:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 143:Src/adc.c     ****     /* Peripheral clock disable */
 144:Src/adc.c     ****     __HAL_RCC_ADC_CLK_DISABLE();
 378              		.loc 1 144 5
 379 0012 0A4B     		ldr	r3, .L16+4
 380 0014 DB6C     		ldr	r3, [r3, #76]
 381 0016 094A     		ldr	r2, .L16+4
 382 0018 23F40053 		bic	r3, r3, #8192
 383 001c D364     		str	r3, [r2, #76]
 145:Src/adc.c     **** 
 146:Src/adc.c     ****     /**ADC1 GPIO Configuration
 147:Src/adc.c     ****     PA6     ------> ADC1_IN11
 148:Src/adc.c     ****     PB0     ------> ADC1_IN15
 149:Src/adc.c     ****     */
 150:Src/adc.c     ****     HAL_GPIO_DeInit(BATT_ADC_IN_GPIO_Port, BATT_ADC_IN_Pin);
 384              		.loc 1 150 5
 385 001e 4021     		movs	r1, #64
 386 0020 4FF09040 		mov	r0, #1207959552
 387 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 151:Src/adc.c     **** 
 152:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0);
 388              		.loc 1 152 5
 389 0028 0121     		movs	r1, #1
 390 002a 0548     		ldr	r0, .L16+8
 391 002c FFF7FEFF 		bl	HAL_GPIO_DeInit
 392              	.L15:
 153:Src/adc.c     **** 
 154:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 155:Src/adc.c     **** 
 156:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 157:Src/adc.c     ****   }
 158:Src/adc.c     **** }
 393              		.loc 1 158 1
 394 0030 00BF     		nop
 395 0032 0837     		adds	r7, r7, #8
 396              	.LCFI13:
 397              		.cfi_def_cfa_offset 8
 398 0034 BD46     		mov	sp, r7
 399              	.LCFI14:
 400              		.cfi_def_cfa_register 13
 401              		@ sp needed
 402 0036 80BD     		pop	{r7, pc}
 403              	.L17:
 404              		.align	2
 405              	.L16:
 406 0038 00000450 		.word	1342439424
 407 003c 00100240 		.word	1073876992
 408 0040 00040048 		.word	1207960576
 409              		.cfi_endproc
 410              	.LFE294:
 412              		.text
 413              	.Letext0:
 414              		.file 2 "/Users/isikcanyilmaz/KODMOD/b607/test/mcu/tools/gcc9.2.1/mac/arm-none-eabi/include/machin
 415              		.file 3 "/Users/isikcanyilmaz/KODMOD/b607/test/mcu/tools/gcc9.2.1/mac/arm-none-eabi/include/sys/_s
 416              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 417              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 418              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l452xx.h"
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 11


 419              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 420              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 421              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 422              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 423              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 424              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 425              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 426              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 427              		.file 15 "Inc/adc.h"
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
                            *COM*:0000000000000068 hadc1
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s:19     .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s:27     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s:167    .text.MX_ADC1_Init:00000000000000bc $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s:174    .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s:181    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s:339    .text.HAL_ADC_MspInit:00000000000000f8 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s:346    .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s:353    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccbi2Eqw.s:406    .text.HAL_ADC_MspDeInit:0000000000000038 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
Error_Handler
HAL_ADC_ConfigChannel
memset
HAL_RCCEx_PeriphCLKConfig
HAL_GPIO_Init
HAL_GPIO_DeInit
