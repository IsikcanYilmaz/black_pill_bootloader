ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"sw_timers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	counterMs
  18              		.section	.bss.counterMs,"aw",%nobits
  19              		.align	2
  22              	counterMs:
  23 0000 00000000 		.space	4
  24              		.global	timerListHead
  25              		.section	.bss.timerListHead,"aw",%nobits
  26              		.align	2
  29              	timerListHead:
  30 0000 00000000 		.space	4
  31              		.global	timerListTail
  32              		.section	.bss.timerListTail,"aw",%nobits
  33              		.align	2
  36              	timerListTail:
  37 0000 00000000 		.space	4
  38              		.section	.text.SwTimer_Unlist,"ax",%progbits
  39              		.align	1
  40              		.arch armv7e-m
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	SwTimer_Unlist:
  47              	.LFB292:
  48              		.file 1 "Src/sw_timers.c"
   1:Src/sw_timers.c **** #include "sw_timers.h"
   2:Src/sw_timers.c **** #include "stm32l4xx.h"
   3:Src/sw_timers.c **** #include "stm32l4xx_hal_cortex.h"
   4:Src/sw_timers.c **** #include "stm32l4xx_hal.h"
   5:Src/sw_timers.c **** 
   6:Src/sw_timers.c **** /*
   7:Src/sw_timers.c ****  * SOFTWARE TIMERS
   8:Src/sw_timers.c ****  * Api that allows for the execution of arbitrary functions at specified time
   9:Src/sw_timers.c ****  * A user is to create an instance of SwTimer_t, and populate the fn field 
  10:Src/sw_timers.c ****  * with the desired callback function. 
  11:Src/sw_timers.c ****  * How to use it:
  12:Src/sw_timers.c ****  * - Create SwTimer_t object. Set its .fn member to the desired callback 
  13:Src/sw_timers.c ****  *   function. set the Ms field to the millisecond value after which you want
  14:Src/sw_timers.c ****  *   the callback to be called.
  15:Src/sw_timers.c ****  * - Start timer with SwTimer_Start(&timer)
  16:Src/sw_timers.c ****  * How it works:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 2


  17:Src/sw_timers.c ****  * - $counter is incremented every millisecond.
  18:Src/sw_timers.c ****  * - We have a "timer" structure that has a function pointer that gets called
  19:Src/sw_timers.c ****  *   upon the structure's timeout_ms field reaching 0. This structure is 
  20:Src/sw_timers.c ****  *   "link listable". 
  21:Src/sw_timers.c ****  */
  22:Src/sw_timers.c **** 
  23:Src/sw_timers.c **** volatile uint32_t counterMs = 0;
  24:Src/sw_timers.c **** SwTimer_t *timerListHead = NULL; 
  25:Src/sw_timers.c **** SwTimer_t *timerListTail = NULL;
  26:Src/sw_timers.c **** 
  27:Src/sw_timers.c **** 
  28:Src/sw_timers.c **** // Upon timeout or stop, remove $timer from the linked list.
  29:Src/sw_timers.c **** static void SwTimer_Unlist(SwTimer_t *timer)
  30:Src/sw_timers.c **** {
  49              		.loc 1 30 1
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 32
  52              		@ frame_needed = 1, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54 0000 80B4     		push	{r7}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 4
  57              		.cfi_offset 7, -4
  58 0002 89B0     		sub	sp, sp, #36
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 40
  61 0004 00AF     		add	r7, sp, #0
  62              	.LCFI2:
  63              		.cfi_def_cfa_register 7
  64 0006 7860     		str	r0, [r7, #4]
  65              	.LBB14:
  66              	.LBB15:
  67              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 3


  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 4


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 5


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 6


 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 7


 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 8


 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 9


 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 10


 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  68              		.loc 2 453 3
  69              		.syntax unified
  70              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  71 0008 EFF31083 		MRS r3, primask
  72              	@ 0 "" 2
  73              		.thumb
  74              		.syntax unified
  75 000c 3B61     		str	r3, [r7, #16]
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  76              		.loc 2 454 9
  77 000e 3B69     		ldr	r3, [r7, #16]
  78              	.LBE15:
  79              	.LBE14:
  31:Src/sw_timers.c ****   // One of three things may happen at unlisting a timer
  32:Src/sw_timers.c ****   // - the timer at the head is to be unlisted
  33:Src/sw_timers.c ****   // - the timer at the tail
  34:Src/sw_timers.c ****   // - a timer in between
  35:Src/sw_timers.c **** 
  36:Src/sw_timers.c ****   CRITICAL_SECTION_BEGIN;
  80              		.loc 1 36 3
  81 0010 FB61     		str	r3, [r7, #28]
  82              	.LBB16:
  83              	.LBB17:
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  84              		.loc 2 209 3
  85              		.syntax unified
  86              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 11


  87 0012 72B6     		cpsid i
  88              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89              		.loc 2 210 1
  90              		.thumb
  91              		.syntax unified
  92 0014 00BF     		nop
  93              	.LBE17:
  94              	.LBE16:
  37:Src/sw_timers.c **** 
  38:Src/sw_timers.c ****   SwTimer_t *originalPrev = timer->prev;
  95              		.loc 1 38 14
  96 0016 7B68     		ldr	r3, [r7, #4]
  97 0018 5B69     		ldr	r3, [r3, #20]
  98 001a BB61     		str	r3, [r7, #24]
  39:Src/sw_timers.c ****   SwTimer_t *originalNext = timer->next;
  99              		.loc 1 39 14
 100 001c 7B68     		ldr	r3, [r7, #4]
 101 001e 1B69     		ldr	r3, [r3, #16]
 102 0020 7B61     		str	r3, [r7, #20]
  40:Src/sw_timers.c **** 
  41:Src/sw_timers.c ****   // this is the head of the list update our head
  42:Src/sw_timers.c ****   if (timer == timerListHead)
 103              		.loc 1 42 13
 104 0022 204B     		ldr	r3, .L9
 105 0024 1B68     		ldr	r3, [r3]
 106              		.loc 1 42 6
 107 0026 7A68     		ldr	r2, [r7, #4]
 108 0028 9A42     		cmp	r2, r3
 109 002a 0BD1     		bne	.L3
  43:Src/sw_timers.c ****   {
  44:Src/sw_timers.c ****     if (timer->next)
 110              		.loc 1 44 14
 111 002c 7B68     		ldr	r3, [r7, #4]
 112 002e 1B69     		ldr	r3, [r3, #16]
 113              		.loc 1 44 8
 114 0030 002B     		cmp	r3, #0
 115 0032 04D0     		beq	.L4
  45:Src/sw_timers.c ****       timerListHead = timer->next;
 116              		.loc 1 45 28
 117 0034 7B68     		ldr	r3, [r7, #4]
 118 0036 1B69     		ldr	r3, [r3, #16]
 119              		.loc 1 45 21
 120 0038 1A4A     		ldr	r2, .L9
 121 003a 1360     		str	r3, [r2]
 122 003c 02E0     		b	.L3
 123              	.L4:
  46:Src/sw_timers.c ****     else
  47:Src/sw_timers.c ****       timerListHead = NULL;
 124              		.loc 1 47 21
 125 003e 194B     		ldr	r3, .L9
 126 0040 0022     		movs	r2, #0
 127 0042 1A60     		str	r2, [r3]
 128              	.L3:
  48:Src/sw_timers.c ****   }
  49:Src/sw_timers.c **** 
  50:Src/sw_timers.c ****   // this is the tail of the list update our tail
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 12


  51:Src/sw_timers.c ****   if (timer == timerListTail)
 129              		.loc 1 51 13
 130 0044 184B     		ldr	r3, .L9+4
 131 0046 1B68     		ldr	r3, [r3]
 132              		.loc 1 51 6
 133 0048 7A68     		ldr	r2, [r7, #4]
 134 004a 9A42     		cmp	r2, r3
 135 004c 0BD1     		bne	.L5
  52:Src/sw_timers.c ****   {
  53:Src/sw_timers.c ****     if (timer->prev)
 136              		.loc 1 53 14
 137 004e 7B68     		ldr	r3, [r7, #4]
 138 0050 5B69     		ldr	r3, [r3, #20]
 139              		.loc 1 53 8
 140 0052 002B     		cmp	r3, #0
 141 0054 04D0     		beq	.L6
  54:Src/sw_timers.c ****       timerListTail = timer->prev;
 142              		.loc 1 54 28
 143 0056 7B68     		ldr	r3, [r7, #4]
 144 0058 5B69     		ldr	r3, [r3, #20]
 145              		.loc 1 54 21
 146 005a 134A     		ldr	r2, .L9+4
 147 005c 1360     		str	r3, [r2]
 148 005e 02E0     		b	.L5
 149              	.L6:
  55:Src/sw_timers.c ****     else
  56:Src/sw_timers.c ****       timerListTail = NULL;
 150              		.loc 1 56 21
 151 0060 114B     		ldr	r3, .L9+4
 152 0062 0022     		movs	r2, #0
 153 0064 1A60     		str	r2, [r3]
 154              	.L5:
  57:Src/sw_timers.c ****   }
  58:Src/sw_timers.c **** 
  59:Src/sw_timers.c ****   // this is a timer in the middle
  60:Src/sw_timers.c ****   if (originalPrev)
 155              		.loc 1 60 6
 156 0066 BB69     		ldr	r3, [r7, #24]
 157 0068 002B     		cmp	r3, #0
 158 006a 05D0     		beq	.L7
  61:Src/sw_timers.c ****   {
  62:Src/sw_timers.c ****     if (originalNext)
 159              		.loc 1 62 8
 160 006c 7B69     		ldr	r3, [r7, #20]
 161 006e 002B     		cmp	r3, #0
 162 0070 02D0     		beq	.L7
  63:Src/sw_timers.c ****       originalPrev->next = originalNext;
 163              		.loc 1 63 26
 164 0072 BB69     		ldr	r3, [r7, #24]
 165 0074 7A69     		ldr	r2, [r7, #20]
 166 0076 1A61     		str	r2, [r3, #16]
 167              	.L7:
  64:Src/sw_timers.c ****   }
  65:Src/sw_timers.c **** 
  66:Src/sw_timers.c ****   if (originalNext)
 168              		.loc 1 66 6
 169 0078 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 13


 170 007a 002B     		cmp	r3, #0
 171 007c 05D0     		beq	.L8
  67:Src/sw_timers.c ****   {
  68:Src/sw_timers.c ****     if (originalPrev)
 172              		.loc 1 68 8
 173 007e BB69     		ldr	r3, [r7, #24]
 174 0080 002B     		cmp	r3, #0
 175 0082 02D0     		beq	.L8
  69:Src/sw_timers.c ****       originalNext->prev = originalPrev;
 176              		.loc 1 69 26
 177 0084 7B69     		ldr	r3, [r7, #20]
 178 0086 BA69     		ldr	r2, [r7, #24]
 179 0088 5A61     		str	r2, [r3, #20]
 180              	.L8:
 181 008a FB69     		ldr	r3, [r7, #28]
 182 008c FB60     		str	r3, [r7, #12]
 183              	.LBB18:
 184              	.LBB19:
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 185              		.loc 2 481 3
 186 008e FB68     		ldr	r3, [r7, #12]
 187              		.syntax unified
 188              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 189 0090 83F31088 		MSR primask, r3
 190              	@ 0 "" 2
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 191              		.loc 2 482 1
 192              		.thumb
 193              		.syntax unified
 194 0094 00BF     		nop
 195              	.LBE19:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 14


 196              	.LBE18:
  70:Src/sw_timers.c ****   }
  71:Src/sw_timers.c **** 
  72:Src/sw_timers.c ****   CRITICAL_SECTION_END;
  73:Src/sw_timers.c **** }
 197              		.loc 1 73 1
 198 0096 00BF     		nop
 199 0098 2437     		adds	r7, r7, #36
 200              	.LCFI3:
 201              		.cfi_def_cfa_offset 4
 202 009a BD46     		mov	sp, r7
 203              	.LCFI4:
 204              		.cfi_def_cfa_register 13
 205              		@ sp needed
 206 009c 5DF8047B 		ldr	r7, [sp], #4
 207              	.LCFI5:
 208              		.cfi_restore 7
 209              		.cfi_def_cfa_offset 0
 210 00a0 7047     		bx	lr
 211              	.L10:
 212 00a2 00BF     		.align	2
 213              	.L9:
 214 00a4 00000000 		.word	timerListHead
 215 00a8 00000000 		.word	timerListTail
 216              		.cfi_endproc
 217              	.LFE292:
 219              		.section	.text.SwTimer_ProcessTimers,"ax",%progbits
 220              		.align	1
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	SwTimer_ProcessTimers:
 227              	.LFB293:
  74:Src/sw_timers.c **** 
  75:Src/sw_timers.c **** // Go through all registered timers and call their functions if they timeout
  76:Src/sw_timers.c **** static void SwTimer_ProcessTimers(void)
  77:Src/sw_timers.c **** {
 228              		.loc 1 77 1
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 16
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 80B5     		push	{r7, lr}
 233              	.LCFI6:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 84B0     		sub	sp, sp, #16
 238              	.LCFI7:
 239              		.cfi_def_cfa_offset 24
 240 0004 00AF     		add	r7, sp, #0
 241              	.LCFI8:
 242              		.cfi_def_cfa_register 7
  78:Src/sw_timers.c ****   if (timerListHead == NULL)
 243              		.loc 1 78 21
 244 0006 1B4B     		ldr	r3, .L21
 245 0008 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 15


 246              		.loc 1 78 6
 247 000a 002B     		cmp	r3, #0
 248 000c 2BD0     		beq	.L19
  79:Src/sw_timers.c ****   {
  80:Src/sw_timers.c ****     return;
  81:Src/sw_timers.c ****   }
  82:Src/sw_timers.c ****   
  83:Src/sw_timers.c ****   // Traverse thru the linked list of sw timer objects
  84:Src/sw_timers.c ****   // Decrement their remaining times
  85:Src/sw_timers.c ****   SwTimer_t *t = timerListHead;
 249              		.loc 1 85 14
 250 000e 194B     		ldr	r3, .L21
 251 0010 1B68     		ldr	r3, [r3]
 252 0012 FB60     		str	r3, [r7, #12]
  86:Src/sw_timers.c ****   SwTimer_t *tNext = timerListHead->next;
 253              		.loc 1 86 35
 254 0014 174B     		ldr	r3, .L21
 255 0016 1B68     		ldr	r3, [r3]
 256              		.loc 1 86 14
 257 0018 1B69     		ldr	r3, [r3, #16]
 258 001a BB60     		str	r3, [r7, #8]
 259              	.L18:
  87:Src/sw_timers.c ****   while(true)
  88:Src/sw_timers.c ****   {
  89:Src/sw_timers.c ****     if (t->running)
 260              		.loc 1 89 10
 261 001c FB68     		ldr	r3, [r7, #12]
 262 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 263              		.loc 1 89 8
 264 0020 002B     		cmp	r3, #0
 265 0022 17D0     		beq	.L14
  90:Src/sw_timers.c ****     {
  91:Src/sw_timers.c ****       // Check if this timer timed out. if not decrement its remaining ms
  92:Src/sw_timers.c ****       if (t->remainingMs == 0)
 266              		.loc 1 92 12
 267 0024 FB68     		ldr	r3, [r7, #12]
 268 0026 9B68     		ldr	r3, [r3, #8]
 269              		.loc 1 92 10
 270 0028 002B     		cmp	r3, #0
 271 002a 0ED1     		bne	.L15
 272              	.LBB20:
  93:Src/sw_timers.c ****       {
  94:Src/sw_timers.c ****         // This timer timed out. Call its function and set the timers 
  95:Src/sw_timers.c ****         // new timeout based on what the function returns.
  96:Src/sw_timers.c ****         // If the function returns 0, remove this timer from the linked list.
  97:Src/sw_timers.c ****         uint32_t newTimeout = t->fn(); 
 273              		.loc 1 97 32
 274 002c FB68     		ldr	r3, [r7, #12]
 275 002e DB68     		ldr	r3, [r3, #12]
 276              		.loc 1 97 31
 277 0030 9847     		blx	r3
 278              	.LVL0:
 279 0032 7860     		str	r0, [r7, #4]
  98:Src/sw_timers.c ****         if (newTimeout)
 280              		.loc 1 98 12
 281 0034 7B68     		ldr	r3, [r7, #4]
 282 0036 002B     		cmp	r3, #0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 16


 283 0038 03D0     		beq	.L16
  99:Src/sw_timers.c ****         {
 100:Src/sw_timers.c ****           t->remainingMs = newTimeout;
 284              		.loc 1 100 26
 285 003a FB68     		ldr	r3, [r7, #12]
 286 003c 7A68     		ldr	r2, [r7, #4]
 287 003e 9A60     		str	r2, [r3, #8]
 288 0040 08E0     		b	.L14
 289              	.L16:
 101:Src/sw_timers.c ****         }
 102:Src/sw_timers.c ****         else
 103:Src/sw_timers.c ****         {
 104:Src/sw_timers.c ****           SwTimer_Unlist(t);
 290              		.loc 1 104 11
 291 0042 F868     		ldr	r0, [r7, #12]
 292 0044 FFF7FEFF 		bl	SwTimer_Unlist
 293 0048 04E0     		b	.L14
 294              	.L15:
 295              	.LBE20:
 105:Src/sw_timers.c ****         }
 106:Src/sw_timers.c ****       }
 107:Src/sw_timers.c ****       else
 108:Src/sw_timers.c ****       {
 109:Src/sw_timers.c ****         t->remainingMs--;
 296              		.loc 1 109 10
 297 004a FB68     		ldr	r3, [r7, #12]
 298 004c 9B68     		ldr	r3, [r3, #8]
 299              		.loc 1 109 23
 300 004e 5A1E     		subs	r2, r3, #1
 301 0050 FB68     		ldr	r3, [r7, #12]
 302 0052 9A60     		str	r2, [r3, #8]
 303              	.L14:
 110:Src/sw_timers.c ****       }
 111:Src/sw_timers.c ****     }
 112:Src/sw_timers.c **** 
 113:Src/sw_timers.c ****     t = tNext;
 304              		.loc 1 113 7
 305 0054 BB68     		ldr	r3, [r7, #8]
 306 0056 FB60     		str	r3, [r7, #12]
 114:Src/sw_timers.c ****     tNext = t->next;
 307              		.loc 1 114 11
 308 0058 FB68     		ldr	r3, [r7, #12]
 309 005a 1B69     		ldr	r3, [r3, #16]
 310 005c BB60     		str	r3, [r7, #8]
 115:Src/sw_timers.c **** 
 116:Src/sw_timers.c ****     if (t == NULL)
 311              		.loc 1 116 8
 312 005e FB68     		ldr	r3, [r7, #12]
 313 0060 002B     		cmp	r3, #0
 314 0062 02D0     		beq	.L20
  89:Src/sw_timers.c ****     {
 315              		.loc 1 89 8
 316 0064 DAE7     		b	.L18
 317              	.L19:
  80:Src/sw_timers.c ****   }
 318              		.loc 1 80 5
 319 0066 00BF     		nop
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 17


 320 0068 00E0     		b	.L11
 321              	.L20:
 117:Src/sw_timers.c ****     {
 118:Src/sw_timers.c ****       break;
 322              		.loc 1 118 7
 323 006a 00BF     		nop
 324              	.L11:
 119:Src/sw_timers.c ****     }
 120:Src/sw_timers.c ****   }
 121:Src/sw_timers.c **** 
 122:Src/sw_timers.c **** }
 325              		.loc 1 122 1
 326 006c 1037     		adds	r7, r7, #16
 327              	.LCFI9:
 328              		.cfi_def_cfa_offset 8
 329 006e BD46     		mov	sp, r7
 330              	.LCFI10:
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 0070 80BD     		pop	{r7, pc}
 334              	.L22:
 335 0072 00BF     		.align	2
 336              	.L21:
 337 0074 00000000 		.word	timerListHead
 338              		.cfi_endproc
 339              	.LFE293:
 341              		.section	.text.SwTimer_Start,"ax",%progbits
 342              		.align	1
 343              		.global	SwTimer_Start
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	SwTimer_Start:
 350              	.LFB294:
 123:Src/sw_timers.c **** 
 124:Src/sw_timers.c **** // Starting the timer means linking it to the overall timer linked list
 125:Src/sw_timers.c **** // and or flipping its $running field to true. Disable IRQs while doing so.
 126:Src/sw_timers.c **** void SwTimer_Start(SwTimer_t *timer)
 127:Src/sw_timers.c **** {
 351              		.loc 1 127 1
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 24
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 0000 80B4     		push	{r7}
 357              	.LCFI11:
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 7, -4
 360 0002 87B0     		sub	sp, sp, #28
 361              	.LCFI12:
 362              		.cfi_def_cfa_offset 32
 363 0004 00AF     		add	r7, sp, #0
 364              	.LCFI13:
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
 367              	.LBB21:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 18


 368              	.LBB22:
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 369              		.loc 2 453 3
 370              		.syntax unified
 371              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 372 0008 EFF31083 		MRS r3, primask
 373              	@ 0 "" 2
 374              		.thumb
 375              		.syntax unified
 376 000c 3B61     		str	r3, [r7, #16]
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377              		.loc 2 454 9
 378 000e 3B69     		ldr	r3, [r7, #16]
 379              	.LBE22:
 380              	.LBE21:
 128:Src/sw_timers.c ****   CRITICAL_SECTION_BEGIN;
 381              		.loc 1 128 3
 382 0010 7B61     		str	r3, [r7, #20]
 383              	.LBB23:
 384              	.LBB24:
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 385              		.loc 2 209 3
 386              		.syntax unified
 387              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 388 0012 72B6     		cpsid i
 389              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390              		.loc 2 210 1
 391              		.thumb
 392              		.syntax unified
 393 0014 00BF     		nop
 394              	.LBE24:
 395              	.LBE23:
 129:Src/sw_timers.c **** 
 130:Src/sw_timers.c ****   if (timerListHead == NULL) // this is the first timer that's registered
 396              		.loc 1 130 21
 397 0016 174B     		ldr	r3, .L27
 398 0018 1B68     		ldr	r3, [r3]
 399              		.loc 1 130 6
 400 001a 002B     		cmp	r3, #0
 401 001c 0CD1     		bne	.L25
 131:Src/sw_timers.c ****   {
 132:Src/sw_timers.c ****     timerListHead = timer;
 402              		.loc 1 132 19
 403 001e 154A     		ldr	r2, .L27
 404 0020 7B68     		ldr	r3, [r7, #4]
 405 0022 1360     		str	r3, [r2]
 133:Src/sw_timers.c ****     timerListTail = timer;
 406              		.loc 1 133 19
 407 0024 144A     		ldr	r2, .L27+4
 408 0026 7B68     		ldr	r3, [r7, #4]
 409 0028 1360     		str	r3, [r2]
 134:Src/sw_timers.c ****     timer->next = NULL;
 410              		.loc 1 134 17
 411 002a 7B68     		ldr	r3, [r7, #4]
 412 002c 0022     		movs	r2, #0
 413 002e 1A61     		str	r2, [r3, #16]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 19


 135:Src/sw_timers.c ****     timer->prev = NULL;
 414              		.loc 1 135 17
 415 0030 7B68     		ldr	r3, [r7, #4]
 416 0032 0022     		movs	r2, #0
 417 0034 5A61     		str	r2, [r3, #20]
 418 0036 0AE0     		b	.L26
 419              	.L25:
 136:Src/sw_timers.c ****   }
 137:Src/sw_timers.c ****   else // not the first timer. add it to the end of the list
 138:Src/sw_timers.c ****   {
 139:Src/sw_timers.c ****     timer->prev = timerListTail;
 420              		.loc 1 139 17
 421 0038 0F4B     		ldr	r3, .L27+4
 422 003a 1A68     		ldr	r2, [r3]
 423 003c 7B68     		ldr	r3, [r7, #4]
 424 003e 5A61     		str	r2, [r3, #20]
 140:Src/sw_timers.c ****     timerListTail->next = timer;
 425              		.loc 1 140 18
 426 0040 0D4B     		ldr	r3, .L27+4
 427 0042 1B68     		ldr	r3, [r3]
 428              		.loc 1 140 25
 429 0044 7A68     		ldr	r2, [r7, #4]
 430 0046 1A61     		str	r2, [r3, #16]
 141:Src/sw_timers.c ****     timerListTail = timer;
 431              		.loc 1 141 19
 432 0048 0B4A     		ldr	r2, .L27+4
 433 004a 7B68     		ldr	r3, [r7, #4]
 434 004c 1360     		str	r3, [r2]
 435              	.L26:
 142:Src/sw_timers.c ****   }
 143:Src/sw_timers.c ****   timer->running = true;
 436              		.loc 1 143 18
 437 004e 7B68     		ldr	r3, [r7, #4]
 438 0050 0122     		movs	r2, #1
 439 0052 1A70     		strb	r2, [r3]
 144:Src/sw_timers.c ****   timer->remainingMs = timer->Ms;
 440              		.loc 1 144 29
 441 0054 7B68     		ldr	r3, [r7, #4]
 442 0056 5A68     		ldr	r2, [r3, #4]
 443              		.loc 1 144 22
 444 0058 7B68     		ldr	r3, [r7, #4]
 445 005a 9A60     		str	r2, [r3, #8]
 446 005c 7B69     		ldr	r3, [r7, #20]
 447 005e FB60     		str	r3, [r7, #12]
 448              	.LBB25:
 449              	.LBB26:
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 450              		.loc 2 481 3
 451 0060 FB68     		ldr	r3, [r7, #12]
 452              		.syntax unified
 453              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 454 0062 83F31088 		MSR primask, r3
 455              	@ 0 "" 2
 456              		.loc 2 482 1
 457              		.thumb
 458              		.syntax unified
 459 0066 00BF     		nop
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 20


 460              	.LBE26:
 461              	.LBE25:
 145:Src/sw_timers.c **** 
 146:Src/sw_timers.c ****   CRITICAL_SECTION_END;
 147:Src/sw_timers.c **** }
 462              		.loc 1 147 1
 463 0068 00BF     		nop
 464 006a 1C37     		adds	r7, r7, #28
 465              	.LCFI14:
 466              		.cfi_def_cfa_offset 4
 467 006c BD46     		mov	sp, r7
 468              	.LCFI15:
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
 471 006e 5DF8047B 		ldr	r7, [sp], #4
 472              	.LCFI16:
 473              		.cfi_restore 7
 474              		.cfi_def_cfa_offset 0
 475 0072 7047     		bx	lr
 476              	.L28:
 477              		.align	2
 478              	.L27:
 479 0074 00000000 		.word	timerListHead
 480 0078 00000000 		.word	timerListTail
 481              		.cfi_endproc
 482              	.LFE294:
 484              		.section	.text.SwTimer_Stop,"ax",%progbits
 485              		.align	1
 486              		.global	SwTimer_Stop
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv4-sp-d16
 492              	SwTimer_Stop:
 493              	.LFB295:
 148:Src/sw_timers.c **** 
 149:Src/sw_timers.c **** // Stop timer. 
 150:Src/sw_timers.c **** // TODO theres no way of pausing and resuming available in this
 151:Src/sw_timers.c **** // thing yet. you can reset the timer but cant pause and continue.
 152:Src/sw_timers.c **** void SwTimer_Stop(SwTimer_t *timer)
 153:Src/sw_timers.c **** {
 494              		.loc 1 153 1
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 8
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498 0000 80B5     		push	{r7, lr}
 499              	.LCFI17:
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 7, -8
 502              		.cfi_offset 14, -4
 503 0002 82B0     		sub	sp, sp, #8
 504              	.LCFI18:
 505              		.cfi_def_cfa_offset 16
 506 0004 00AF     		add	r7, sp, #0
 507              	.LCFI19:
 508              		.cfi_def_cfa_register 7
 509 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 21


 154:Src/sw_timers.c ****   timer->running = false;
 510              		.loc 1 154 18
 511 0008 7B68     		ldr	r3, [r7, #4]
 512 000a 0022     		movs	r2, #0
 513 000c 1A70     		strb	r2, [r3]
 155:Src/sw_timers.c ****   SwTimer_Unlist(timer);
 514              		.loc 1 155 3
 515 000e 7868     		ldr	r0, [r7, #4]
 516 0010 FFF7FEFF 		bl	SwTimer_Unlist
 156:Src/sw_timers.c **** }
 517              		.loc 1 156 1
 518 0014 00BF     		nop
 519 0016 0837     		adds	r7, r7, #8
 520              	.LCFI20:
 521              		.cfi_def_cfa_offset 8
 522 0018 BD46     		mov	sp, r7
 523              	.LCFI21:
 524              		.cfi_def_cfa_register 13
 525              		@ sp needed
 526 001a 80BD     		pop	{r7, pc}
 527              		.cfi_endproc
 528              	.LFE295:
 530              		.section	.text.SwTimer_ISR,"ax",%progbits
 531              		.align	1
 532              		.global	SwTimer_ISR
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	SwTimer_ISR:
 539              	.LFB296:
 157:Src/sw_timers.c **** 
 158:Src/sw_timers.c **** // This is called upon the SysTick IRQ. It will increment our Ms counter and
 159:Src/sw_timers.c **** // process all timers. 
 160:Src/sw_timers.c **** void SwTimer_ISR(void)
 161:Src/sw_timers.c **** {
 540              		.loc 1 161 1
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544 0000 80B5     		push	{r7, lr}
 545              	.LCFI22:
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 7, -8
 548              		.cfi_offset 14, -4
 549 0002 00AF     		add	r7, sp, #0
 550              	.LCFI23:
 551              		.cfi_def_cfa_register 7
 162:Src/sw_timers.c ****   counterMs++;
 552              		.loc 1 162 12
 553 0004 044B     		ldr	r3, .L31
 554 0006 1B68     		ldr	r3, [r3]
 555 0008 0133     		adds	r3, r3, #1
 556 000a 034A     		ldr	r2, .L31
 557 000c 1360     		str	r3, [r2]
 163:Src/sw_timers.c ****   SwTimer_ProcessTimers();
 558              		.loc 1 163 3
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 22


 559 000e FFF7FEFF 		bl	SwTimer_ProcessTimers
 164:Src/sw_timers.c **** }
 560              		.loc 1 164 1
 561 0012 00BF     		nop
 562 0014 80BD     		pop	{r7, pc}
 563              	.L32:
 564 0016 00BF     		.align	2
 565              	.L31:
 566 0018 00000000 		.word	counterMs
 567              		.cfi_endproc
 568              	.LFE296:
 570              		.text
 571              	.Letext0:
 572              		.file 3 "/Users/isikcanyilmaz/KODMOD/b607/test/mcu/tools/gcc9.2.1/mac/arm-none-eabi/include/machin
 573              		.file 4 "/Users/isikcanyilmaz/KODMOD/b607/test/mcu/tools/gcc9.2.1/mac/arm-none-eabi/include/sys/_s
 574              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 575              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 576              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 577              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 578              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 579              		.file 10 "Inc/sw_timers.h"
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sw_timers.c
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:22     .bss.counterMs:0000000000000000 counterMs
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:19     .bss.counterMs:0000000000000000 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:29     .bss.timerListHead:0000000000000000 timerListHead
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:26     .bss.timerListHead:0000000000000000 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:36     .bss.timerListTail:0000000000000000 timerListTail
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:33     .bss.timerListTail:0000000000000000 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:39     .text.SwTimer_Unlist:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:46     .text.SwTimer_Unlist:0000000000000000 SwTimer_Unlist
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:214    .text.SwTimer_Unlist:00000000000000a4 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:220    .text.SwTimer_ProcessTimers:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:226    .text.SwTimer_ProcessTimers:0000000000000000 SwTimer_ProcessTimers
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:337    .text.SwTimer_ProcessTimers:0000000000000074 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:342    .text.SwTimer_Start:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:349    .text.SwTimer_Start:0000000000000000 SwTimer_Start
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:479    .text.SwTimer_Start:0000000000000074 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:485    .text.SwTimer_Stop:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:492    .text.SwTimer_Stop:0000000000000000 SwTimer_Stop
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:531    .text.SwTimer_ISR:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:538    .text.SwTimer_ISR:0000000000000000 SwTimer_ISR
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccF7cYiL.s:566    .text.SwTimer_ISR:0000000000000018 $d

NO UNDEFINED SYMBOLS
