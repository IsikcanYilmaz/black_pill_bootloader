ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"button_driver.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	buttonDebounceTimer
  18              		.section	.bss.buttonDebounceTimer,"aw",%nobits
  19              		.align	2
  22              	buttonDebounceTimer:
  23 0000 00000000 		.space	24
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	buttonSequenceTimer
  25              		.section	.bss.buttonSequenceTimer,"aw",%nobits
  26              		.align	2
  29              	buttonSequenceTimer:
  30 0000 00000000 		.space	24
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.global	buttonHoldTimer
  32              		.section	.bss.buttonHoldTimer,"aw",%nobits
  33              		.align	2
  36              	buttonHoldTimer:
  37 0000 00000000 		.space	24
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              		.comm	userButton1,16,4
  39              		.section	.text.DebounceTimeout,"ax",%progbits
  40              		.align	1
  41              		.arch armv7e-m
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	DebounceTimeout:
  48              	.LFB292:
  49              		.file 1 "Src/button_driver.c"
   1:Src/button_driver.c **** #include "button_driver.h"
   2:Src/button_driver.c **** #include "sw_timers.h"
   3:Src/button_driver.c **** #include "addressable_led_manager.h"
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 2


   4:Src/button_driver.c **** 
   5:Src/button_driver.c **** /*
   6:Src/button_driver.c ****  * BUTTON DRIVER
   7:Src/button_driver.c ****  * How it works:
   8:Src/button_driver.c ****  * - Currently there's only one button on the light cube so this driver 
   9:Src/button_driver.c ****  *   is rather relaxed. We'll assume there's only one button.
  10:Src/button_driver.c ****  * - GPIO edge triggers IRQ and has us call ButtonDriver_ISR. It starts the
  11:Src/button_driver.c ****  *   debounce timer. Debounce check is done upon the timeout of it.
  12:Src/button_driver.c ****  * - This driver is responsible of figuring out the sequence of button inputs.
  13:Src/button_driver.c ****  * - Sequences can be made up of button presses and a press&hold that can end
  14:Src/button_driver.c ****  *   a sequence. for example 2 short releases and 1 long press, tap tap hold.
  15:Src/button_driver.c ****  *   Can be a single hold. can be a single tap.
  16:Src/button_driver.c ****  * - Holds will have four time lengths: normal, long, very long, very very long
  17:Src/button_driver.c ****  *
  18:Src/button_driver.c ****  */
  19:Src/button_driver.c **** 
  20:Src/button_driver.c **** SwTimer_t buttonDebounceTimer = {.fn = NULL, .Ms = 0};
  21:Src/button_driver.c **** SwTimer_t buttonSequenceTimer = {.fn = NULL, .Ms = 0};
  22:Src/button_driver.c **** SwTimer_t buttonHoldTimer     = {.fn = NULL, .Ms = 0};
  23:Src/button_driver.c **** 
  24:Src/button_driver.c **** ButtonContext_t userButton1;
  25:Src/button_driver.c **** 
  26:Src/button_driver.c **** static uint32_t DebounceTimeout(void)
  27:Src/button_driver.c **** {
  50              		.loc 1 27 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 8
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 80B5     		push	{r7, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 0002 82B0     		sub	sp, sp, #8
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 16
  62 0004 00AF     		add	r7, sp, #0
  63              	.LCFI2:
  64              		.cfi_def_cfa_register 7
  28:Src/button_driver.c ****   GPIO_PinState state = HAL_GPIO_ReadPin(userButton1.port, userButton1.pin); 
  65              		.loc 1 28 25
  66 0006 1A4B     		ldr	r3, .L7
  67 0008 1B68     		ldr	r3, [r3]
  68 000a 194A     		ldr	r2, .L7
  69 000c 9288     		ldrh	r2, [r2, #4]
  70 000e 1146     		mov	r1, r2
  71 0010 1846     		mov	r0, r3
  72 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  73 0016 0346     		mov	r3, r0
  74 0018 FB71     		strb	r3, [r7, #7]
  29:Src/button_driver.c ****   // Check if this is a succesfull button press
  30:Src/button_driver.c ****   if (state == userButton1.debounceCheck && userButton1.debouncePending)
  75              		.loc 1 30 27
  76 001a 154B     		ldr	r3, .L7
  77 001c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
  78              		.loc 1 30 6
  79 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 3


  80 0020 9A42     		cmp	r2, r3
  81 0022 1DD1     		bne	.L2
  82              		.loc 1 30 56 discriminator 1
  83 0024 124B     		ldr	r3, .L7
  84 0026 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
  85              		.loc 1 30 42 discriminator 1
  86 0028 002B     		cmp	r3, #0
  87 002a 19D0     		beq	.L2
  88              	.LBB9:
  31:Src/button_driver.c ****   {
  32:Src/button_driver.c ****     uint32_t deltaT = SwTimer_GetCountMs() - userButton1.lastInputMs;
  89              		.loc 1 32 44
  90 002c 114B     		ldr	r3, .L7+4
  91 002e 1A68     		ldr	r2, [r3]
  92              		.loc 1 32 57
  93 0030 0F4B     		ldr	r3, .L7
  94 0032 DB68     		ldr	r3, [r3, #12]
  95              		.loc 1 32 14
  96 0034 D31A     		subs	r3, r2, r3
  97 0036 3B60     		str	r3, [r7]
  33:Src/button_driver.c ****     if (state == GPIO_PIN_SET) // PRESS 
  98              		.loc 1 33 8
  99 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 100 003a 012B     		cmp	r3, #1
 101 003c 03D1     		bne	.L3
  34:Src/button_driver.c ****     {
  35:Src/button_driver.c ****       userButton1.pressed = true;
 102              		.loc 1 35 27
 103 003e 0C4B     		ldr	r3, .L7
 104 0040 0122     		movs	r2, #1
 105 0042 1A72     		strb	r2, [r3, #8]
 106 0044 08E0     		b	.L4
 107              	.L3:
  36:Src/button_driver.c ****     }
  37:Src/button_driver.c ****     else // state == GPIO_PIN_RESET // RELEASE
  38:Src/button_driver.c ****     {
  39:Src/button_driver.c ****       if (userButton1.pressed == true)
 108              		.loc 1 39 22
 109 0046 0A4B     		ldr	r3, .L7
 110 0048 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 111              		.loc 1 39 10
 112 004a 002B     		cmp	r3, #0
 113 004c 01D0     		beq	.L5
  40:Src/button_driver.c ****       {
  41:Src/button_driver.c ****         AddrLEDManager_PlayNextAnimation();
 114              		.loc 1 41 9
 115 004e FFF7FEFF 		bl	AddrLEDManager_PlayNextAnimation
 116              	.L5:
  42:Src/button_driver.c ****         if (deltaT < CNFG_BUTTON_SHORT_PRESS_MS)
  43:Src/button_driver.c ****         {
  44:Src/button_driver.c ****           // Short press happened
  45:Src/button_driver.c ****         }
  46:Src/button_driver.c ****         else if (deltaT < CNFG_BUTTON_LONG_PRESS_MS)
  47:Src/button_driver.c ****         {
  48:Src/button_driver.c ****           // Long press happened
  49:Src/button_driver.c ****         }
  50:Src/button_driver.c ****         else if (deltaT < CNFG_BUTTON_VLONG_PRESS_MS)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 4


  51:Src/button_driver.c ****         {
  52:Src/button_driver.c ****           // Very long press happened (3second)
  53:Src/button_driver.c ****         }
  54:Src/button_driver.c ****         else if (deltaT < CNFG_BUTTON_VVLONG_PRESS_MS)
  55:Src/button_driver.c ****         {
  56:Src/button_driver.c ****           // Very very long press happened (10 second)
  57:Src/button_driver.c ****         }
  58:Src/button_driver.c ****         else
  59:Src/button_driver.c ****         {
  60:Src/button_driver.c ****           // Longer than 10seconds. not defined currently
  61:Src/button_driver.c ****         }
  62:Src/button_driver.c ****       }
  63:Src/button_driver.c ****       userButton1.pressed = false;
 117              		.loc 1 63 27
 118 0052 074B     		ldr	r3, .L7
 119 0054 0022     		movs	r2, #0
 120 0056 1A72     		strb	r2, [r3, #8]
 121              	.L4:
  64:Src/button_driver.c ****     }
  65:Src/button_driver.c **** 
  66:Src/button_driver.c ****     userButton1.lastInputMs = SwTimer_GetCountMs();
 122              		.loc 1 66 29
 123 0058 064B     		ldr	r3, .L7+4
 124 005a 1B68     		ldr	r3, [r3]
 125 005c 044A     		ldr	r2, .L7
 126 005e D360     		str	r3, [r2, #12]
 127              	.L2:
 128              	.LBE9:
  67:Src/button_driver.c ****   }
  68:Src/button_driver.c ****   userButton1.debouncePending = false;
 129              		.loc 1 68 31
 130 0060 034B     		ldr	r3, .L7
 131 0062 0022     		movs	r2, #0
 132 0064 DA71     		strb	r2, [r3, #7]
  69:Src/button_driver.c ****   return 0;
 133              		.loc 1 69 10
 134 0066 0023     		movs	r3, #0
  70:Src/button_driver.c **** }
 135              		.loc 1 70 1
 136 0068 1846     		mov	r0, r3
 137 006a 0837     		adds	r7, r7, #8
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 8
 140 006c BD46     		mov	sp, r7
 141              	.LCFI4:
 142              		.cfi_def_cfa_register 13
 143              		@ sp needed
 144 006e 80BD     		pop	{r7, pc}
 145              	.L8:
 146              		.align	2
 147              	.L7:
 148 0070 00000000 		.word	userButton1
 149 0074 00000000 		.word	counterMs
 150              		.cfi_endproc
 151              	.LFE292:
 153              		.section	.text.SequenceTimeout,"ax",%progbits
 154              		.align	1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 5


 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv4-sp-d16
 160              	SequenceTimeout:
 161              	.LFB293:
  71:Src/button_driver.c **** 
  72:Src/button_driver.c **** static uint32_t SequenceTimeout(void)
  73:Src/button_driver.c **** {
 162              		.loc 1 73 1
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167 0000 80B4     		push	{r7}
 168              	.LCFI5:
 169              		.cfi_def_cfa_offset 4
 170              		.cfi_offset 7, -4
 171 0002 00AF     		add	r7, sp, #0
 172              	.LCFI6:
 173              		.cfi_def_cfa_register 7
  74:Src/button_driver.c ****   // TODO Input sequences
  75:Src/button_driver.c ****   return 0;
 174              		.loc 1 75 10
 175 0004 0023     		movs	r3, #0
  76:Src/button_driver.c **** }
 176              		.loc 1 76 1
 177 0006 1846     		mov	r0, r3
 178 0008 BD46     		mov	sp, r7
 179              	.LCFI7:
 180              		.cfi_def_cfa_register 13
 181              		@ sp needed
 182 000a 5DF8047B 		ldr	r7, [sp], #4
 183              	.LCFI8:
 184              		.cfi_restore 7
 185              		.cfi_def_cfa_offset 0
 186 000e 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE293:
 190              		.section	.text.HoldTimeout,"ax",%progbits
 191              		.align	1
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	HoldTimeout:
 198              	.LFB294:
  77:Src/button_driver.c **** 
  78:Src/button_driver.c **** static uint32_t HoldTimeout(void)
  79:Src/button_driver.c **** {
 199              		.loc 1 79 1
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204 0000 80B4     		push	{r7}
 205              	.LCFI9:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 6


 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 7, -4
 208 0002 00AF     		add	r7, sp, #0
 209              	.LCFI10:
 210              		.cfi_def_cfa_register 7
  80:Src/button_driver.c ****   // TODO Hold sequences
  81:Src/button_driver.c ****   return 0;
 211              		.loc 1 81 10
 212 0004 0023     		movs	r3, #0
  82:Src/button_driver.c **** }
 213              		.loc 1 82 1
 214 0006 1846     		mov	r0, r3
 215 0008 BD46     		mov	sp, r7
 216              	.LCFI11:
 217              		.cfi_def_cfa_register 13
 218              		@ sp needed
 219 000a 5DF8047B 		ldr	r7, [sp], #4
 220              	.LCFI12:
 221              		.cfi_restore 7
 222              		.cfi_def_cfa_offset 0
 223 000e 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE294:
 227              		.section	.text.ButtonDriver_Init,"ax",%progbits
 228              		.align	1
 229              		.global	ButtonDriver_Init
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	ButtonDriver_Init:
 236              	.LFB295:
  83:Src/button_driver.c **** 
  84:Src/button_driver.c **** void ButtonDriver_Init(void)
  85:Src/button_driver.c **** {
 237              		.loc 1 85 1
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242 0000 80B4     		push	{r7}
 243              	.LCFI13:
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 7, -4
 246 0002 00AF     		add	r7, sp, #0
 247              	.LCFI14:
 248              		.cfi_def_cfa_register 7
  86:Src/button_driver.c ****   // Initialize our times
  87:Src/button_driver.c ****   buttonDebounceTimer.fn = DebounceTimeout;
 249              		.loc 1 87 26
 250 0004 0A4B     		ldr	r3, .L14
 251 0006 0B4A     		ldr	r2, .L14+4
 252 0008 DA60     		str	r2, [r3, #12]
  88:Src/button_driver.c ****   buttonDebounceTimer.Ms = CNFG_BUTTON_DEBOUNCE_TIME_MS;
 253              		.loc 1 88 26
 254 000a 094B     		ldr	r3, .L14
 255 000c 0322     		movs	r2, #3
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 7


 256 000e 5A60     		str	r2, [r3, #4]
  89:Src/button_driver.c ****   buttonSequenceTimer.fn = SequenceTimeout;
 257              		.loc 1 89 26
 258 0010 094B     		ldr	r3, .L14+8
 259 0012 0A4A     		ldr	r2, .L14+12
 260 0014 DA60     		str	r2, [r3, #12]
  90:Src/button_driver.c **** 
  91:Src/button_driver.c ****   // Initialize our button contexts
  92:Src/button_driver.c ****   userButton1.port = GPIOC;
 261              		.loc 1 92 20
 262 0016 0A4B     		ldr	r3, .L14+16
 263 0018 0A4A     		ldr	r2, .L14+20
 264 001a 1A60     		str	r2, [r3]
  93:Src/button_driver.c ****   userButton1.pin  = GPIO_PIN_13;
 265              		.loc 1 93 20
 266 001c 084B     		ldr	r3, .L14+16
 267 001e 4FF40052 		mov	r2, #8192
 268 0022 9A80     		strh	r2, [r3, #4]	@ movhi
  94:Src/button_driver.c **** }
 269              		.loc 1 94 1
 270 0024 00BF     		nop
 271 0026 BD46     		mov	sp, r7
 272              	.LCFI15:
 273              		.cfi_def_cfa_register 13
 274              		@ sp needed
 275 0028 5DF8047B 		ldr	r7, [sp], #4
 276              	.LCFI16:
 277              		.cfi_restore 7
 278              		.cfi_def_cfa_offset 0
 279 002c 7047     		bx	lr
 280              	.L15:
 281 002e 00BF     		.align	2
 282              	.L14:
 283 0030 00000000 		.word	buttonDebounceTimer
 284 0034 00000000 		.word	DebounceTimeout
 285 0038 00000000 		.word	buttonSequenceTimer
 286 003c 00000000 		.word	SequenceTimeout
 287 0040 00000000 		.word	userButton1
 288 0044 00080048 		.word	1207961600
 289              		.cfi_endproc
 290              	.LFE295:
 292              		.section	.text.ButtonDriver_ISR,"ax",%progbits
 293              		.align	1
 294              		.global	ButtonDriver_ISR
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv4-sp-d16
 300              	ButtonDriver_ISR:
 301              	.LFB296:
  95:Src/button_driver.c **** 
  96:Src/button_driver.c **** 
  97:Src/button_driver.c **** void ButtonDriver_ISR(void)
  98:Src/button_driver.c **** {
 302              		.loc 1 98 1
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 8


 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 80B5     		push	{r7, lr}
 307              	.LCFI17:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 84B0     		sub	sp, sp, #16
 312              	.LCFI18:
 313              		.cfi_def_cfa_offset 24
 314 0004 00AF     		add	r7, sp, #0
 315              	.LCFI19:
 316              		.cfi_def_cfa_register 7
  99:Src/button_driver.c ****   if (!userButton1.debouncePending)
 317              		.loc 1 99 19
 318 0006 154B     		ldr	r3, .L20
 319 0008 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 320              		.loc 1 99 7
 321 000a 83F00103 		eor	r3, r3, #1
 322 000e DBB2     		uxtb	r3, r3
 323              		.loc 1 99 6
 324 0010 002B     		cmp	r3, #0
 325 0012 1FD0     		beq	.L19
 326              	.LBB10:
 327              	.LBB11:
 328              	.LBB12:
 329              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 9


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 10


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 11


 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 12


 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 13


 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 14


 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 15


 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 16


 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 330              		.loc 2 453 3
 331              		.syntax unified
 332              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 333 0014 EFF31083 		MRS r3, primask
 334              	@ 0 "" 2
 335              		.thumb
 336              		.syntax unified
 337 0018 3B60     		str	r3, [r7]
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 338              		.loc 2 454 9
 339 001a 3B68     		ldr	r3, [r7]
 340              	.LBE12:
 341              	.LBE11:
 100:Src/button_driver.c ****   {
 101:Src/button_driver.c ****     CRITICAL_SECTION_BEGIN; // TODO // this may not be crit section worthy
 342              		.loc 1 101 5
 343 001c FB60     		str	r3, [r7, #12]
 344              	.LBB13:
 345              	.LBB14:
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 346              		.loc 2 209 3
 347              		.syntax unified
 348              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 349 001e 72B6     		cpsid i
 350              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351              		.loc 2 210 1
 352              		.thumb
 353              		.syntax unified
 354 0020 00BF     		nop
 355              	.LBE14:
 356              	.LBE13:
 102:Src/button_driver.c ****     userButton1.debouncePending = true;
 357              		.loc 1 102 33
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 17


 358 0022 0E4B     		ldr	r3, .L20
 359 0024 0122     		movs	r2, #1
 360 0026 DA71     		strb	r2, [r3, #7]
 103:Src/button_driver.c ****     GPIO_PinState state = HAL_GPIO_ReadPin(userButton1.port, userButton1.pin);
 361              		.loc 1 103 27
 362 0028 0C4B     		ldr	r3, .L20
 363 002a 1B68     		ldr	r3, [r3]
 364 002c 0B4A     		ldr	r2, .L20
 365 002e 9288     		ldrh	r2, [r2, #4]
 366 0030 1146     		mov	r1, r2
 367 0032 1846     		mov	r0, r3
 368 0034 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 369 0038 0346     		mov	r3, r0
 370 003a FB72     		strb	r3, [r7, #11]
 104:Src/button_driver.c ****     userButton1.debounceCheck = state;
 371              		.loc 1 104 31
 372 003c 074A     		ldr	r2, .L20
 373 003e FB7A     		ldrb	r3, [r7, #11]
 374 0040 9371     		strb	r3, [r2, #6]
 105:Src/button_driver.c ****     SwTimer_Start(&buttonDebounceTimer);
 375              		.loc 1 105 5
 376 0042 0748     		ldr	r0, .L20+4
 377 0044 FFF7FEFF 		bl	SwTimer_Start
 378 0048 FB68     		ldr	r3, [r7, #12]
 379 004a 7B60     		str	r3, [r7, #4]
 380              	.LBB15:
 381              	.LBB16:
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 382              		.loc 2 481 3
 383 004c 7B68     		ldr	r3, [r7, #4]
 384              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 18


 385              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 386 004e 83F31088 		MSR primask, r3
 387              	@ 0 "" 2
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 388              		.loc 2 482 1
 389              		.thumb
 390              		.syntax unified
 391 0052 00BF     		nop
 392              	.L19:
 393              	.LBE16:
 394              	.LBE15:
 395              	.LBE10:
 106:Src/button_driver.c ****     CRITICAL_SECTION_END;
 107:Src/button_driver.c ****   }
 108:Src/button_driver.c **** }
 396              		.loc 1 108 1
 397 0054 00BF     		nop
 398 0056 1037     		adds	r7, r7, #16
 399              	.LCFI20:
 400              		.cfi_def_cfa_offset 8
 401 0058 BD46     		mov	sp, r7
 402              	.LCFI21:
 403              		.cfi_def_cfa_register 13
 404              		@ sp needed
 405 005a 80BD     		pop	{r7, pc}
 406              	.L21:
 407              		.align	2
 408              	.L20:
 409 005c 00000000 		.word	userButton1
 410 0060 00000000 		.word	buttonDebounceTimer
 411              		.cfi_endproc
 412              	.LFE296:
 414              		.text
 415              	.Letext0:
 416              		.file 3 "/Users/isikcanyilmaz/KODMOD/b607/test/mcu/tools/gcc9.2.1/mac/arm-none-eabi/include/machin
 417              		.file 4 "/Users/isikcanyilmaz/KODMOD/b607/test/mcu/tools/gcc9.2.1/mac/arm-none-eabi/include/sys/_s
 418              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 419              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 420              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l452xx.h"
 421              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 422              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 423              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 424              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 425              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 426              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 427              		.file 14 "Inc/button_driver.h"
 428              		.file 15 "Inc/sw_timers.h"
 429              		.file 16 "Inc/tim.h"
 430              		.file 17 "Inc/addressable_led_manager.h"
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 button_driver.c
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:22     .bss.buttonDebounceTimer:0000000000000000 buttonDebounceTimer
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:19     .bss.buttonDebounceTimer:0000000000000000 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:29     .bss.buttonSequenceTimer:0000000000000000 buttonSequenceTimer
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:26     .bss.buttonSequenceTimer:0000000000000000 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:36     .bss.buttonHoldTimer:0000000000000000 buttonHoldTimer
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:33     .bss.buttonHoldTimer:0000000000000000 $d
                            *COM*:0000000000000010 userButton1
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:40     .text.DebounceTimeout:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:47     .text.DebounceTimeout:0000000000000000 DebounceTimeout
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:148    .text.DebounceTimeout:0000000000000070 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:154    .text.SequenceTimeout:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:160    .text.SequenceTimeout:0000000000000000 SequenceTimeout
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:191    .text.HoldTimeout:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:197    .text.HoldTimeout:0000000000000000 HoldTimeout
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:228    .text.ButtonDriver_Init:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:235    .text.ButtonDriver_Init:0000000000000000 ButtonDriver_Init
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:283    .text.ButtonDriver_Init:0000000000000030 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:293    .text.ButtonDriver_ISR:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:300    .text.ButtonDriver_ISR:0000000000000000 ButtonDriver_ISR
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//cc0nkh7y.s:409    .text.ButtonDriver_ISR:000000000000005c $d

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
AddrLEDManager_PlayNextAnimation
counterMs
SwTimer_Start
