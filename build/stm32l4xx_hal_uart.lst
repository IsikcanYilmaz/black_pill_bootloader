ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_Init:
  27              	.LFB292:
  28              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @attention
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * Copyright (c) 2017 STMicroelectronics.
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   [..]
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 2


  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ##### Callback registration #####
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ==================================
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 3


  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and a pointer to the user callback function.
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     weak (surcharged) function.
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and the Callback ID.
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function allows to reset following callbacks:
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 4


 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     or HAL_UART_Init() function.
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @endverbatim
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_OVER8 | USART_CR1_FIFOEN)) /*!< UART or USART CR1 f
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | U
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_OVER8)) /*!< UART or USART CR1 fields of parameters
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT | USART_CR
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR3_RXFTCFG)) /*!< UART or USART CR3 fields of paramete
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE |\
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                             USART_CR3_ONEBIT)) /*!< UART or USART CR3 fields of parameters set by U
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 5


 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_variables
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported Constants --------------------------------------------------------*/
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 6


 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   following table.
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 7


 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  29              		.loc 1 328 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 330 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 332 12
  50 000e 0123     		movs	r3, #1
  51 0010 40E0     		b	.L3
  52              	.L2:
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 346 12
  54 0012 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 8


  55 0014 9B6F     		ldr	r3, [r3, #120]
  56              		.loc 1 346 6
  57 0016 002B     		cmp	r3, #0
  58 0018 06D1     		bne	.L4
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  59              		.loc 1 349 17
  60 001a 7B68     		ldr	r3, [r7, #4]
  61 001c 0022     		movs	r2, #0
  62 001e 83F87420 		strb	r2, [r3, #116]
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  63              		.loc 1 363 5
  64 0022 7868     		ldr	r0, [r7, #4]
  65 0024 FFF7FEFF 		bl	HAL_UART_MspInit
  66              	.L4:
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  67              		.loc 1 367 17
  68 0028 7B68     		ldr	r3, [r7, #4]
  69 002a 2422     		movs	r2, #36
  70 002c 9A67     		str	r2, [r3, #120]
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  71              		.loc 1 369 3
  72 002e 7B68     		ldr	r3, [r7, #4]
  73 0030 1B68     		ldr	r3, [r3]
  74 0032 1A68     		ldr	r2, [r3]
  75 0034 7B68     		ldr	r3, [r7, #4]
  76 0036 1B68     		ldr	r3, [r3]
  77 0038 22F00102 		bic	r2, r2, #1
  78 003c 1A60     		str	r2, [r3]
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  79              		.loc 1 372 7
  80 003e 7868     		ldr	r0, [r7, #4]
  81 0040 FFF7FEFF 		bl	UART_SetConfig
  82 0044 0346     		mov	r3, r0
  83              		.loc 1 372 6
  84 0046 012B     		cmp	r3, #1
  85 0048 01D1     		bne	.L5
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 9


 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
  86              		.loc 1 374 12
  87 004a 0123     		movs	r3, #1
  88 004c 22E0     		b	.L3
  89              	.L5:
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  90              		.loc 1 377 26
  91 004e 7B68     		ldr	r3, [r7, #4]
  92 0050 5B6A     		ldr	r3, [r3, #36]
  93              		.loc 1 377 6
  94 0052 002B     		cmp	r3, #0
  95 0054 02D0     		beq	.L6
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  96              		.loc 1 379 5
  97 0056 7868     		ldr	r0, [r7, #4]
  98 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
  99              	.L6:
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 100              		.loc 1 385 3
 101 005c 7B68     		ldr	r3, [r7, #4]
 102 005e 1B68     		ldr	r3, [r3]
 103 0060 5A68     		ldr	r2, [r3, #4]
 104 0062 7B68     		ldr	r3, [r7, #4]
 105 0064 1B68     		ldr	r3, [r3]
 106 0066 22F49042 		bic	r2, r2, #18432
 107 006a 5A60     		str	r2, [r3, #4]
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 108              		.loc 1 386 3
 109 006c 7B68     		ldr	r3, [r7, #4]
 110 006e 1B68     		ldr	r3, [r3]
 111 0070 9A68     		ldr	r2, [r3, #8]
 112 0072 7B68     		ldr	r3, [r7, #4]
 113 0074 1B68     		ldr	r3, [r3]
 114 0076 22F02A02 		bic	r2, r2, #42
 115 007a 9A60     		str	r2, [r3, #8]
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 116              		.loc 1 388 3
 117 007c 7B68     		ldr	r3, [r7, #4]
 118 007e 1B68     		ldr	r3, [r3]
 119 0080 1A68     		ldr	r2, [r3]
 120 0082 7B68     		ldr	r3, [r7, #4]
 121 0084 1B68     		ldr	r3, [r3]
 122 0086 42F00102 		orr	r2, r2, #1
 123 008a 1A60     		str	r2, [r3]
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 10


 124              		.loc 1 391 11
 125 008c 7868     		ldr	r0, [r7, #4]
 126 008e FFF7FEFF 		bl	UART_CheckIdleState
 127 0092 0346     		mov	r3, r0
 128              	.L3:
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 129              		.loc 1 392 1
 130 0094 1846     		mov	r0, r3
 131 0096 0837     		adds	r7, r7, #8
 132              	.LCFI3:
 133              		.cfi_def_cfa_offset 8
 134 0098 BD46     		mov	sp, r7
 135              	.LCFI4:
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 009a 80BD     		pop	{r7, pc}
 139              		.cfi_endproc
 140              	.LFE292:
 142              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 143              		.align	1
 144              		.global	HAL_HalfDuplex_Init
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	HAL_HalfDuplex_Init:
 151              	.LFB293:
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 152              		.loc 1 401 1
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              	.LCFI5:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 82B0     		sub	sp, sp, #8
 162              	.LCFI6:
 163              		.cfi_def_cfa_offset 16
 164 0004 00AF     		add	r7, sp, #0
 165              	.LCFI7:
 166              		.cfi_def_cfa_register 7
 167 0006 7860     		str	r0, [r7, #4]
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 168              		.loc 1 403 6
 169 0008 7B68     		ldr	r3, [r7, #4]
 170 000a 002B     		cmp	r3, #0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 11


 171 000c 01D1     		bne	.L8
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 172              		.loc 1 405 12
 173 000e 0123     		movs	r3, #1
 174 0010 48E0     		b	.L9
 175              	.L8:
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 176              		.loc 1 411 12
 177 0012 7B68     		ldr	r3, [r7, #4]
 178 0014 9B6F     		ldr	r3, [r3, #120]
 179              		.loc 1 411 6
 180 0016 002B     		cmp	r3, #0
 181 0018 06D1     		bne	.L10
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 182              		.loc 1 414 17
 183 001a 7B68     		ldr	r3, [r7, #4]
 184 001c 0022     		movs	r2, #0
 185 001e 83F87420 		strb	r2, [r3, #116]
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 186              		.loc 1 428 5
 187 0022 7868     		ldr	r0, [r7, #4]
 188 0024 FFF7FEFF 		bl	HAL_UART_MspInit
 189              	.L10:
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 190              		.loc 1 432 17
 191 0028 7B68     		ldr	r3, [r7, #4]
 192 002a 2422     		movs	r2, #36
 193 002c 9A67     		str	r2, [r3, #120]
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 194              		.loc 1 434 3
 195 002e 7B68     		ldr	r3, [r7, #4]
 196 0030 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 12


 197 0032 1A68     		ldr	r2, [r3]
 198 0034 7B68     		ldr	r3, [r7, #4]
 199 0036 1B68     		ldr	r3, [r3]
 200 0038 22F00102 		bic	r2, r2, #1
 201 003c 1A60     		str	r2, [r3]
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 202              		.loc 1 437 7
 203 003e 7868     		ldr	r0, [r7, #4]
 204 0040 FFF7FEFF 		bl	UART_SetConfig
 205 0044 0346     		mov	r3, r0
 206              		.loc 1 437 6
 207 0046 012B     		cmp	r3, #1
 208 0048 01D1     		bne	.L11
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 209              		.loc 1 439 12
 210 004a 0123     		movs	r3, #1
 211 004c 2AE0     		b	.L9
 212              	.L11:
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 213              		.loc 1 442 26
 214 004e 7B68     		ldr	r3, [r7, #4]
 215 0050 5B6A     		ldr	r3, [r3, #36]
 216              		.loc 1 442 6
 217 0052 002B     		cmp	r3, #0
 218 0054 02D0     		beq	.L12
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 219              		.loc 1 444 5
 220 0056 7868     		ldr	r0, [r7, #4]
 221 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
 222              	.L12:
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 223              		.loc 1 450 3
 224 005c 7B68     		ldr	r3, [r7, #4]
 225 005e 1B68     		ldr	r3, [r3]
 226 0060 5A68     		ldr	r2, [r3, #4]
 227 0062 7B68     		ldr	r3, [r7, #4]
 228 0064 1B68     		ldr	r3, [r3]
 229 0066 22F49042 		bic	r2, r2, #18432
 230 006a 5A60     		str	r2, [r3, #4]
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 231              		.loc 1 451 3
 232 006c 7B68     		ldr	r3, [r7, #4]
 233 006e 1B68     		ldr	r3, [r3]
 234 0070 9A68     		ldr	r2, [r3, #8]
 235 0072 7B68     		ldr	r3, [r7, #4]
 236 0074 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 13


 237 0076 22F02202 		bic	r2, r2, #34
 238 007a 9A60     		str	r2, [r3, #8]
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 239              		.loc 1 454 3
 240 007c 7B68     		ldr	r3, [r7, #4]
 241 007e 1B68     		ldr	r3, [r3]
 242 0080 9A68     		ldr	r2, [r3, #8]
 243 0082 7B68     		ldr	r3, [r7, #4]
 244 0084 1B68     		ldr	r3, [r3]
 245 0086 42F00802 		orr	r2, r2, #8
 246 008a 9A60     		str	r2, [r3, #8]
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 247              		.loc 1 456 3
 248 008c 7B68     		ldr	r3, [r7, #4]
 249 008e 1B68     		ldr	r3, [r3]
 250 0090 1A68     		ldr	r2, [r3]
 251 0092 7B68     		ldr	r3, [r7, #4]
 252 0094 1B68     		ldr	r3, [r3]
 253 0096 42F00102 		orr	r2, r2, #1
 254 009a 1A60     		str	r2, [r3]
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 255              		.loc 1 459 11
 256 009c 7868     		ldr	r0, [r7, #4]
 257 009e FFF7FEFF 		bl	UART_CheckIdleState
 258 00a2 0346     		mov	r3, r0
 259              	.L9:
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 260              		.loc 1 460 1
 261 00a4 1846     		mov	r0, r3
 262 00a6 0837     		adds	r7, r7, #8
 263              	.LCFI8:
 264              		.cfi_def_cfa_offset 8
 265 00a8 BD46     		mov	sp, r7
 266              	.LCFI9:
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 00aa 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE293:
 273              		.section	.text.HAL_LIN_Init,"ax",%progbits
 274              		.align	1
 275              		.global	HAL_LIN_Init
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	HAL_LIN_Init:
 282              	.LFB294:
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 14


 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 283              		.loc 1 474 1
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
 288              	.LCFI10:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
 292 0002 82B0     		sub	sp, sp, #8
 293              	.LCFI11:
 294              		.cfi_def_cfa_offset 16
 295 0004 00AF     		add	r7, sp, #0
 296              	.LCFI12:
 297              		.cfi_def_cfa_register 7
 298 0006 7860     		str	r0, [r7, #4]
 299 0008 3960     		str	r1, [r7]
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 300              		.loc 1 476 6
 301 000a 7B68     		ldr	r3, [r7, #4]
 302 000c 002B     		cmp	r3, #0
 303 000e 01D1     		bne	.L14
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 304              		.loc 1 478 12
 305 0010 0123     		movs	r3, #1
 306 0012 5FE0     		b	.L15
 307              	.L14:
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 308              		.loc 1 487 18
 309 0014 7B68     		ldr	r3, [r7, #4]
 310 0016 DB69     		ldr	r3, [r3, #28]
 311              		.loc 1 487 6
 312 0018 B3F5004F 		cmp	r3, #32768
 313 001c 01D1     		bne	.L16
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 314              		.loc 1 489 12
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 15


 315 001e 0123     		movs	r3, #1
 316 0020 58E0     		b	.L15
 317              	.L16:
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 318              		.loc 1 492 18
 319 0022 7B68     		ldr	r3, [r7, #4]
 320 0024 9B68     		ldr	r3, [r3, #8]
 321              		.loc 1 492 6
 322 0026 002B     		cmp	r3, #0
 323 0028 01D0     		beq	.L17
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 324              		.loc 1 494 12
 325 002a 0123     		movs	r3, #1
 326 002c 52E0     		b	.L15
 327              	.L17:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 328              		.loc 1 497 12
 329 002e 7B68     		ldr	r3, [r7, #4]
 330 0030 9B6F     		ldr	r3, [r3, #120]
 331              		.loc 1 497 6
 332 0032 002B     		cmp	r3, #0
 333 0034 06D1     		bne	.L18
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 334              		.loc 1 500 17
 335 0036 7B68     		ldr	r3, [r7, #4]
 336 0038 0022     		movs	r2, #0
 337 003a 83F87420 		strb	r2, [r3, #116]
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 338              		.loc 1 514 5
 339 003e 7868     		ldr	r0, [r7, #4]
 340 0040 FFF7FEFF 		bl	HAL_UART_MspInit
 341              	.L18:
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 342              		.loc 1 518 17
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 16


 343 0044 7B68     		ldr	r3, [r7, #4]
 344 0046 2422     		movs	r2, #36
 345 0048 9A67     		str	r2, [r3, #120]
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 346              		.loc 1 520 3
 347 004a 7B68     		ldr	r3, [r7, #4]
 348 004c 1B68     		ldr	r3, [r3]
 349 004e 1A68     		ldr	r2, [r3]
 350 0050 7B68     		ldr	r3, [r7, #4]
 351 0052 1B68     		ldr	r3, [r3]
 352 0054 22F00102 		bic	r2, r2, #1
 353 0058 1A60     		str	r2, [r3]
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 354              		.loc 1 523 7
 355 005a 7868     		ldr	r0, [r7, #4]
 356 005c FFF7FEFF 		bl	UART_SetConfig
 357 0060 0346     		mov	r3, r0
 358              		.loc 1 523 6
 359 0062 012B     		cmp	r3, #1
 360 0064 01D1     		bne	.L19
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 361              		.loc 1 525 12
 362 0066 0123     		movs	r3, #1
 363 0068 34E0     		b	.L15
 364              	.L19:
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 365              		.loc 1 528 26
 366 006a 7B68     		ldr	r3, [r7, #4]
 367 006c 5B6A     		ldr	r3, [r3, #36]
 368              		.loc 1 528 6
 369 006e 002B     		cmp	r3, #0
 370 0070 02D0     		beq	.L20
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 371              		.loc 1 530 5
 372 0072 7868     		ldr	r0, [r7, #4]
 373 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 374              	.L20:
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 375              		.loc 1 536 3
 376 0078 7B68     		ldr	r3, [r7, #4]
 377 007a 1B68     		ldr	r3, [r3]
 378 007c 5A68     		ldr	r2, [r3, #4]
 379 007e 7B68     		ldr	r3, [r7, #4]
 380 0080 1B68     		ldr	r3, [r3]
 381 0082 22F40062 		bic	r2, r2, #2048
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 17


 382 0086 5A60     		str	r2, [r3, #4]
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 383              		.loc 1 537 3
 384 0088 7B68     		ldr	r3, [r7, #4]
 385 008a 1B68     		ldr	r3, [r3]
 386 008c 9A68     		ldr	r2, [r3, #8]
 387 008e 7B68     		ldr	r3, [r7, #4]
 388 0090 1B68     		ldr	r3, [r3]
 389 0092 22F02A02 		bic	r2, r2, #42
 390 0096 9A60     		str	r2, [r3, #8]
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 391              		.loc 1 540 3
 392 0098 7B68     		ldr	r3, [r7, #4]
 393 009a 1B68     		ldr	r3, [r3]
 394 009c 5A68     		ldr	r2, [r3, #4]
 395 009e 7B68     		ldr	r3, [r7, #4]
 396 00a0 1B68     		ldr	r3, [r3]
 397 00a2 42F48042 		orr	r2, r2, #16384
 398 00a6 5A60     		str	r2, [r3, #4]
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 399              		.loc 1 543 3
 400 00a8 7B68     		ldr	r3, [r7, #4]
 401 00aa 1B68     		ldr	r3, [r3]
 402 00ac 5B68     		ldr	r3, [r3, #4]
 403 00ae 23F02001 		bic	r1, r3, #32
 404 00b2 7B68     		ldr	r3, [r7, #4]
 405 00b4 1B68     		ldr	r3, [r3]
 406 00b6 3A68     		ldr	r2, [r7]
 407 00b8 0A43     		orrs	r2, r2, r1
 408 00ba 5A60     		str	r2, [r3, #4]
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 409              		.loc 1 545 3
 410 00bc 7B68     		ldr	r3, [r7, #4]
 411 00be 1B68     		ldr	r3, [r3]
 412 00c0 1A68     		ldr	r2, [r3]
 413 00c2 7B68     		ldr	r3, [r7, #4]
 414 00c4 1B68     		ldr	r3, [r3]
 415 00c6 42F00102 		orr	r2, r2, #1
 416 00ca 1A60     		str	r2, [r3]
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 417              		.loc 1 548 11
 418 00cc 7868     		ldr	r0, [r7, #4]
 419 00ce FFF7FEFF 		bl	UART_CheckIdleState
 420 00d2 0346     		mov	r3, r0
 421              	.L15:
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 422              		.loc 1 549 1
 423 00d4 1846     		mov	r0, r3
 424 00d6 0837     		adds	r7, r7, #8
 425              	.LCFI13:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 18


 426              		.cfi_def_cfa_offset 8
 427 00d8 BD46     		mov	sp, r7
 428              	.LCFI14:
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 00da 80BD     		pop	{r7, pc}
 432              		.cfi_endproc
 433              	.LFE294:
 435              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 436              		.align	1
 437              		.global	HAL_MultiProcessor_Init
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	HAL_MultiProcessor_Init:
 444              	.LFB295:
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 445              		.loc 1 571 1
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 80B5     		push	{r7, lr}
 450              	.LCFI15:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 84B0     		sub	sp, sp, #16
 455              	.LCFI16:
 456              		.cfi_def_cfa_offset 24
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI17:
 459              		.cfi_def_cfa_register 7
 460 0006 F860     		str	r0, [r7, #12]
 461 0008 0B46     		mov	r3, r1
 462 000a 7A60     		str	r2, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 19


 463 000c FB72     		strb	r3, [r7, #11]
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 464              		.loc 1 573 6
 465 000e FB68     		ldr	r3, [r7, #12]
 466 0010 002B     		cmp	r3, #0
 467 0012 01D1     		bne	.L22
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 468              		.loc 1 575 12
 469 0014 0123     		movs	r3, #1
 470 0016 59E0     		b	.L23
 471              	.L22:
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 472              		.loc 1 581 12
 473 0018 FB68     		ldr	r3, [r7, #12]
 474 001a 9B6F     		ldr	r3, [r3, #120]
 475              		.loc 1 581 6
 476 001c 002B     		cmp	r3, #0
 477 001e 06D1     		bne	.L24
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 478              		.loc 1 584 17
 479 0020 FB68     		ldr	r3, [r7, #12]
 480 0022 0022     		movs	r2, #0
 481 0024 83F87420 		strb	r2, [r3, #116]
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 482              		.loc 1 598 5
 483 0028 F868     		ldr	r0, [r7, #12]
 484 002a FFF7FEFF 		bl	HAL_UART_MspInit
 485              	.L24:
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 486              		.loc 1 602 17
 487 002e FB68     		ldr	r3, [r7, #12]
 488 0030 2422     		movs	r2, #36
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 20


 489 0032 9A67     		str	r2, [r3, #120]
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 490              		.loc 1 604 3
 491 0034 FB68     		ldr	r3, [r7, #12]
 492 0036 1B68     		ldr	r3, [r3]
 493 0038 1A68     		ldr	r2, [r3]
 494 003a FB68     		ldr	r3, [r7, #12]
 495 003c 1B68     		ldr	r3, [r3]
 496 003e 22F00102 		bic	r2, r2, #1
 497 0042 1A60     		str	r2, [r3]
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 498              		.loc 1 607 7
 499 0044 F868     		ldr	r0, [r7, #12]
 500 0046 FFF7FEFF 		bl	UART_SetConfig
 501 004a 0346     		mov	r3, r0
 502              		.loc 1 607 6
 503 004c 012B     		cmp	r3, #1
 504 004e 01D1     		bne	.L25
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 505              		.loc 1 609 12
 506 0050 0123     		movs	r3, #1
 507 0052 3BE0     		b	.L23
 508              	.L25:
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 509              		.loc 1 612 26
 510 0054 FB68     		ldr	r3, [r7, #12]
 511 0056 5B6A     		ldr	r3, [r3, #36]
 512              		.loc 1 612 6
 513 0058 002B     		cmp	r3, #0
 514 005a 02D0     		beq	.L26
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 515              		.loc 1 614 5
 516 005c F868     		ldr	r0, [r7, #12]
 517 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 518              	.L26:
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 519              		.loc 1 620 3
 520 0062 FB68     		ldr	r3, [r7, #12]
 521 0064 1B68     		ldr	r3, [r3]
 522 0066 5A68     		ldr	r2, [r3, #4]
 523 0068 FB68     		ldr	r3, [r7, #12]
 524 006a 1B68     		ldr	r3, [r3]
 525 006c 22F49042 		bic	r2, r2, #18432
 526 0070 5A60     		str	r2, [r3, #4]
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 21


 527              		.loc 1 621 3
 528 0072 FB68     		ldr	r3, [r7, #12]
 529 0074 1B68     		ldr	r3, [r3]
 530 0076 9A68     		ldr	r2, [r3, #8]
 531 0078 FB68     		ldr	r3, [r7, #12]
 532 007a 1B68     		ldr	r3, [r3]
 533 007c 22F02A02 		bic	r2, r2, #42
 534 0080 9A60     		str	r2, [r3, #8]
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 535              		.loc 1 623 6
 536 0082 7B68     		ldr	r3, [r7, #4]
 537 0084 B3F5006F 		cmp	r3, #2048
 538 0088 0AD1     		bne	.L27
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 539              		.loc 1 626 5
 540 008a FB68     		ldr	r3, [r7, #12]
 541 008c 1B68     		ldr	r3, [r3]
 542 008e 5B68     		ldr	r3, [r3, #4]
 543 0090 23F07F41 		bic	r1, r3, #-16777216
 544 0094 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 545 0096 1A06     		lsls	r2, r3, #24
 546 0098 FB68     		ldr	r3, [r7, #12]
 547 009a 1B68     		ldr	r3, [r3]
 548 009c 0A43     		orrs	r2, r2, r1
 549 009e 5A60     		str	r2, [r3, #4]
 550              	.L27:
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 551              		.loc 1 630 3
 552 00a0 FB68     		ldr	r3, [r7, #12]
 553 00a2 1B68     		ldr	r3, [r3]
 554 00a4 1B68     		ldr	r3, [r3]
 555 00a6 23F40061 		bic	r1, r3, #2048
 556 00aa FB68     		ldr	r3, [r7, #12]
 557 00ac 1B68     		ldr	r3, [r3]
 558 00ae 7A68     		ldr	r2, [r7, #4]
 559 00b0 0A43     		orrs	r2, r2, r1
 560 00b2 1A60     		str	r2, [r3]
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 561              		.loc 1 632 3
 562 00b4 FB68     		ldr	r3, [r7, #12]
 563 00b6 1B68     		ldr	r3, [r3]
 564 00b8 1A68     		ldr	r2, [r3]
 565 00ba FB68     		ldr	r3, [r7, #12]
 566 00bc 1B68     		ldr	r3, [r3]
 567 00be 42F00102 		orr	r2, r2, #1
 568 00c2 1A60     		str	r2, [r3]
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 569              		.loc 1 635 11
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 22


 570 00c4 F868     		ldr	r0, [r7, #12]
 571 00c6 FFF7FEFF 		bl	UART_CheckIdleState
 572 00ca 0346     		mov	r3, r0
 573              	.L23:
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 574              		.loc 1 636 1
 575 00cc 1846     		mov	r0, r3
 576 00ce 1037     		adds	r7, r7, #16
 577              	.LCFI18:
 578              		.cfi_def_cfa_offset 8
 579 00d0 BD46     		mov	sp, r7
 580              	.LCFI19:
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 00d2 80BD     		pop	{r7, pc}
 584              		.cfi_endproc
 585              	.LFE295:
 587              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 588              		.align	1
 589              		.global	HAL_UART_DeInit
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv4-sp-d16
 595              	HAL_UART_DeInit:
 596              	.LFB296:
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 597              		.loc 1 645 1
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              	.LCFI20:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 82B0     		sub	sp, sp, #8
 607              	.LCFI21:
 608              		.cfi_def_cfa_offset 16
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI22:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 613              		.loc 1 647 6
 614 0008 7B68     		ldr	r3, [r7, #4]
 615 000a 002B     		cmp	r3, #0
 616 000c 01D1     		bne	.L29
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 23


 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 617              		.loc 1 649 12
 618 000e 0123     		movs	r3, #1
 619 0010 2BE0     		b	.L30
 620              	.L29:
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 621              		.loc 1 655 17
 622 0012 7B68     		ldr	r3, [r7, #4]
 623 0014 2422     		movs	r2, #36
 624 0016 9A67     		str	r2, [r3, #120]
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 625              		.loc 1 657 3
 626 0018 7B68     		ldr	r3, [r7, #4]
 627 001a 1B68     		ldr	r3, [r3]
 628 001c 1A68     		ldr	r2, [r3]
 629 001e 7B68     		ldr	r3, [r7, #4]
 630 0020 1B68     		ldr	r3, [r3]
 631 0022 22F00102 		bic	r2, r2, #1
 632 0026 1A60     		str	r2, [r3]
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 633              		.loc 1 659 8
 634 0028 7B68     		ldr	r3, [r7, #4]
 635 002a 1B68     		ldr	r3, [r3]
 636              		.loc 1 659 24
 637 002c 0022     		movs	r2, #0
 638 002e 1A60     		str	r2, [r3]
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 639              		.loc 1 660 8
 640 0030 7B68     		ldr	r3, [r7, #4]
 641 0032 1B68     		ldr	r3, [r3]
 642              		.loc 1 660 24
 643 0034 0022     		movs	r2, #0
 644 0036 5A60     		str	r2, [r3, #4]
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 645              		.loc 1 661 8
 646 0038 7B68     		ldr	r3, [r7, #4]
 647 003a 1B68     		ldr	r3, [r3]
 648              		.loc 1 661 24
 649 003c 0022     		movs	r2, #0
 650 003e 9A60     		str	r2, [r3, #8]
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 24


 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 651              		.loc 1 672 3
 652 0040 7868     		ldr	r0, [r7, #4]
 653 0042 FFF7FEFF 		bl	HAL_UART_MspDeInit
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 654              		.loc 1 675 20
 655 0046 7B68     		ldr	r3, [r7, #4]
 656 0048 0022     		movs	r2, #0
 657 004a C3F88020 		str	r2, [r3, #128]
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 658              		.loc 1 676 17
 659 004e 7B68     		ldr	r3, [r7, #4]
 660 0050 0022     		movs	r2, #0
 661 0052 9A67     		str	r2, [r3, #120]
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 662              		.loc 1 677 18
 663 0054 7B68     		ldr	r3, [r7, #4]
 664 0056 0022     		movs	r2, #0
 665 0058 DA67     		str	r2, [r3, #124]
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 666              		.loc 1 678 24
 667 005a 7B68     		ldr	r3, [r7, #4]
 668 005c 0022     		movs	r2, #0
 669 005e 1A66     		str	r2, [r3, #96]
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 670              		.loc 1 680 3
 671 0060 7B68     		ldr	r3, [r7, #4]
 672 0062 0022     		movs	r2, #0
 673 0064 83F87420 		strb	r2, [r3, #116]
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 674              		.loc 1 682 10
 675 0068 0023     		movs	r3, #0
 676              	.L30:
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 677              		.loc 1 683 1
 678 006a 1846     		mov	r0, r3
 679 006c 0837     		adds	r7, r7, #8
 680              	.LCFI23:
 681              		.cfi_def_cfa_offset 8
 682 006e BD46     		mov	sp, r7
 683              	.LCFI24:
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 0070 80BD     		pop	{r7, pc}
 687              		.cfi_endproc
 688              	.LFE296:
 690              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 691              		.align	1
 692              		.weak	HAL_UART_MspInit
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 25


 696              		.fpu fpv4-sp-d16
 698              	HAL_UART_MspInit:
 699              	.LFB297:
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 700              		.loc 1 691 1
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 8
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705 0000 80B4     		push	{r7}
 706              	.LCFI25:
 707              		.cfi_def_cfa_offset 4
 708              		.cfi_offset 7, -4
 709 0002 83B0     		sub	sp, sp, #12
 710              	.LCFI26:
 711              		.cfi_def_cfa_offset 16
 712 0004 00AF     		add	r7, sp, #0
 713              	.LCFI27:
 714              		.cfi_def_cfa_register 7
 715 0006 7860     		str	r0, [r7, #4]
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 716              		.loc 1 698 1
 717 0008 00BF     		nop
 718 000a 0C37     		adds	r7, r7, #12
 719              	.LCFI28:
 720              		.cfi_def_cfa_offset 4
 721 000c BD46     		mov	sp, r7
 722              	.LCFI29:
 723              		.cfi_def_cfa_register 13
 724              		@ sp needed
 725 000e 5DF8047B 		ldr	r7, [sp], #4
 726              	.LCFI30:
 727              		.cfi_restore 7
 728              		.cfi_def_cfa_offset 0
 729 0012 7047     		bx	lr
 730              		.cfi_endproc
 731              	.LFE297:
 733              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 734              		.align	1
 735              		.weak	HAL_UART_MspDeInit
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 26


 741              	HAL_UART_MspDeInit:
 742              	.LFB298:
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 743              		.loc 1 706 1
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 8
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748 0000 80B4     		push	{r7}
 749              	.LCFI31:
 750              		.cfi_def_cfa_offset 4
 751              		.cfi_offset 7, -4
 752 0002 83B0     		sub	sp, sp, #12
 753              	.LCFI32:
 754              		.cfi_def_cfa_offset 16
 755 0004 00AF     		add	r7, sp, #0
 756              	.LCFI33:
 757              		.cfi_def_cfa_register 7
 758 0006 7860     		str	r0, [r7, #4]
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 759              		.loc 1 713 1
 760 0008 00BF     		nop
 761 000a 0C37     		adds	r7, r7, #12
 762              	.LCFI34:
 763              		.cfi_def_cfa_offset 4
 764 000c BD46     		mov	sp, r7
 765              	.LCFI35:
 766              		.cfi_def_cfa_register 13
 767              		@ sp needed
 768 000e 5DF8047B 		ldr	r7, [sp], #4
 769              	.LCFI36:
 770              		.cfi_restore 7
 771              		.cfi_def_cfa_offset 0
 772 0012 7047     		bx	lr
 773              		.cfi_endproc
 774              	.LFE298:
 776              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 777              		.align	1
 778              		.global	HAL_UART_Transmit
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 782              		.fpu fpv4-sp-d16
 784              	HAL_UART_Transmit:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 27


 785              	.LFB299:
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 28


 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 29


 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 30


 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 31


 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart     Uart handle
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process locked */
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 32


 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Release Lock */
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart     Uart handle
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process locked */
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Release Lock */
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 33


1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         reception services:
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 34


1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            in Interrupt mode reception .
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            user callback is executed.
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 786              		.loc 1 1150 1
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 32
 789              		@ frame_needed = 1, uses_anonymous_args = 0
 790 0000 80B5     		push	{r7, lr}
 791              	.LCFI37:
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 8AB0     		sub	sp, sp, #40
 796              	.LCFI38:
 797              		.cfi_def_cfa_offset 48
 798 0004 02AF     		add	r7, sp, #8
 799              	.LCFI39:
 800              		.cfi_def_cfa 7, 40
 801 0006 F860     		str	r0, [r7, #12]
 802 0008 B960     		str	r1, [r7, #8]
 803 000a 3B60     		str	r3, [r7]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 35


 804 000c 1346     		mov	r3, r2	@ movhi
 805 000e FB80     		strh	r3, [r7, #6]	@ movhi
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const uint16_t *pdata16bits;
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 806              		.loc 1 1156 12
 807 0010 FB68     		ldr	r3, [r7, #12]
 808 0012 9B6F     		ldr	r3, [r3, #120]
 809              		.loc 1 1156 6
 810 0014 202B     		cmp	r3, #32
 811 0016 40F08280 		bne	.L34
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 812              		.loc 1 1158 8
 813 001a BB68     		ldr	r3, [r7, #8]
 814 001c 002B     		cmp	r3, #0
 815 001e 02D0     		beq	.L35
 816              		.loc 1 1158 25 discriminator 1
 817 0020 FB88     		ldrh	r3, [r7, #6]
 818 0022 002B     		cmp	r3, #0
 819 0024 01D1     		bne	.L36
 820              	.L35:
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 821              		.loc 1 1160 15
 822 0026 0123     		movs	r3, #1
 823 0028 7AE0     		b	.L37
 824              	.L36:
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 825              		.loc 1 1163 5
 826 002a FB68     		ldr	r3, [r7, #12]
 827 002c 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 828 0030 012B     		cmp	r3, #1
 829 0032 01D1     		bne	.L38
 830              		.loc 1 1163 5 is_stmt 0 discriminator 1
 831 0034 0223     		movs	r3, #2
 832 0036 73E0     		b	.L37
 833              	.L38:
 834              		.loc 1 1163 5 discriminator 2
 835 0038 FB68     		ldr	r3, [r7, #12]
 836 003a 0122     		movs	r2, #1
 837 003c 83F87420 		strb	r2, [r3, #116]
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 838              		.loc 1 1165 22 is_stmt 1 discriminator 2
 839 0040 FB68     		ldr	r3, [r7, #12]
 840 0042 0022     		movs	r2, #0
 841 0044 C3F88020 		str	r2, [r3, #128]
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 842              		.loc 1 1166 19 discriminator 2
 843 0048 FB68     		ldr	r3, [r7, #12]
 844 004a 2122     		movs	r2, #33
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 36


 845 004c 9A67     		str	r2, [r3, #120]
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 846              		.loc 1 1169 17 discriminator 2
 847 004e FFF7FEFF 		bl	HAL_GetTick
 848 0052 7861     		str	r0, [r7, #20]
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 849              		.loc 1 1171 24 discriminator 2
 850 0054 FB68     		ldr	r3, [r7, #12]
 851 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 852 0058 A3F85020 		strh	r2, [r3, #80]	@ movhi
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 853              		.loc 1 1172 24 discriminator 2
 854 005c FB68     		ldr	r3, [r7, #12]
 855 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 856 0060 A3F85220 		strh	r2, [r3, #82]	@ movhi
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 857              		.loc 1 1175 21 discriminator 2
 858 0064 FB68     		ldr	r3, [r7, #12]
 859 0066 9B68     		ldr	r3, [r3, #8]
 860              		.loc 1 1175 8 discriminator 2
 861 0068 B3F5805F 		cmp	r3, #4096
 862 006c 08D1     		bne	.L39
 863              		.loc 1 1175 71 discriminator 1
 864 006e FB68     		ldr	r3, [r7, #12]
 865 0070 1B69     		ldr	r3, [r3, #16]
 866              		.loc 1 1175 56 discriminator 1
 867 0072 002B     		cmp	r3, #0
 868 0074 04D1     		bne	.L39
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
 869              		.loc 1 1177 19
 870 0076 0023     		movs	r3, #0
 871 0078 FB61     		str	r3, [r7, #28]
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 872              		.loc 1 1178 19
 873 007a BB68     		ldr	r3, [r7, #8]
 874 007c BB61     		str	r3, [r7, #24]
 875 007e 03E0     		b	.L40
 876              	.L39:
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
 877              		.loc 1 1182 19
 878 0080 BB68     		ldr	r3, [r7, #8]
 879 0082 FB61     		str	r3, [r7, #28]
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
 880              		.loc 1 1183 19
 881 0084 0023     		movs	r3, #0
 882 0086 BB61     		str	r3, [r7, #24]
 883              	.L40:
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 37


1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 884              		.loc 1 1186 5
 885 0088 FB68     		ldr	r3, [r7, #12]
 886 008a 0022     		movs	r2, #0
 887 008c 83F87420 		strb	r2, [r3, #116]
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 888              		.loc 1 1188 11
 889 0090 2DE0     		b	.L41
 890              	.L45:
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 891              		.loc 1 1190 11
 892 0092 3B68     		ldr	r3, [r7]
 893 0094 0093     		str	r3, [sp]
 894 0096 7B69     		ldr	r3, [r7, #20]
 895 0098 0022     		movs	r2, #0
 896 009a 8021     		movs	r1, #128
 897 009c F868     		ldr	r0, [r7, #12]
 898 009e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 899 00a2 0346     		mov	r3, r0
 900              		.loc 1 1190 10
 901 00a4 002B     		cmp	r3, #0
 902 00a6 01D0     		beq	.L42
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 903              		.loc 1 1192 16
 904 00a8 0323     		movs	r3, #3
 905 00aa 39E0     		b	.L37
 906              	.L42:
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
 907              		.loc 1 1194 10
 908 00ac FB69     		ldr	r3, [r7, #28]
 909 00ae 002B     		cmp	r3, #0
 910 00b0 0BD1     		bne	.L43
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 911              		.loc 1 1196 43
 912 00b2 BB69     		ldr	r3, [r7, #24]
 913 00b4 1A88     		ldrh	r2, [r3]
 914              		.loc 1 1196 14
 915 00b6 FB68     		ldr	r3, [r7, #12]
 916 00b8 1B68     		ldr	r3, [r3]
 917              		.loc 1 1196 32
 918 00ba C2F30802 		ubfx	r2, r2, #0, #9
 919 00be 92B2     		uxth	r2, r2
 920              		.loc 1 1196 30
 921 00c0 1A85     		strh	r2, [r3, #40]	@ movhi
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 922              		.loc 1 1197 20
 923 00c2 BB69     		ldr	r3, [r7, #24]
 924 00c4 0233     		adds	r3, r3, #2
 925 00c6 BB61     		str	r3, [r7, #24]
 926 00c8 08E0     		b	.L44
 927              	.L43:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 38


1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 928              		.loc 1 1201 42
 929 00ca FB69     		ldr	r3, [r7, #28]
 930 00cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 931              		.loc 1 1201 14
 932 00ce FB68     		ldr	r3, [r7, #12]
 933 00d0 1B68     		ldr	r3, [r3]
 934              		.loc 1 1201 32
 935 00d2 92B2     		uxth	r2, r2
 936              		.loc 1 1201 30
 937 00d4 1A85     		strh	r2, [r3, #40]	@ movhi
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 938              		.loc 1 1202 19
 939 00d6 FB69     		ldr	r3, [r7, #28]
 940 00d8 0133     		adds	r3, r3, #1
 941 00da FB61     		str	r3, [r7, #28]
 942              	.L44:
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 943              		.loc 1 1204 12
 944 00dc FB68     		ldr	r3, [r7, #12]
 945 00de B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 946 00e2 9BB2     		uxth	r3, r3
 947              		.loc 1 1204 25
 948 00e4 013B     		subs	r3, r3, #1
 949 00e6 9AB2     		uxth	r2, r3
 950 00e8 FB68     		ldr	r3, [r7, #12]
 951 00ea A3F85220 		strh	r2, [r3, #82]	@ movhi
 952              	.L41:
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 953              		.loc 1 1188 17
 954 00ee FB68     		ldr	r3, [r7, #12]
 955 00f0 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 956 00f4 9BB2     		uxth	r3, r3
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 957              		.loc 1 1188 11
 958 00f6 002B     		cmp	r3, #0
 959 00f8 CBD1     		bne	.L45
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 960              		.loc 1 1207 9
 961 00fa 3B68     		ldr	r3, [r7]
 962 00fc 0093     		str	r3, [sp]
 963 00fe 7B69     		ldr	r3, [r7, #20]
 964 0100 0022     		movs	r2, #0
 965 0102 4021     		movs	r1, #64
 966 0104 F868     		ldr	r0, [r7, #12]
 967 0106 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 968 010a 0346     		mov	r3, r0
 969              		.loc 1 1207 8
 970 010c 002B     		cmp	r3, #0
 971 010e 01D0     		beq	.L46
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 39


1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 972              		.loc 1 1209 14
 973 0110 0323     		movs	r3, #3
 974 0112 05E0     		b	.L37
 975              	.L46:
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 976              		.loc 1 1213 19
 977 0114 FB68     		ldr	r3, [r7, #12]
 978 0116 2022     		movs	r2, #32
 979 0118 9A67     		str	r2, [r3, #120]
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 980              		.loc 1 1215 12
 981 011a 0023     		movs	r3, #0
 982 011c 00E0     		b	.L37
 983              	.L34:
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 984              		.loc 1 1219 12
 985 011e 0223     		movs	r3, #2
 986              	.L37:
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 987              		.loc 1 1221 1
 988 0120 1846     		mov	r0, r3
 989 0122 2037     		adds	r7, r7, #32
 990              	.LCFI40:
 991              		.cfi_def_cfa_offset 8
 992 0124 BD46     		mov	sp, r7
 993              	.LCFI41:
 994              		.cfi_def_cfa_register 13
 995              		@ sp needed
 996 0126 80BD     		pop	{r7, pc}
 997              		.cfi_endproc
 998              	.LFE299:
 1000              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1001              		.align	1
 1002              		.global	HAL_UART_Receive
 1003              		.syntax unified
 1004              		.thumb
 1005              		.thumb_func
 1006              		.fpu fpv4-sp-d16
 1008              	HAL_UART_Receive:
 1009              	.LFB300:
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 40


1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1010              		.loc 1 1239 1
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 32
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014 0000 80B5     		push	{r7, lr}
 1015              	.LCFI42:
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 7, -8
 1018              		.cfi_offset 14, -4
 1019 0002 8AB0     		sub	sp, sp, #40
 1020              	.LCFI43:
 1021              		.cfi_def_cfa_offset 48
 1022 0004 02AF     		add	r7, sp, #8
 1023              	.LCFI44:
 1024              		.cfi_def_cfa 7, 40
 1025 0006 F860     		str	r0, [r7, #12]
 1026 0008 B960     		str	r1, [r7, #8]
 1027 000a 3B60     		str	r3, [r7]
 1028 000c 1346     		mov	r3, r2	@ movhi
 1029 000e FB80     		strh	r3, [r7, #6]	@ movhi
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1030              		.loc 1 1246 12
 1031 0010 FB68     		ldr	r3, [r7, #12]
 1032 0012 DB6F     		ldr	r3, [r3, #124]
 1033              		.loc 1 1246 6
 1034 0014 202B     		cmp	r3, #32
 1035 0016 40F0BF80 		bne	.L48
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1036              		.loc 1 1248 8
 1037 001a BB68     		ldr	r3, [r7, #8]
 1038 001c 002B     		cmp	r3, #0
 1039 001e 02D0     		beq	.L49
 1040              		.loc 1 1248 25 discriminator 1
 1041 0020 FB88     		ldrh	r3, [r7, #6]
 1042 0022 002B     		cmp	r3, #0
 1043 0024 01D1     		bne	.L50
 1044              	.L49:
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 1045              		.loc 1 1250 15
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 41


 1046 0026 0123     		movs	r3, #1
 1047 0028 B7E0     		b	.L51
 1048              	.L50:
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1049              		.loc 1 1253 5
 1050 002a FB68     		ldr	r3, [r7, #12]
 1051 002c 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 1052 0030 012B     		cmp	r3, #1
 1053 0032 01D1     		bne	.L52
 1054              		.loc 1 1253 5 is_stmt 0 discriminator 1
 1055 0034 0223     		movs	r3, #2
 1056 0036 B0E0     		b	.L51
 1057              	.L52:
 1058              		.loc 1 1253 5 discriminator 2
 1059 0038 FB68     		ldr	r3, [r7, #12]
 1060 003a 0122     		movs	r2, #1
 1061 003c 83F87420 		strb	r2, [r3, #116]
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1062              		.loc 1 1255 22 is_stmt 1 discriminator 2
 1063 0040 FB68     		ldr	r3, [r7, #12]
 1064 0042 0022     		movs	r2, #0
 1065 0044 C3F88020 		str	r2, [r3, #128]
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1066              		.loc 1 1256 20 discriminator 2
 1067 0048 FB68     		ldr	r3, [r7, #12]
 1068 004a 2222     		movs	r2, #34
 1069 004c DA67     		str	r2, [r3, #124]
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1070              		.loc 1 1257 26 discriminator 2
 1071 004e FB68     		ldr	r3, [r7, #12]
 1072 0050 0022     		movs	r2, #0
 1073 0052 1A66     		str	r2, [r3, #96]
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1074              		.loc 1 1260 17 discriminator 2
 1075 0054 FFF7FEFF 		bl	HAL_GetTick
 1076 0058 7861     		str	r0, [r7, #20]
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1077              		.loc 1 1262 24 discriminator 2
 1078 005a FB68     		ldr	r3, [r7, #12]
 1079 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1080 005e A3F85820 		strh	r2, [r3, #88]	@ movhi
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1081              		.loc 1 1263 24 discriminator 2
 1082 0062 FB68     		ldr	r3, [r7, #12]
 1083 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1084 0066 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1085              		.loc 1 1266 5 discriminator 2
 1086 006a FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 42


 1087 006c 9B68     		ldr	r3, [r3, #8]
 1088 006e B3F5805F 		cmp	r3, #4096
 1089 0072 0ED1     		bne	.L53
 1090              		.loc 1 1266 5 is_stmt 0 discriminator 1
 1091 0074 FB68     		ldr	r3, [r7, #12]
 1092 0076 1B69     		ldr	r3, [r3, #16]
 1093 0078 002B     		cmp	r3, #0
 1094 007a 05D1     		bne	.L54
 1095              		.loc 1 1266 5 discriminator 3
 1096 007c FB68     		ldr	r3, [r7, #12]
 1097 007e 40F2FF12 		movw	r2, #511
 1098 0082 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1099 0086 2DE0     		b	.L55
 1100              	.L54:
 1101              		.loc 1 1266 5 discriminator 4
 1102 0088 FB68     		ldr	r3, [r7, #12]
 1103 008a FF22     		movs	r2, #255
 1104 008c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1105 0090 28E0     		b	.L55
 1106              	.L53:
 1107              		.loc 1 1266 5 discriminator 2
 1108 0092 FB68     		ldr	r3, [r7, #12]
 1109 0094 9B68     		ldr	r3, [r3, #8]
 1110 0096 002B     		cmp	r3, #0
 1111 0098 0DD1     		bne	.L56
 1112              		.loc 1 1266 5 discriminator 5
 1113 009a FB68     		ldr	r3, [r7, #12]
 1114 009c 1B69     		ldr	r3, [r3, #16]
 1115 009e 002B     		cmp	r3, #0
 1116 00a0 04D1     		bne	.L57
 1117              		.loc 1 1266 5 discriminator 7
 1118 00a2 FB68     		ldr	r3, [r7, #12]
 1119 00a4 FF22     		movs	r2, #255
 1120 00a6 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1121 00aa 1BE0     		b	.L55
 1122              	.L57:
 1123              		.loc 1 1266 5 discriminator 8
 1124 00ac FB68     		ldr	r3, [r7, #12]
 1125 00ae 7F22     		movs	r2, #127
 1126 00b0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1127 00b4 16E0     		b	.L55
 1128              	.L56:
 1129              		.loc 1 1266 5 discriminator 6
 1130 00b6 FB68     		ldr	r3, [r7, #12]
 1131 00b8 9B68     		ldr	r3, [r3, #8]
 1132 00ba B3F1805F 		cmp	r3, #268435456
 1133 00be 0DD1     		bne	.L58
 1134              		.loc 1 1266 5 discriminator 9
 1135 00c0 FB68     		ldr	r3, [r7, #12]
 1136 00c2 1B69     		ldr	r3, [r3, #16]
 1137 00c4 002B     		cmp	r3, #0
 1138 00c6 04D1     		bne	.L59
 1139              		.loc 1 1266 5 discriminator 11
 1140 00c8 FB68     		ldr	r3, [r7, #12]
 1141 00ca 7F22     		movs	r2, #127
 1142 00cc A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1143 00d0 08E0     		b	.L55
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 43


 1144              	.L59:
 1145              		.loc 1 1266 5 discriminator 12
 1146 00d2 FB68     		ldr	r3, [r7, #12]
 1147 00d4 3F22     		movs	r2, #63
 1148 00d6 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1149 00da 03E0     		b	.L55
 1150              	.L58:
 1151              		.loc 1 1266 5 discriminator 10
 1152 00dc FB68     		ldr	r3, [r7, #12]
 1153 00de 0022     		movs	r2, #0
 1154 00e0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1155              	.L55:
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 1156              		.loc 1 1267 12 is_stmt 1
 1157 00e4 FB68     		ldr	r3, [r7, #12]
 1158 00e6 B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1159 00ea 7B82     		strh	r3, [r7, #18]	@ movhi
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1160              		.loc 1 1270 21
 1161 00ec FB68     		ldr	r3, [r7, #12]
 1162 00ee 9B68     		ldr	r3, [r3, #8]
 1163              		.loc 1 1270 8
 1164 00f0 B3F5805F 		cmp	r3, #4096
 1165 00f4 08D1     		bne	.L60
 1166              		.loc 1 1270 71 discriminator 1
 1167 00f6 FB68     		ldr	r3, [r7, #12]
 1168 00f8 1B69     		ldr	r3, [r3, #16]
 1169              		.loc 1 1270 56 discriminator 1
 1170 00fa 002B     		cmp	r3, #0
 1171 00fc 04D1     		bne	.L60
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
 1172              		.loc 1 1272 19
 1173 00fe 0023     		movs	r3, #0
 1174 0100 FB61     		str	r3, [r7, #28]
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1175              		.loc 1 1273 19
 1176 0102 BB68     		ldr	r3, [r7, #8]
 1177 0104 BB61     		str	r3, [r7, #24]
 1178 0106 03E0     		b	.L61
 1179              	.L60:
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
 1180              		.loc 1 1277 19
 1181 0108 BB68     		ldr	r3, [r7, #8]
 1182 010a FB61     		str	r3, [r7, #28]
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
 1183              		.loc 1 1278 19
 1184 010c 0023     		movs	r3, #0
 1185 010e BB61     		str	r3, [r7, #24]
 1186              	.L61:
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 44


1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1187              		.loc 1 1281 5
 1188 0110 FB68     		ldr	r3, [r7, #12]
 1189 0112 0022     		movs	r2, #0
 1190 0114 83F87420 		strb	r2, [r3, #116]
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1191              		.loc 1 1284 11
 1192 0118 33E0     		b	.L62
 1193              	.L66:
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1194              		.loc 1 1286 11
 1195 011a 3B68     		ldr	r3, [r7]
 1196 011c 0093     		str	r3, [sp]
 1197 011e 7B69     		ldr	r3, [r7, #20]
 1198 0120 0022     		movs	r2, #0
 1199 0122 2021     		movs	r1, #32
 1200 0124 F868     		ldr	r0, [r7, #12]
 1201 0126 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1202 012a 0346     		mov	r3, r0
 1203              		.loc 1 1286 10
 1204 012c 002B     		cmp	r3, #0
 1205 012e 01D0     		beq	.L63
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1206              		.loc 1 1288 16
 1207 0130 0323     		movs	r3, #3
 1208 0132 32E0     		b	.L51
 1209              	.L63:
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
 1210              		.loc 1 1290 10
 1211 0134 FB69     		ldr	r3, [r7, #28]
 1212 0136 002B     		cmp	r3, #0
 1213 0138 0CD1     		bne	.L64
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1214              		.loc 1 1292 40
 1215 013a FB68     		ldr	r3, [r7, #12]
 1216 013c 1B68     		ldr	r3, [r3]
 1217              		.loc 1 1292 50
 1218 013e 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1219 0140 9AB2     		uxth	r2, r3
 1220              		.loc 1 1292 24
 1221 0142 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1222 0144 1340     		ands	r3, r3, r2
 1223 0146 9AB2     		uxth	r2, r3
 1224              		.loc 1 1292 22
 1225 0148 BB69     		ldr	r3, [r7, #24]
 1226 014a 1A80     		strh	r2, [r3]	@ movhi
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 1227              		.loc 1 1293 20
 1228 014c BB69     		ldr	r3, [r7, #24]
 1229 014e 0233     		adds	r3, r3, #2
 1230 0150 BB61     		str	r3, [r7, #24]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 45


 1231 0152 0DE0     		b	.L65
 1232              	.L64:
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1233              		.loc 1 1297 38
 1234 0154 FB68     		ldr	r3, [r7, #12]
 1235 0156 1B68     		ldr	r3, [r3]
 1236              		.loc 1 1297 48
 1237 0158 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1238 015a 9BB2     		uxth	r3, r3
 1239              		.loc 1 1297 23
 1240 015c DAB2     		uxtb	r2, r3
 1241              		.loc 1 1297 56
 1242 015e 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1243 0160 DBB2     		uxtb	r3, r3
 1244              		.loc 1 1297 23
 1245 0162 1340     		ands	r3, r3, r2
 1246 0164 DAB2     		uxtb	r2, r3
 1247              		.loc 1 1297 21
 1248 0166 FB69     		ldr	r3, [r7, #28]
 1249 0168 1A70     		strb	r2, [r3]
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 1250              		.loc 1 1298 19
 1251 016a FB69     		ldr	r3, [r7, #28]
 1252 016c 0133     		adds	r3, r3, #1
 1253 016e FB61     		str	r3, [r7, #28]
 1254              	.L65:
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
 1255              		.loc 1 1300 12
 1256 0170 FB68     		ldr	r3, [r7, #12]
 1257 0172 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1258 0176 9BB2     		uxth	r3, r3
 1259              		.loc 1 1300 25
 1260 0178 013B     		subs	r3, r3, #1
 1261 017a 9AB2     		uxth	r2, r3
 1262 017c FB68     		ldr	r3, [r7, #12]
 1263 017e A3F85A20 		strh	r2, [r3, #90]	@ movhi
 1264              	.L62:
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1265              		.loc 1 1284 17
 1266 0182 FB68     		ldr	r3, [r7, #12]
 1267 0184 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1268 0188 9BB2     		uxth	r3, r3
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1269              		.loc 1 1284 11
 1270 018a 002B     		cmp	r3, #0
 1271 018c C5D1     		bne	.L66
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1272              		.loc 1 1304 20
 1273 018e FB68     		ldr	r3, [r7, #12]
 1274 0190 2022     		movs	r2, #32
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 46


 1275 0192 DA67     		str	r2, [r3, #124]
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1276              		.loc 1 1306 12
 1277 0194 0023     		movs	r3, #0
 1278 0196 00E0     		b	.L51
 1279              	.L48:
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1280              		.loc 1 1310 12
 1281 0198 0223     		movs	r3, #2
 1282              	.L51:
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1283              		.loc 1 1312 1
 1284 019a 1846     		mov	r0, r3
 1285 019c 2037     		adds	r7, r7, #32
 1286              	.LCFI45:
 1287              		.cfi_def_cfa_offset 8
 1288 019e BD46     		mov	sp, r7
 1289              	.LCFI46:
 1290              		.cfi_def_cfa_register 13
 1291              		@ sp needed
 1292 01a0 80BD     		pop	{r7, pc}
 1293              		.cfi_endproc
 1294              	.LFE300:
 1296              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1297              		.align	1
 1298              		.global	HAL_UART_Transmit_IT
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1302              		.fpu fpv4-sp-d16
 1304              	HAL_UART_Transmit_IT:
 1305              	.LFB301:
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1306              		.loc 1 1325 1
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 40
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310              		@ link register save eliminated.
 1311 0000 80B4     		push	{r7}
 1312              	.LCFI47:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 47


 1313              		.cfi_def_cfa_offset 4
 1314              		.cfi_offset 7, -4
 1315 0002 8BB0     		sub	sp, sp, #44
 1316              	.LCFI48:
 1317              		.cfi_def_cfa_offset 48
 1318 0004 00AF     		add	r7, sp, #0
 1319              	.LCFI49:
 1320              		.cfi_def_cfa_register 7
 1321 0006 F860     		str	r0, [r7, #12]
 1322 0008 B960     		str	r1, [r7, #8]
 1323 000a 1346     		mov	r3, r2
 1324 000c FB80     		strh	r3, [r7, #6]	@ movhi
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1325              		.loc 1 1327 12
 1326 000e FB68     		ldr	r3, [r7, #12]
 1327 0010 9B6F     		ldr	r3, [r3, #120]
 1328              		.loc 1 1327 6
 1329 0012 202B     		cmp	r3, #32
 1330 0014 56D1     		bne	.L68
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1331              		.loc 1 1329 8
 1332 0016 BB68     		ldr	r3, [r7, #8]
 1333 0018 002B     		cmp	r3, #0
 1334 001a 02D0     		beq	.L69
 1335              		.loc 1 1329 25 discriminator 1
 1336 001c FB88     		ldrh	r3, [r7, #6]
 1337 001e 002B     		cmp	r3, #0
 1338 0020 01D1     		bne	.L70
 1339              	.L69:
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1340              		.loc 1 1331 14
 1341 0022 0123     		movs	r3, #1
 1342 0024 4FE0     		b	.L71
 1343              	.L70:
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1344              		.loc 1 1334 5
 1345 0026 FB68     		ldr	r3, [r7, #12]
 1346 0028 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 1347 002c 012B     		cmp	r3, #1
 1348 002e 01D1     		bne	.L72
 1349              		.loc 1 1334 5 is_stmt 0 discriminator 1
 1350 0030 0223     		movs	r3, #2
 1351 0032 48E0     		b	.L71
 1352              	.L72:
 1353              		.loc 1 1334 5 discriminator 2
 1354 0034 FB68     		ldr	r3, [r7, #12]
 1355 0036 0122     		movs	r2, #1
 1356 0038 83F87420 		strb	r2, [r3, #116]
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1357              		.loc 1 1336 24 is_stmt 1 discriminator 2
 1358 003c FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 48


 1359 003e BA68     		ldr	r2, [r7, #8]
 1360 0040 DA64     		str	r2, [r3, #76]
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1361              		.loc 1 1337 24 discriminator 2
 1362 0042 FB68     		ldr	r3, [r7, #12]
 1363 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1364 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1365              		.loc 1 1338 24 discriminator 2
 1366 004a FB68     		ldr	r3, [r7, #12]
 1367 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1368 004e A3F85220 		strh	r2, [r3, #82]	@ movhi
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 1369              		.loc 1 1339 24 discriminator 2
 1370 0052 FB68     		ldr	r3, [r7, #12]
 1371 0054 0022     		movs	r2, #0
 1372 0056 9A66     		str	r2, [r3, #104]
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1373              		.loc 1 1341 22 discriminator 2
 1374 0058 FB68     		ldr	r3, [r7, #12]
 1375 005a 0022     		movs	r2, #0
 1376 005c C3F88020 		str	r2, [r3, #128]
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1377              		.loc 1 1342 19 discriminator 2
 1378 0060 FB68     		ldr	r3, [r7, #12]
 1379 0062 2122     		movs	r2, #33
 1380 0064 9A67     		str	r2, [r3, #120]
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 49


1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1381              		.loc 1 1382 21 discriminator 2
 1382 0066 FB68     		ldr	r3, [r7, #12]
 1383 0068 9B68     		ldr	r3, [r3, #8]
 1384              		.loc 1 1382 8 discriminator 2
 1385 006a B3F5805F 		cmp	r3, #4096
 1386 006e 07D1     		bne	.L73
 1387              		.loc 1 1382 71 discriminator 1
 1388 0070 FB68     		ldr	r3, [r7, #12]
 1389 0072 1B69     		ldr	r3, [r3, #16]
 1390              		.loc 1 1382 56 discriminator 1
 1391 0074 002B     		cmp	r3, #0
 1392 0076 03D1     		bne	.L73
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
 1393              		.loc 1 1384 20
 1394 0078 FB68     		ldr	r3, [r7, #12]
 1395 007a 164A     		ldr	r2, .L78
 1396 007c 9A66     		str	r2, [r3, #104]
 1397 007e 02E0     		b	.L74
 1398              	.L73:
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
 1399              		.loc 1 1388 20
 1400 0080 FB68     		ldr	r3, [r7, #12]
 1401 0082 154A     		ldr	r2, .L78+4
 1402 0084 9A66     		str	r2, [r3, #104]
 1403              	.L74:
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1404              		.loc 1 1391 5
 1405 0086 FB68     		ldr	r3, [r7, #12]
 1406 0088 0022     		movs	r2, #0
 1407 008a 83F87420 		strb	r2, [r3, #116]
 1408              	.L77:
 1409              	.LBB409:
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1410              		.loc 1 1394 5 discriminator 1
 1411 008e FB68     		ldr	r3, [r7, #12]
 1412 0090 1B68     		ldr	r3, [r3]
 1413 0092 7B61     		str	r3, [r7, #20]
 1414              	.LBB410:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 50


 1415              	.LBB411:
 1416              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 51


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 52


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 53


 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 54


 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 55


 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 56


 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 57


 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 58


 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 59


 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 60


 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 61


 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 62


 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 63


 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 64


 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 65


 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 66


 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 67


 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 68


1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 69


1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1095:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1096:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1097:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1107:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1131:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 70


1139:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1141:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1143:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1153:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 1417              		.loc 2 1155 4 discriminator 1
 1418 0094 7B69     		ldr	r3, [r7, #20]
 1419              		.syntax unified
 1420              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1421 0096 53E8003F 		ldrex r3, [r3]
 1422              	@ 0 "" 2
 1423              		.thumb
 1424              		.syntax unified
 1425 009a 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1426              		.loc 2 1156 10 discriminator 1
 1427 009c 3B69     		ldr	r3, [r7, #16]
 1428              	.LBE411:
 1429              	.LBE410:
 1430              		.loc 1 1394 5 discriminator 1
 1431 009e 43F08003 		orr	r3, r3, #128
 1432 00a2 7B62     		str	r3, [r7, #36]
 1433 00a4 FB68     		ldr	r3, [r7, #12]
 1434 00a6 1B68     		ldr	r3, [r3]
 1435 00a8 1A46     		mov	r2, r3
 1436 00aa 7B6A     		ldr	r3, [r7, #36]
 1437 00ac 3B62     		str	r3, [r7, #32]
 1438 00ae FA61     		str	r2, [r7, #28]
 1439              	.LBB412:
 1440              	.LBB413:
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1170:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 71


1172:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1174:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1177:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1185:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1187:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1188:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1203:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1204:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 1441              		.loc 2 1206 4 discriminator 1
 1442 00b0 F969     		ldr	r1, [r7, #28]
 1443 00b2 3A6A     		ldr	r2, [r7, #32]
 1444              		.syntax unified
 1445              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1446 00b4 41E80023 		strex r3, r2, [r1]
 1447              	@ 0 "" 2
 1448              		.thumb
 1449              		.syntax unified
 1450 00b8 BB61     		str	r3, [r7, #24]
1207:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1451              		.loc 2 1207 10 discriminator 1
 1452 00ba BB69     		ldr	r3, [r7, #24]
 1453              	.LBE413:
 1454              	.LBE412:
 1455              		.loc 1 1394 5 discriminator 1
 1456 00bc 002B     		cmp	r3, #0
 1457 00be E6D1     		bne	.L77
 1458              	.LBE409:
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 72


 1459              		.loc 1 1397 12
 1460 00c0 0023     		movs	r3, #0
 1461 00c2 00E0     		b	.L71
 1462              	.L68:
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1463              		.loc 1 1401 12
 1464 00c4 0223     		movs	r3, #2
 1465              	.L71:
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1466              		.loc 1 1403 1
 1467 00c6 1846     		mov	r0, r3
 1468 00c8 2C37     		adds	r7, r7, #44
 1469              	.LCFI50:
 1470              		.cfi_def_cfa_offset 4
 1471 00ca BD46     		mov	sp, r7
 1472              	.LCFI51:
 1473              		.cfi_def_cfa_register 13
 1474              		@ sp needed
 1475 00cc 5DF8047B 		ldr	r7, [sp], #4
 1476              	.LCFI52:
 1477              		.cfi_restore 7
 1478              		.cfi_def_cfa_offset 0
 1479 00d0 7047     		bx	lr
 1480              	.L79:
 1481 00d2 00BF     		.align	2
 1482              	.L78:
 1483 00d4 00000000 		.word	UART_TxISR_16BIT
 1484 00d8 00000000 		.word	UART_TxISR_8BIT
 1485              		.cfi_endproc
 1486              	.LFE301:
 1488              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1489              		.align	1
 1490              		.global	HAL_UART_Receive_IT
 1491              		.syntax unified
 1492              		.thumb
 1493              		.thumb_func
 1494              		.fpu fpv4-sp-d16
 1496              	HAL_UART_Receive_IT:
 1497              	.LFB302:
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1498              		.loc 1 1416 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 73


 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 40
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502 0000 80B5     		push	{r7, lr}
 1503              	.LCFI53:
 1504              		.cfi_def_cfa_offset 8
 1505              		.cfi_offset 7, -8
 1506              		.cfi_offset 14, -4
 1507 0002 8AB0     		sub	sp, sp, #40
 1508              	.LCFI54:
 1509              		.cfi_def_cfa_offset 48
 1510 0004 00AF     		add	r7, sp, #0
 1511              	.LCFI55:
 1512              		.cfi_def_cfa_register 7
 1513 0006 F860     		str	r0, [r7, #12]
 1514 0008 B960     		str	r1, [r7, #8]
 1515 000a 1346     		mov	r3, r2
 1516 000c FB80     		strh	r3, [r7, #6]	@ movhi
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1517              		.loc 1 1418 12
 1518 000e FB68     		ldr	r3, [r7, #12]
 1519 0010 DB6F     		ldr	r3, [r3, #124]
 1520              		.loc 1 1418 6
 1521 0012 202B     		cmp	r3, #32
 1522 0014 42D1     		bne	.L81
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1523              		.loc 1 1420 8
 1524 0016 BB68     		ldr	r3, [r7, #8]
 1525 0018 002B     		cmp	r3, #0
 1526 001a 02D0     		beq	.L82
 1527              		.loc 1 1420 25 discriminator 1
 1528 001c FB88     		ldrh	r3, [r7, #6]
 1529 001e 002B     		cmp	r3, #0
 1530 0020 01D1     		bne	.L83
 1531              	.L82:
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1532              		.loc 1 1422 14
 1533 0022 0123     		movs	r3, #1
 1534 0024 3BE0     		b	.L84
 1535              	.L83:
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1536              		.loc 1 1425 5
 1537 0026 FB68     		ldr	r3, [r7, #12]
 1538 0028 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 1539 002c 012B     		cmp	r3, #1
 1540 002e 01D1     		bne	.L85
 1541              		.loc 1 1425 5 is_stmt 0 discriminator 1
 1542 0030 0223     		movs	r3, #2
 1543 0032 34E0     		b	.L84
 1544              	.L85:
 1545              		.loc 1 1425 5 discriminator 2
 1546 0034 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 74


 1547 0036 0122     		movs	r2, #1
 1548 0038 83F87420 		strb	r2, [r3, #116]
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1549              		.loc 1 1428 26 is_stmt 1 discriminator 2
 1550 003c FB68     		ldr	r3, [r7, #12]
 1551 003e 0022     		movs	r2, #0
 1552 0040 1A66     		str	r2, [r3, #96]
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
 1553              		.loc 1 1430 11 discriminator 2
 1554 0042 FB68     		ldr	r3, [r7, #12]
 1555 0044 1B68     		ldr	r3, [r3]
 1556              		.loc 1 1430 8 discriminator 2
 1557 0046 184A     		ldr	r2, .L90
 1558 0048 9342     		cmp	r3, r2
 1559 004a 1FD0     		beq	.L86
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 1560              		.loc 1 1433 11
 1561 004c FB68     		ldr	r3, [r7, #12]
 1562 004e 1B68     		ldr	r3, [r3]
 1563 0050 5B68     		ldr	r3, [r3, #4]
 1564 0052 03F40003 		and	r3, r3, #8388608
 1565              		.loc 1 1433 10
 1566 0056 002B     		cmp	r3, #0
 1567 0058 18D0     		beq	.L86
 1568              	.L89:
 1569              	.LBB414:
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 1570              		.loc 1 1436 9 discriminator 1
 1571 005a FB68     		ldr	r3, [r7, #12]
 1572 005c 1B68     		ldr	r3, [r3]
 1573 005e 7B61     		str	r3, [r7, #20]
 1574              	.LBB415:
 1575              	.LBB416:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1576              		.loc 2 1155 4 discriminator 1
 1577 0060 7B69     		ldr	r3, [r7, #20]
 1578              		.syntax unified
 1579              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1580 0062 53E8003F 		ldrex r3, [r3]
 1581              	@ 0 "" 2
 1582              		.thumb
 1583              		.syntax unified
 1584 0066 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1585              		.loc 2 1156 10 discriminator 1
 1586 0068 3B69     		ldr	r3, [r7, #16]
 1587              	.LBE416:
 1588              	.LBE415:
 1589              		.loc 1 1436 9 discriminator 1
 1590 006a 43F08063 		orr	r3, r3, #67108864
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 75


 1591 006e 7B62     		str	r3, [r7, #36]
 1592 0070 FB68     		ldr	r3, [r7, #12]
 1593 0072 1B68     		ldr	r3, [r3]
 1594 0074 1A46     		mov	r2, r3
 1595 0076 7B6A     		ldr	r3, [r7, #36]
 1596 0078 3B62     		str	r3, [r7, #32]
 1597 007a FA61     		str	r2, [r7, #28]
 1598              	.LBB417:
 1599              	.LBB418:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1600              		.loc 2 1206 4 discriminator 1
 1601 007c F969     		ldr	r1, [r7, #28]
 1602 007e 3A6A     		ldr	r2, [r7, #32]
 1603              		.syntax unified
 1604              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1605 0080 41E80023 		strex r3, r2, [r1]
 1606              	@ 0 "" 2
 1607              		.thumb
 1608              		.syntax unified
 1609 0084 BB61     		str	r3, [r7, #24]
 1610              		.loc 2 1207 10 discriminator 1
 1611 0086 BB69     		ldr	r3, [r7, #24]
 1612              	.LBE418:
 1613              	.LBE417:
 1614              		.loc 1 1436 9 discriminator 1
 1615 0088 002B     		cmp	r3, #0
 1616 008a E6D1     		bne	.L89
 1617              	.L86:
 1618              	.LBE414:
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 1619              		.loc 1 1440 13
 1620 008c FB88     		ldrh	r3, [r7, #6]
 1621 008e 1A46     		mov	r2, r3
 1622 0090 B968     		ldr	r1, [r7, #8]
 1623 0092 F868     		ldr	r0, [r7, #12]
 1624 0094 FFF7FEFF 		bl	UART_Start_Receive_IT
 1625 0098 0346     		mov	r3, r0
 1626 009a 00E0     		b	.L84
 1627              	.L81:
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1628              		.loc 1 1444 12
 1629 009c 0223     		movs	r3, #2
 1630              	.L84:
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1631              		.loc 1 1446 1
 1632 009e 1846     		mov	r0, r3
 1633 00a0 2837     		adds	r7, r7, #40
 1634              	.LCFI56:
 1635              		.cfi_def_cfa_offset 8
 1636 00a2 BD46     		mov	sp, r7
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 76


 1637              	.LCFI57:
 1638              		.cfi_def_cfa_register 13
 1639              		@ sp needed
 1640 00a4 80BD     		pop	{r7, pc}
 1641              	.L91:
 1642 00a6 00BF     		.align	2
 1643              	.L90:
 1644 00a8 00800040 		.word	1073774592
 1645              		.cfi_endproc
 1646              	.LFE302:
 1648              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1649              		.align	1
 1650              		.global	HAL_UART_Transmit_DMA
 1651              		.syntax unified
 1652              		.thumb
 1653              		.thumb_func
 1654              		.fpu fpv4-sp-d16
 1656              	HAL_UART_Transmit_DMA:
 1657              	.LFB303:
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1658              		.loc 1 1459 1
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 40
 1661              		@ frame_needed = 1, uses_anonymous_args = 0
 1662 0000 80B5     		push	{r7, lr}
 1663              	.LCFI58:
 1664              		.cfi_def_cfa_offset 8
 1665              		.cfi_offset 7, -8
 1666              		.cfi_offset 14, -4
 1667 0002 8AB0     		sub	sp, sp, #40
 1668              	.LCFI59:
 1669              		.cfi_def_cfa_offset 48
 1670 0004 00AF     		add	r7, sp, #0
 1671              	.LCFI60:
 1672              		.cfi_def_cfa_register 7
 1673 0006 F860     		str	r0, [r7, #12]
 1674 0008 B960     		str	r1, [r7, #8]
 1675 000a 1346     		mov	r3, r2
 1676 000c FB80     		strh	r3, [r7, #6]	@ movhi
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1677              		.loc 1 1461 12
 1678 000e FB68     		ldr	r3, [r7, #12]
 1679 0010 9B6F     		ldr	r3, [r3, #120]
 1680              		.loc 1 1461 6
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 77


 1681 0012 202B     		cmp	r3, #32
 1682 0014 78D1     		bne	.L93
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1683              		.loc 1 1463 8
 1684 0016 BB68     		ldr	r3, [r7, #8]
 1685 0018 002B     		cmp	r3, #0
 1686 001a 02D0     		beq	.L94
 1687              		.loc 1 1463 25 discriminator 1
 1688 001c FB88     		ldrh	r3, [r7, #6]
 1689 001e 002B     		cmp	r3, #0
 1690 0020 01D1     		bne	.L95
 1691              	.L94:
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1692              		.loc 1 1465 14
 1693 0022 0123     		movs	r3, #1
 1694 0024 71E0     		b	.L96
 1695              	.L95:
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1696              		.loc 1 1468 5
 1697 0026 FB68     		ldr	r3, [r7, #12]
 1698 0028 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 1699 002c 012B     		cmp	r3, #1
 1700 002e 01D1     		bne	.L97
 1701              		.loc 1 1468 5 is_stmt 0 discriminator 1
 1702 0030 0223     		movs	r3, #2
 1703 0032 6AE0     		b	.L96
 1704              	.L97:
 1705              		.loc 1 1468 5 discriminator 2
 1706 0034 FB68     		ldr	r3, [r7, #12]
 1707 0036 0122     		movs	r2, #1
 1708 0038 83F87420 		strb	r2, [r3, #116]
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1709              		.loc 1 1470 24 is_stmt 1 discriminator 2
 1710 003c FB68     		ldr	r3, [r7, #12]
 1711 003e BA68     		ldr	r2, [r7, #8]
 1712 0040 DA64     		str	r2, [r3, #76]
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1713              		.loc 1 1471 24 discriminator 2
 1714 0042 FB68     		ldr	r3, [r7, #12]
 1715 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1716 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1717              		.loc 1 1472 24 discriminator 2
 1718 004a FB68     		ldr	r3, [r7, #12]
 1719 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1720 004e A3F85220 		strh	r2, [r3, #82]	@ movhi
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1721              		.loc 1 1474 22 discriminator 2
 1722 0052 FB68     		ldr	r3, [r7, #12]
 1723 0054 0022     		movs	r2, #0
 1724 0056 C3F88020 		str	r2, [r3, #128]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 78


1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1725              		.loc 1 1475 19 discriminator 2
 1726 005a FB68     		ldr	r3, [r7, #12]
 1727 005c 2122     		movs	r2, #33
 1728 005e 9A67     		str	r2, [r3, #120]
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1729              		.loc 1 1477 14 discriminator 2
 1730 0060 FB68     		ldr	r3, [r7, #12]
 1731 0062 DB6E     		ldr	r3, [r3, #108]
 1732              		.loc 1 1477 8 discriminator 2
 1733 0064 002B     		cmp	r3, #0
 1734 0066 2BD0     		beq	.L98
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1735              		.loc 1 1480 12
 1736 0068 FB68     		ldr	r3, [r7, #12]
 1737 006a DB6E     		ldr	r3, [r3, #108]
 1738              		.loc 1 1480 39
 1739 006c 294A     		ldr	r2, .L102
 1740 006e DA62     		str	r2, [r3, #44]
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1741              		.loc 1 1483 12
 1742 0070 FB68     		ldr	r3, [r7, #12]
 1743 0072 DB6E     		ldr	r3, [r3, #108]
 1744              		.loc 1 1483 43
 1745 0074 284A     		ldr	r2, .L102+4
 1746 0076 1A63     		str	r2, [r3, #48]
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 1747              		.loc 1 1486 12
 1748 0078 FB68     		ldr	r3, [r7, #12]
 1749 007a DB6E     		ldr	r3, [r3, #108]
 1750              		.loc 1 1486 40
 1751 007c 274A     		ldr	r2, .L102+8
 1752 007e 5A63     		str	r2, [r3, #52]
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 1753              		.loc 1 1489 12
 1754 0080 FB68     		ldr	r3, [r7, #12]
 1755 0082 DB6E     		ldr	r3, [r3, #108]
 1756              		.loc 1 1489 40
 1757 0084 0022     		movs	r2, #0
 1758 0086 9A63     		str	r2, [r3, #56]
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 1759              		.loc 1 1492 11
 1760 0088 FB68     		ldr	r3, [r7, #12]
 1761 008a D86E     		ldr	r0, [r3, #108]
 1762              		.loc 1 1492 58
 1763 008c FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 79


 1764 008e DB6C     		ldr	r3, [r3, #76]
 1765              		.loc 1 1492 11
 1766 0090 1946     		mov	r1, r3
 1767              		.loc 1 1492 88
 1768 0092 FB68     		ldr	r3, [r7, #12]
 1769 0094 1B68     		ldr	r3, [r3]
 1770              		.loc 1 1492 82
 1771 0096 2833     		adds	r3, r3, #40
 1772              		.loc 1 1492 11
 1773 0098 1A46     		mov	r2, r3
 1774 009a FB88     		ldrh	r3, [r7, #6]
 1775 009c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1776 00a0 0346     		mov	r3, r0
 1777              		.loc 1 1492 10
 1778 00a2 002B     		cmp	r3, #0
 1779 00a4 0CD0     		beq	.L98
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1780              		.loc 1 1495 26
 1781 00a6 FB68     		ldr	r3, [r7, #12]
 1782 00a8 1022     		movs	r2, #16
 1783 00aa C3F88020 		str	r2, [r3, #128]
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1784              		.loc 1 1497 9
 1785 00ae FB68     		ldr	r3, [r7, #12]
 1786 00b0 0022     		movs	r2, #0
 1787 00b2 83F87420 		strb	r2, [r3, #116]
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1788              		.loc 1 1500 23
 1789 00b6 FB68     		ldr	r3, [r7, #12]
 1790 00b8 2022     		movs	r2, #32
 1791 00ba 9A67     		str	r2, [r3, #120]
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
 1792              		.loc 1 1502 16
 1793 00bc 0123     		movs	r3, #1
 1794 00be 24E0     		b	.L96
 1795              	.L98:
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1796              		.loc 1 1506 5
 1797 00c0 FB68     		ldr	r3, [r7, #12]
 1798 00c2 1B68     		ldr	r3, [r3]
 1799 00c4 4022     		movs	r2, #64
 1800 00c6 1A62     		str	r2, [r3, #32]
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1801              		.loc 1 1508 5
 1802 00c8 FB68     		ldr	r3, [r7, #12]
 1803 00ca 0022     		movs	r2, #0
 1804 00cc 83F87420 		strb	r2, [r3, #116]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 80


 1805              	.L101:
 1806              	.LBB419:
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1807              		.loc 1 1512 5 discriminator 1
 1808 00d0 FB68     		ldr	r3, [r7, #12]
 1809 00d2 1B68     		ldr	r3, [r3]
 1810 00d4 0833     		adds	r3, r3, #8
 1811 00d6 7B61     		str	r3, [r7, #20]
 1812              	.LBB420:
 1813              	.LBB421:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1814              		.loc 2 1155 4 discriminator 1
 1815 00d8 7B69     		ldr	r3, [r7, #20]
 1816              		.syntax unified
 1817              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1818 00da 53E8003F 		ldrex r3, [r3]
 1819              	@ 0 "" 2
 1820              		.thumb
 1821              		.syntax unified
 1822 00de 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1823              		.loc 2 1156 10 discriminator 1
 1824 00e0 3B69     		ldr	r3, [r7, #16]
 1825              	.LBE421:
 1826              	.LBE420:
 1827              		.loc 1 1512 5 discriminator 1
 1828 00e2 43F08003 		orr	r3, r3, #128
 1829 00e6 7B62     		str	r3, [r7, #36]
 1830 00e8 FB68     		ldr	r3, [r7, #12]
 1831 00ea 1B68     		ldr	r3, [r3]
 1832 00ec 0833     		adds	r3, r3, #8
 1833 00ee 7A6A     		ldr	r2, [r7, #36]
 1834 00f0 3A62     		str	r2, [r7, #32]
 1835 00f2 FB61     		str	r3, [r7, #28]
 1836              	.LBB422:
 1837              	.LBB423:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1838              		.loc 2 1206 4 discriminator 1
 1839 00f4 F969     		ldr	r1, [r7, #28]
 1840 00f6 3A6A     		ldr	r2, [r7, #32]
 1841              		.syntax unified
 1842              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1843 00f8 41E80023 		strex r3, r2, [r1]
 1844              	@ 0 "" 2
 1845              		.thumb
 1846              		.syntax unified
 1847 00fc BB61     		str	r3, [r7, #24]
 1848              		.loc 2 1207 10 discriminator 1
 1849 00fe BB69     		ldr	r3, [r7, #24]
 1850              	.LBE423:
 1851              	.LBE422:
 1852              		.loc 1 1512 5 discriminator 1
 1853 0100 002B     		cmp	r3, #0
 1854 0102 E5D1     		bne	.L101
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 81


 1855              	.LBE419:
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1856              		.loc 1 1514 12
 1857 0104 0023     		movs	r3, #0
 1858 0106 00E0     		b	.L96
 1859              	.L93:
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1860              		.loc 1 1518 12
 1861 0108 0223     		movs	r3, #2
 1862              	.L96:
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1863              		.loc 1 1520 1
 1864 010a 1846     		mov	r0, r3
 1865 010c 2837     		adds	r7, r7, #40
 1866              	.LCFI61:
 1867              		.cfi_def_cfa_offset 8
 1868 010e BD46     		mov	sp, r7
 1869              	.LCFI62:
 1870              		.cfi_def_cfa_register 13
 1871              		@ sp needed
 1872 0110 80BD     		pop	{r7, pc}
 1873              	.L103:
 1874 0112 00BF     		.align	2
 1875              	.L102:
 1876 0114 00000000 		.word	UART_DMATransmitCplt
 1877 0118 00000000 		.word	UART_DMATxHalfCplt
 1878 011c 00000000 		.word	UART_DMAError
 1879              		.cfi_endproc
 1880              	.LFE303:
 1882              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1883              		.align	1
 1884              		.global	HAL_UART_Receive_DMA
 1885              		.syntax unified
 1886              		.thumb
 1887              		.thumb_func
 1888              		.fpu fpv4-sp-d16
 1890              	HAL_UART_Receive_DMA:
 1891              	.LFB304:
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 82


1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1892              		.loc 1 1535 1
 1893              		.cfi_startproc
 1894              		@ args = 0, pretend = 0, frame = 40
 1895              		@ frame_needed = 1, uses_anonymous_args = 0
 1896 0000 80B5     		push	{r7, lr}
 1897              	.LCFI63:
 1898              		.cfi_def_cfa_offset 8
 1899              		.cfi_offset 7, -8
 1900              		.cfi_offset 14, -4
 1901 0002 8AB0     		sub	sp, sp, #40
 1902              	.LCFI64:
 1903              		.cfi_def_cfa_offset 48
 1904 0004 00AF     		add	r7, sp, #0
 1905              	.LCFI65:
 1906              		.cfi_def_cfa_register 7
 1907 0006 F860     		str	r0, [r7, #12]
 1908 0008 B960     		str	r1, [r7, #8]
 1909 000a 1346     		mov	r3, r2
 1910 000c FB80     		strh	r3, [r7, #6]	@ movhi
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1911              		.loc 1 1537 12
 1912 000e FB68     		ldr	r3, [r7, #12]
 1913 0010 DB6F     		ldr	r3, [r3, #124]
 1914              		.loc 1 1537 6
 1915 0012 202B     		cmp	r3, #32
 1916 0014 42D1     		bne	.L105
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1917              		.loc 1 1539 8
 1918 0016 BB68     		ldr	r3, [r7, #8]
 1919 0018 002B     		cmp	r3, #0
 1920 001a 02D0     		beq	.L106
 1921              		.loc 1 1539 25 discriminator 1
 1922 001c FB88     		ldrh	r3, [r7, #6]
 1923 001e 002B     		cmp	r3, #0
 1924 0020 01D1     		bne	.L107
 1925              	.L106:
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1926              		.loc 1 1541 14
 1927 0022 0123     		movs	r3, #1
 1928 0024 3BE0     		b	.L108
 1929              	.L107:
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1930              		.loc 1 1544 5
 1931 0026 FB68     		ldr	r3, [r7, #12]
 1932 0028 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 1933 002c 012B     		cmp	r3, #1
 1934 002e 01D1     		bne	.L109
 1935              		.loc 1 1544 5 is_stmt 0 discriminator 1
 1936 0030 0223     		movs	r3, #2
 1937 0032 34E0     		b	.L108
 1938              	.L109:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 83


 1939              		.loc 1 1544 5 discriminator 2
 1940 0034 FB68     		ldr	r3, [r7, #12]
 1941 0036 0122     		movs	r2, #1
 1942 0038 83F87420 		strb	r2, [r3, #116]
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1943              		.loc 1 1547 26 is_stmt 1 discriminator 2
 1944 003c FB68     		ldr	r3, [r7, #12]
 1945 003e 0022     		movs	r2, #0
 1946 0040 1A66     		str	r2, [r3, #96]
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
 1947              		.loc 1 1549 11 discriminator 2
 1948 0042 FB68     		ldr	r3, [r7, #12]
 1949 0044 1B68     		ldr	r3, [r3]
 1950              		.loc 1 1549 8 discriminator 2
 1951 0046 184A     		ldr	r2, .L114
 1952 0048 9342     		cmp	r3, r2
 1953 004a 1FD0     		beq	.L110
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 1954              		.loc 1 1552 11
 1955 004c FB68     		ldr	r3, [r7, #12]
 1956 004e 1B68     		ldr	r3, [r3]
 1957 0050 5B68     		ldr	r3, [r3, #4]
 1958 0052 03F40003 		and	r3, r3, #8388608
 1959              		.loc 1 1552 10
 1960 0056 002B     		cmp	r3, #0
 1961 0058 18D0     		beq	.L110
 1962              	.L113:
 1963              	.LBB424:
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 1964              		.loc 1 1555 9 discriminator 1
 1965 005a FB68     		ldr	r3, [r7, #12]
 1966 005c 1B68     		ldr	r3, [r3]
 1967 005e 7B61     		str	r3, [r7, #20]
 1968              	.LBB425:
 1969              	.LBB426:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1970              		.loc 2 1155 4 discriminator 1
 1971 0060 7B69     		ldr	r3, [r7, #20]
 1972              		.syntax unified
 1973              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1974 0062 53E8003F 		ldrex r3, [r3]
 1975              	@ 0 "" 2
 1976              		.thumb
 1977              		.syntax unified
 1978 0066 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1979              		.loc 2 1156 10 discriminator 1
 1980 0068 3B69     		ldr	r3, [r7, #16]
 1981              	.LBE426:
 1982              	.LBE425:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 84


 1983              		.loc 1 1555 9 discriminator 1
 1984 006a 43F08063 		orr	r3, r3, #67108864
 1985 006e 7B62     		str	r3, [r7, #36]
 1986 0070 FB68     		ldr	r3, [r7, #12]
 1987 0072 1B68     		ldr	r3, [r3]
 1988 0074 1A46     		mov	r2, r3
 1989 0076 7B6A     		ldr	r3, [r7, #36]
 1990 0078 3B62     		str	r3, [r7, #32]
 1991 007a FA61     		str	r2, [r7, #28]
 1992              	.LBB427:
 1993              	.LBB428:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1994              		.loc 2 1206 4 discriminator 1
 1995 007c F969     		ldr	r1, [r7, #28]
 1996 007e 3A6A     		ldr	r2, [r7, #32]
 1997              		.syntax unified
 1998              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1999 0080 41E80023 		strex r3, r2, [r1]
 2000              	@ 0 "" 2
 2001              		.thumb
 2002              		.syntax unified
 2003 0084 BB61     		str	r3, [r7, #24]
 2004              		.loc 2 1207 10 discriminator 1
 2005 0086 BB69     		ldr	r3, [r7, #24]
 2006              	.LBE428:
 2007              	.LBE427:
 2008              		.loc 1 1555 9 discriminator 1
 2009 0088 002B     		cmp	r3, #0
 2010 008a E6D1     		bne	.L113
 2011              	.L110:
 2012              	.LBE424:
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 2013              		.loc 1 1559 13
 2014 008c FB88     		ldrh	r3, [r7, #6]
 2015 008e 1A46     		mov	r2, r3
 2016 0090 B968     		ldr	r1, [r7, #8]
 2017 0092 F868     		ldr	r0, [r7, #12]
 2018 0094 FFF7FEFF 		bl	UART_Start_Receive_DMA
 2019 0098 0346     		mov	r3, r0
 2020 009a 00E0     		b	.L108
 2021              	.L105:
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 2022              		.loc 1 1563 12
 2023 009c 0223     		movs	r3, #2
 2024              	.L108:
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2025              		.loc 1 1565 1
 2026 009e 1846     		mov	r0, r3
 2027 00a0 2837     		adds	r7, r7, #40
 2028              	.LCFI66:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 85


 2029              		.cfi_def_cfa_offset 8
 2030 00a2 BD46     		mov	sp, r7
 2031              	.LCFI67:
 2032              		.cfi_def_cfa_register 13
 2033              		@ sp needed
 2034 00a4 80BD     		pop	{r7, pc}
 2035              	.L115:
 2036 00a6 00BF     		.align	2
 2037              	.L114:
 2038 00a8 00800040 		.word	1073774592
 2039              		.cfi_endproc
 2040              	.LFE304:
 2042              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2043              		.align	1
 2044              		.global	HAL_UART_DMAPause
 2045              		.syntax unified
 2046              		.thumb
 2047              		.thumb_func
 2048              		.fpu fpv4-sp-d16
 2050              	HAL_UART_DMAPause:
 2051              	.LFB305:
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2052              		.loc 1 1573 1
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 112
 2055              		@ frame_needed = 1, uses_anonymous_args = 0
 2056              		@ link register save eliminated.
 2057 0000 80B4     		push	{r7}
 2058              	.LCFI68:
 2059              		.cfi_def_cfa_offset 4
 2060              		.cfi_offset 7, -4
 2061 0002 9DB0     		sub	sp, sp, #116
 2062              	.LCFI69:
 2063              		.cfi_def_cfa_offset 120
 2064 0004 00AF     		add	r7, sp, #0
 2065              	.LCFI70:
 2066              		.cfi_def_cfa_register 7
 2067 0006 7860     		str	r0, [r7, #4]
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2068              		.loc 1 1574 31
 2069 0008 7B68     		ldr	r3, [r7, #4]
 2070 000a 9B6F     		ldr	r3, [r3, #120]
 2071 000c FB66     		str	r3, [r7, #108]
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2072              		.loc 1 1575 31
 2073 000e 7B68     		ldr	r3, [r7, #4]
 2074 0010 DB6F     		ldr	r3, [r3, #124]
 2075 0012 BB66     		str	r3, [r7, #104]
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 86


 2076              		.loc 1 1577 3
 2077 0014 7B68     		ldr	r3, [r7, #4]
 2078 0016 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 2079 001a 012B     		cmp	r3, #1
 2080 001c 01D1     		bne	.L117
 2081              		.loc 1 1577 3 is_stmt 0 discriminator 1
 2082 001e 0223     		movs	r3, #2
 2083 0020 83E0     		b	.L118
 2084              	.L117:
 2085              		.loc 1 1577 3 discriminator 2
 2086 0022 7B68     		ldr	r3, [r7, #4]
 2087 0024 0122     		movs	r2, #1
 2088 0026 83F87420 		strb	r2, [r3, #116]
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2089              		.loc 1 1579 8 is_stmt 1 discriminator 2
 2090 002a 7B68     		ldr	r3, [r7, #4]
 2091 002c 1B68     		ldr	r3, [r3]
 2092 002e 9B68     		ldr	r3, [r3, #8]
 2093 0030 03F08003 		and	r3, r3, #128
 2094              		.loc 1 1579 6 discriminator 2
 2095 0034 802B     		cmp	r3, #128
 2096 0036 1CD1     		bne	.L119
 2097              		.loc 1 1579 62 discriminator 1
 2098 0038 FB6E     		ldr	r3, [r7, #108]
 2099 003a 212B     		cmp	r3, #33
 2100 003c 19D1     		bne	.L119
 2101              	.L122:
 2102              	.LBB429:
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2103              		.loc 1 1583 5 discriminator 1
 2104 003e 7B68     		ldr	r3, [r7, #4]
 2105 0040 1B68     		ldr	r3, [r3]
 2106 0042 0833     		adds	r3, r3, #8
 2107 0044 BB64     		str	r3, [r7, #72]
 2108              	.LBB430:
 2109              	.LBB431:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2110              		.loc 2 1155 4 discriminator 1
 2111 0046 BB6C     		ldr	r3, [r7, #72]
 2112              		.syntax unified
 2113              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2114 0048 53E8003F 		ldrex r3, [r3]
 2115              	@ 0 "" 2
 2116              		.thumb
 2117              		.syntax unified
 2118 004c 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2119              		.loc 2 1156 10 discriminator 1
 2120 004e 7B6C     		ldr	r3, [r7, #68]
 2121              	.LBE431:
 2122              	.LBE430:
 2123              		.loc 1 1583 5 discriminator 1
 2124 0050 23F08003 		bic	r3, r3, #128
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 87


 2125 0054 7B66     		str	r3, [r7, #100]
 2126 0056 7B68     		ldr	r3, [r7, #4]
 2127 0058 1B68     		ldr	r3, [r3]
 2128 005a 0833     		adds	r3, r3, #8
 2129 005c 7A6E     		ldr	r2, [r7, #100]
 2130 005e 7A65     		str	r2, [r7, #84]
 2131 0060 3B65     		str	r3, [r7, #80]
 2132              	.LBB432:
 2133              	.LBB433:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2134              		.loc 2 1206 4 discriminator 1
 2135 0062 396D     		ldr	r1, [r7, #80]
 2136 0064 7A6D     		ldr	r2, [r7, #84]
 2137              		.syntax unified
 2138              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2139 0066 41E80023 		strex r3, r2, [r1]
 2140              	@ 0 "" 2
 2141              		.thumb
 2142              		.syntax unified
 2143 006a FB64     		str	r3, [r7, #76]
 2144              		.loc 2 1207 10 discriminator 1
 2145 006c FB6C     		ldr	r3, [r7, #76]
 2146              	.LBE433:
 2147              	.LBE432:
 2148              		.loc 1 1583 5 discriminator 1
 2149 006e 002B     		cmp	r3, #0
 2150 0070 E5D1     		bne	.L122
 2151              	.L119:
 2152              	.LBE429:
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2153              		.loc 1 1585 8
 2154 0072 7B68     		ldr	r3, [r7, #4]
 2155 0074 1B68     		ldr	r3, [r3]
 2156 0076 9B68     		ldr	r3, [r3, #8]
 2157 0078 03F04003 		and	r3, r3, #64
 2158              		.loc 1 1585 6
 2159 007c 402B     		cmp	r3, #64
 2160 007e 4FD1     		bne	.L123
 2161              		.loc 1 1585 62 discriminator 1
 2162 0080 BB6E     		ldr	r3, [r7, #104]
 2163 0082 222B     		cmp	r3, #34
 2164 0084 4CD1     		bne	.L123
 2165              	.L126:
 2166              	.LBB434:
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2167              		.loc 1 1589 5 discriminator 1
 2168 0086 7B68     		ldr	r3, [r7, #4]
 2169 0088 1B68     		ldr	r3, [r3]
 2170 008a 7B63     		str	r3, [r7, #52]
 2171              	.LBB435:
 2172              	.LBB436:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2173              		.loc 2 1155 4 discriminator 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 88


 2174 008c 7B6B     		ldr	r3, [r7, #52]
 2175              		.syntax unified
 2176              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2177 008e 53E8003F 		ldrex r3, [r3]
 2178              	@ 0 "" 2
 2179              		.thumb
 2180              		.syntax unified
 2181 0092 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2182              		.loc 2 1156 10 discriminator 1
 2183 0094 3B6B     		ldr	r3, [r7, #48]
 2184              	.LBE436:
 2185              	.LBE435:
 2186              		.loc 1 1589 5 discriminator 1
 2187 0096 23F48073 		bic	r3, r3, #256
 2188 009a 3B66     		str	r3, [r7, #96]
 2189 009c 7B68     		ldr	r3, [r7, #4]
 2190 009e 1B68     		ldr	r3, [r3]
 2191 00a0 1A46     		mov	r2, r3
 2192 00a2 3B6E     		ldr	r3, [r7, #96]
 2193 00a4 3B64     		str	r3, [r7, #64]
 2194 00a6 FA63     		str	r2, [r7, #60]
 2195              	.LBB437:
 2196              	.LBB438:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2197              		.loc 2 1206 4 discriminator 1
 2198 00a8 F96B     		ldr	r1, [r7, #60]
 2199 00aa 3A6C     		ldr	r2, [r7, #64]
 2200              		.syntax unified
 2201              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2202 00ac 41E80023 		strex r3, r2, [r1]
 2203              	@ 0 "" 2
 2204              		.thumb
 2205              		.syntax unified
 2206 00b0 BB63     		str	r3, [r7, #56]
 2207              		.loc 2 1207 10 discriminator 1
 2208 00b2 BB6B     		ldr	r3, [r7, #56]
 2209              	.LBE438:
 2210              	.LBE437:
 2211              		.loc 1 1589 5 discriminator 1
 2212 00b4 002B     		cmp	r3, #0
 2213 00b6 E6D1     		bne	.L126
 2214              	.L129:
 2215              	.LBE434:
 2216              	.LBB439:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2217              		.loc 1 1590 5 discriminator 1
 2218 00b8 7B68     		ldr	r3, [r7, #4]
 2219 00ba 1B68     		ldr	r3, [r3]
 2220 00bc 0833     		adds	r3, r3, #8
 2221 00be 3B62     		str	r3, [r7, #32]
 2222              	.LBB440:
 2223              	.LBB441:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2224              		.loc 2 1155 4 discriminator 1
 2225 00c0 3B6A     		ldr	r3, [r7, #32]
 2226              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 89


 2227              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2228 00c2 53E8003F 		ldrex r3, [r3]
 2229              	@ 0 "" 2
 2230              		.thumb
 2231              		.syntax unified
 2232 00c6 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2233              		.loc 2 1156 10 discriminator 1
 2234 00c8 FB69     		ldr	r3, [r7, #28]
 2235              	.LBE441:
 2236              	.LBE440:
 2237              		.loc 1 1590 5 discriminator 1
 2238 00ca 23F00103 		bic	r3, r3, #1
 2239 00ce FB65     		str	r3, [r7, #92]
 2240 00d0 7B68     		ldr	r3, [r7, #4]
 2241 00d2 1B68     		ldr	r3, [r3]
 2242 00d4 0833     		adds	r3, r3, #8
 2243 00d6 FA6D     		ldr	r2, [r7, #92]
 2244 00d8 FA62     		str	r2, [r7, #44]
 2245 00da BB62     		str	r3, [r7, #40]
 2246              	.LBB442:
 2247              	.LBB443:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2248              		.loc 2 1206 4 discriminator 1
 2249 00dc B96A     		ldr	r1, [r7, #40]
 2250 00de FA6A     		ldr	r2, [r7, #44]
 2251              		.syntax unified
 2252              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2253 00e0 41E80023 		strex r3, r2, [r1]
 2254              	@ 0 "" 2
 2255              		.thumb
 2256              		.syntax unified
 2257 00e4 7B62     		str	r3, [r7, #36]
 2258              		.loc 2 1207 10 discriminator 1
 2259 00e6 7B6A     		ldr	r3, [r7, #36]
 2260              	.LBE443:
 2261              	.LBE442:
 2262              		.loc 1 1590 5 discriminator 1
 2263 00e8 002B     		cmp	r3, #0
 2264 00ea E5D1     		bne	.L129
 2265              	.L132:
 2266              	.LBE439:
 2267              	.LBB444:
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2268              		.loc 1 1593 5 discriminator 1
 2269 00ec 7B68     		ldr	r3, [r7, #4]
 2270 00ee 1B68     		ldr	r3, [r3]
 2271 00f0 0833     		adds	r3, r3, #8
 2272 00f2 FB60     		str	r3, [r7, #12]
 2273              	.LBB445:
 2274              	.LBB446:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2275              		.loc 2 1155 4 discriminator 1
 2276 00f4 FB68     		ldr	r3, [r7, #12]
 2277              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 90


 2278              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2279 00f6 53E8003F 		ldrex r3, [r3]
 2280              	@ 0 "" 2
 2281              		.thumb
 2282              		.syntax unified
 2283 00fa BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2284              		.loc 2 1156 10 discriminator 1
 2285 00fc BB68     		ldr	r3, [r7, #8]
 2286              	.LBE446:
 2287              	.LBE445:
 2288              		.loc 1 1593 5 discriminator 1
 2289 00fe 23F04003 		bic	r3, r3, #64
 2290 0102 BB65     		str	r3, [r7, #88]
 2291 0104 7B68     		ldr	r3, [r7, #4]
 2292 0106 1B68     		ldr	r3, [r3]
 2293 0108 0833     		adds	r3, r3, #8
 2294 010a BA6D     		ldr	r2, [r7, #88]
 2295 010c BA61     		str	r2, [r7, #24]
 2296 010e 7B61     		str	r3, [r7, #20]
 2297              	.LBB447:
 2298              	.LBB448:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2299              		.loc 2 1206 4 discriminator 1
 2300 0110 7969     		ldr	r1, [r7, #20]
 2301 0112 BA69     		ldr	r2, [r7, #24]
 2302              		.syntax unified
 2303              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2304 0114 41E80023 		strex r3, r2, [r1]
 2305              	@ 0 "" 2
 2306              		.thumb
 2307              		.syntax unified
 2308 0118 3B61     		str	r3, [r7, #16]
 2309              		.loc 2 1207 10 discriminator 1
 2310 011a 3B69     		ldr	r3, [r7, #16]
 2311              	.LBE448:
 2312              	.LBE447:
 2313              		.loc 1 1593 5 discriminator 1
 2314 011c 002B     		cmp	r3, #0
 2315 011e E5D1     		bne	.L132
 2316              	.L123:
 2317              	.LBE444:
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2318              		.loc 1 1596 3
 2319 0120 7B68     		ldr	r3, [r7, #4]
 2320 0122 0022     		movs	r2, #0
 2321 0124 83F87420 		strb	r2, [r3, #116]
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2322              		.loc 1 1598 10
 2323 0128 0023     		movs	r3, #0
 2324              	.L118:
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2325              		.loc 1 1599 1
 2326 012a 1846     		mov	r0, r3
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 91


 2327 012c 7437     		adds	r7, r7, #116
 2328              	.LCFI71:
 2329              		.cfi_def_cfa_offset 4
 2330 012e BD46     		mov	sp, r7
 2331              	.LCFI72:
 2332              		.cfi_def_cfa_register 13
 2333              		@ sp needed
 2334 0130 5DF8047B 		ldr	r7, [sp], #4
 2335              	.LCFI73:
 2336              		.cfi_restore 7
 2337              		.cfi_def_cfa_offset 0
 2338 0134 7047     		bx	lr
 2339              		.cfi_endproc
 2340              	.LFE305:
 2342              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2343              		.align	1
 2344              		.global	HAL_UART_DMAResume
 2345              		.syntax unified
 2346              		.thumb
 2347              		.thumb_func
 2348              		.fpu fpv4-sp-d16
 2350              	HAL_UART_DMAResume:
 2351              	.LFB306:
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2352              		.loc 1 1607 1
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 104
 2355              		@ frame_needed = 1, uses_anonymous_args = 0
 2356              		@ link register save eliminated.
 2357 0000 80B4     		push	{r7}
 2358              	.LCFI74:
 2359              		.cfi_def_cfa_offset 4
 2360              		.cfi_offset 7, -4
 2361 0002 9BB0     		sub	sp, sp, #108
 2362              	.LCFI75:
 2363              		.cfi_def_cfa_offset 112
 2364 0004 00AF     		add	r7, sp, #0
 2365              	.LCFI76:
 2366              		.cfi_def_cfa_register 7
 2367 0006 7860     		str	r0, [r7, #4]
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2368              		.loc 1 1608 3
 2369 0008 7B68     		ldr	r3, [r7, #4]
 2370 000a 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 2371 000e 012B     		cmp	r3, #1
 2372 0010 01D1     		bne	.L134
 2373              		.loc 1 1608 3 is_stmt 0 discriminator 1
 2374 0012 0223     		movs	r3, #2
 2375 0014 7FE0     		b	.L135
 2376              	.L134:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 92


 2377              		.loc 1 1608 3 discriminator 2
 2378 0016 7B68     		ldr	r3, [r7, #4]
 2379 0018 0122     		movs	r2, #1
 2380 001a 83F87420 		strb	r2, [r3, #116]
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2381              		.loc 1 1610 12 is_stmt 1 discriminator 2
 2382 001e 7B68     		ldr	r3, [r7, #4]
 2383 0020 9B6F     		ldr	r3, [r3, #120]
 2384              		.loc 1 1610 6 discriminator 2
 2385 0022 212B     		cmp	r3, #33
 2386 0024 19D1     		bne	.L136
 2387              	.L139:
 2388              	.LBB449:
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2389              		.loc 1 1613 5 discriminator 1
 2390 0026 7B68     		ldr	r3, [r7, #4]
 2391 0028 1B68     		ldr	r3, [r3]
 2392 002a 0833     		adds	r3, r3, #8
 2393 002c BB64     		str	r3, [r7, #72]
 2394              	.LBB450:
 2395              	.LBB451:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2396              		.loc 2 1155 4 discriminator 1
 2397 002e BB6C     		ldr	r3, [r7, #72]
 2398              		.syntax unified
 2399              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2400 0030 53E8003F 		ldrex r3, [r3]
 2401              	@ 0 "" 2
 2402              		.thumb
 2403              		.syntax unified
 2404 0034 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2405              		.loc 2 1156 10 discriminator 1
 2406 0036 7B6C     		ldr	r3, [r7, #68]
 2407              	.LBE451:
 2408              	.LBE450:
 2409              		.loc 1 1613 5 discriminator 1
 2410 0038 43F08003 		orr	r3, r3, #128
 2411 003c 7B66     		str	r3, [r7, #100]
 2412 003e 7B68     		ldr	r3, [r7, #4]
 2413 0040 1B68     		ldr	r3, [r3]
 2414 0042 0833     		adds	r3, r3, #8
 2415 0044 7A6E     		ldr	r2, [r7, #100]
 2416 0046 7A65     		str	r2, [r7, #84]
 2417 0048 3B65     		str	r3, [r7, #80]
 2418              	.LBB452:
 2419              	.LBB453:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2420              		.loc 2 1206 4 discriminator 1
 2421 004a 396D     		ldr	r1, [r7, #80]
 2422 004c 7A6D     		ldr	r2, [r7, #84]
 2423              		.syntax unified
 2424              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2425 004e 41E80023 		strex r3, r2, [r1]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 93


 2426              	@ 0 "" 2
 2427              		.thumb
 2428              		.syntax unified
 2429 0052 FB64     		str	r3, [r7, #76]
 2430              		.loc 2 1207 10 discriminator 1
 2431 0054 FB6C     		ldr	r3, [r7, #76]
 2432              	.LBE453:
 2433              	.LBE452:
 2434              		.loc 1 1613 5 discriminator 1
 2435 0056 002B     		cmp	r3, #0
 2436 0058 E5D1     		bne	.L139
 2437              	.L136:
 2438              	.LBE449:
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2439              		.loc 1 1615 12
 2440 005a 7B68     		ldr	r3, [r7, #4]
 2441 005c DB6F     		ldr	r3, [r3, #124]
 2442              		.loc 1 1615 6
 2443 005e 222B     		cmp	r3, #34
 2444 0060 54D1     		bne	.L140
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2445              		.loc 1 1618 5
 2446 0062 7B68     		ldr	r3, [r7, #4]
 2447 0064 1B68     		ldr	r3, [r3]
 2448 0066 0822     		movs	r2, #8
 2449 0068 1A62     		str	r2, [r3, #32]
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 2450              		.loc 1 1621 20
 2451 006a 7B68     		ldr	r3, [r7, #4]
 2452 006c 1B69     		ldr	r3, [r3, #16]
 2453              		.loc 1 1621 8
 2454 006e 002B     		cmp	r3, #0
 2455 0070 18D0     		beq	.L147
 2456              	.L144:
 2457              	.LBB454:
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2458              		.loc 1 1623 7 discriminator 1
 2459 0072 7B68     		ldr	r3, [r7, #4]
 2460 0074 1B68     		ldr	r3, [r3]
 2461 0076 7B63     		str	r3, [r7, #52]
 2462              	.LBB455:
 2463              	.LBB456:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2464              		.loc 2 1155 4 discriminator 1
 2465 0078 7B6B     		ldr	r3, [r7, #52]
 2466              		.syntax unified
 2467              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2468 007a 53E8003F 		ldrex r3, [r3]
 2469              	@ 0 "" 2
 2470              		.thumb
 2471              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 94


 2472 007e 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2473              		.loc 2 1156 10 discriminator 1
 2474 0080 3B6B     		ldr	r3, [r7, #48]
 2475              	.LBE456:
 2476              	.LBE455:
 2477              		.loc 1 1623 7 discriminator 1
 2478 0082 43F48073 		orr	r3, r3, #256
 2479 0086 3B66     		str	r3, [r7, #96]
 2480 0088 7B68     		ldr	r3, [r7, #4]
 2481 008a 1B68     		ldr	r3, [r3]
 2482 008c 1A46     		mov	r2, r3
 2483 008e 3B6E     		ldr	r3, [r7, #96]
 2484 0090 3B64     		str	r3, [r7, #64]
 2485 0092 FA63     		str	r2, [r7, #60]
 2486              	.LBB457:
 2487              	.LBB458:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2488              		.loc 2 1206 4 discriminator 1
 2489 0094 F96B     		ldr	r1, [r7, #60]
 2490 0096 3A6C     		ldr	r2, [r7, #64]
 2491              		.syntax unified
 2492              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2493 0098 41E80023 		strex r3, r2, [r1]
 2494              	@ 0 "" 2
 2495              		.thumb
 2496              		.syntax unified
 2497 009c BB63     		str	r3, [r7, #56]
 2498              		.loc 2 1207 10 discriminator 1
 2499 009e BB6B     		ldr	r3, [r7, #56]
 2500              	.LBE458:
 2501              	.LBE457:
 2502              		.loc 1 1623 7 discriminator 1
 2503 00a0 002B     		cmp	r3, #0
 2504 00a2 E6D1     		bne	.L144
 2505              	.L147:
 2506              	.LBE454:
 2507              	.LBB459:
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2508              		.loc 1 1625 5 discriminator 1
 2509 00a4 7B68     		ldr	r3, [r7, #4]
 2510 00a6 1B68     		ldr	r3, [r3]
 2511 00a8 0833     		adds	r3, r3, #8
 2512 00aa 3B62     		str	r3, [r7, #32]
 2513              	.LBB460:
 2514              	.LBB461:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2515              		.loc 2 1155 4 discriminator 1
 2516 00ac 3B6A     		ldr	r3, [r7, #32]
 2517              		.syntax unified
 2518              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2519 00ae 53E8003F 		ldrex r3, [r3]
 2520              	@ 0 "" 2
 2521              		.thumb
 2522              		.syntax unified
 2523 00b2 FB61     		str	r3, [r7, #28]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 95


1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2524              		.loc 2 1156 10 discriminator 1
 2525 00b4 FB69     		ldr	r3, [r7, #28]
 2526              	.LBE461:
 2527              	.LBE460:
 2528              		.loc 1 1625 5 discriminator 1
 2529 00b6 43F00103 		orr	r3, r3, #1
 2530 00ba FB65     		str	r3, [r7, #92]
 2531 00bc 7B68     		ldr	r3, [r7, #4]
 2532 00be 1B68     		ldr	r3, [r3]
 2533 00c0 0833     		adds	r3, r3, #8
 2534 00c2 FA6D     		ldr	r2, [r7, #92]
 2535 00c4 FA62     		str	r2, [r7, #44]
 2536 00c6 BB62     		str	r3, [r7, #40]
 2537              	.LBB462:
 2538              	.LBB463:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2539              		.loc 2 1206 4 discriminator 1
 2540 00c8 B96A     		ldr	r1, [r7, #40]
 2541 00ca FA6A     		ldr	r2, [r7, #44]
 2542              		.syntax unified
 2543              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2544 00cc 41E80023 		strex r3, r2, [r1]
 2545              	@ 0 "" 2
 2546              		.thumb
 2547              		.syntax unified
 2548 00d0 7B62     		str	r3, [r7, #36]
 2549              		.loc 2 1207 10 discriminator 1
 2550 00d2 7B6A     		ldr	r3, [r7, #36]
 2551              	.LBE463:
 2552              	.LBE462:
 2553              		.loc 1 1625 5 discriminator 1
 2554 00d4 002B     		cmp	r3, #0
 2555 00d6 E5D1     		bne	.L147
 2556              	.L150:
 2557              	.LBE459:
 2558              	.LBB464:
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2559              		.loc 1 1628 5 discriminator 1
 2560 00d8 7B68     		ldr	r3, [r7, #4]
 2561 00da 1B68     		ldr	r3, [r3]
 2562 00dc 0833     		adds	r3, r3, #8
 2563 00de FB60     		str	r3, [r7, #12]
 2564              	.LBB465:
 2565              	.LBB466:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2566              		.loc 2 1155 4 discriminator 1
 2567 00e0 FB68     		ldr	r3, [r7, #12]
 2568              		.syntax unified
 2569              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2570 00e2 53E8003F 		ldrex r3, [r3]
 2571              	@ 0 "" 2
 2572              		.thumb
 2573              		.syntax unified
 2574 00e6 BB60     		str	r3, [r7, #8]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 96


1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2575              		.loc 2 1156 10 discriminator 1
 2576 00e8 BB68     		ldr	r3, [r7, #8]
 2577              	.LBE466:
 2578              	.LBE465:
 2579              		.loc 1 1628 5 discriminator 1
 2580 00ea 43F04003 		orr	r3, r3, #64
 2581 00ee BB65     		str	r3, [r7, #88]
 2582 00f0 7B68     		ldr	r3, [r7, #4]
 2583 00f2 1B68     		ldr	r3, [r3]
 2584 00f4 0833     		adds	r3, r3, #8
 2585 00f6 BA6D     		ldr	r2, [r7, #88]
 2586 00f8 BA61     		str	r2, [r7, #24]
 2587 00fa 7B61     		str	r3, [r7, #20]
 2588              	.LBB467:
 2589              	.LBB468:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2590              		.loc 2 1206 4 discriminator 1
 2591 00fc 7969     		ldr	r1, [r7, #20]
 2592 00fe BA69     		ldr	r2, [r7, #24]
 2593              		.syntax unified
 2594              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2595 0100 41E80023 		strex r3, r2, [r1]
 2596              	@ 0 "" 2
 2597              		.thumb
 2598              		.syntax unified
 2599 0104 3B61     		str	r3, [r7, #16]
 2600              		.loc 2 1207 10 discriminator 1
 2601 0106 3B69     		ldr	r3, [r7, #16]
 2602              	.LBE468:
 2603              	.LBE467:
 2604              		.loc 1 1628 5 discriminator 1
 2605 0108 002B     		cmp	r3, #0
 2606 010a E5D1     		bne	.L150
 2607              	.L140:
 2608              	.LBE464:
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2609              		.loc 1 1631 3
 2610 010c 7B68     		ldr	r3, [r7, #4]
 2611 010e 0022     		movs	r2, #0
 2612 0110 83F87420 		strb	r2, [r3, #116]
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2613              		.loc 1 1633 10
 2614 0114 0023     		movs	r3, #0
 2615              	.L135:
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2616              		.loc 1 1634 1
 2617 0116 1846     		mov	r0, r3
 2618 0118 6C37     		adds	r7, r7, #108
 2619              	.LCFI77:
 2620              		.cfi_def_cfa_offset 4
 2621 011a BD46     		mov	sp, r7
 2622              	.LCFI78:
 2623              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 97


 2624              		@ sp needed
 2625 011c 5DF8047B 		ldr	r7, [sp], #4
 2626              	.LCFI79:
 2627              		.cfi_restore 7
 2628              		.cfi_def_cfa_offset 0
 2629 0120 7047     		bx	lr
 2630              		.cfi_endproc
 2631              	.LFE306:
 2633              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2634              		.align	1
 2635              		.global	HAL_UART_DMAStop
 2636              		.syntax unified
 2637              		.thumb
 2638              		.thumb_func
 2639              		.fpu fpv4-sp-d16
 2641              	HAL_UART_DMAStop:
 2642              	.LFB307:
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2643              		.loc 1 1642 1
 2644              		.cfi_startproc
 2645              		@ args = 0, pretend = 0, frame = 64
 2646              		@ frame_needed = 1, uses_anonymous_args = 0
 2647 0000 80B5     		push	{r7, lr}
 2648              	.LCFI80:
 2649              		.cfi_def_cfa_offset 8
 2650              		.cfi_offset 7, -8
 2651              		.cfi_offset 14, -4
 2652 0002 90B0     		sub	sp, sp, #64
 2653              	.LCFI81:
 2654              		.cfi_def_cfa_offset 72
 2655 0004 00AF     		add	r7, sp, #0
 2656              	.LCFI82:
 2657              		.cfi_def_cfa_register 7
 2658 0006 7860     		str	r0, [r7, #4]
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2659              		.loc 1 1650 31
 2660 0008 7B68     		ldr	r3, [r7, #4]
 2661 000a 9B6F     		ldr	r3, [r3, #120]
 2662 000c FB63     		str	r3, [r7, #60]
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2663              		.loc 1 1651 31
 2664 000e 7B68     		ldr	r3, [r7, #4]
 2665 0010 DB6F     		ldr	r3, [r3, #124]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 98


 2666 0012 BB63     		str	r3, [r7, #56]
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2667              		.loc 1 1654 8
 2668 0014 7B68     		ldr	r3, [r7, #4]
 2669 0016 1B68     		ldr	r3, [r3]
 2670 0018 9B68     		ldr	r3, [r3, #8]
 2671 001a 03F08003 		and	r3, r3, #128
 2672              		.loc 1 1654 6
 2673 001e 802B     		cmp	r3, #128
 2674 0020 39D1     		bne	.L152
 2675              		.loc 1 1654 62 discriminator 1
 2676 0022 FB6B     		ldr	r3, [r7, #60]
 2677 0024 212B     		cmp	r3, #33
 2678 0026 36D1     		bne	.L152
 2679              	.L155:
 2680              	.LBB469:
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2681              		.loc 1 1657 5 discriminator 1
 2682 0028 7B68     		ldr	r3, [r7, #4]
 2683 002a 1B68     		ldr	r3, [r3]
 2684 002c 0833     		adds	r3, r3, #8
 2685 002e 3B62     		str	r3, [r7, #32]
 2686              	.LBB470:
 2687              	.LBB471:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2688              		.loc 2 1155 4 discriminator 1
 2689 0030 3B6A     		ldr	r3, [r7, #32]
 2690              		.syntax unified
 2691              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2692 0032 53E8003F 		ldrex r3, [r3]
 2693              	@ 0 "" 2
 2694              		.thumb
 2695              		.syntax unified
 2696 0036 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2697              		.loc 2 1156 10 discriminator 1
 2698 0038 FB69     		ldr	r3, [r7, #28]
 2699              	.LBE471:
 2700              	.LBE470:
 2701              		.loc 1 1657 5 discriminator 1
 2702 003a 23F08003 		bic	r3, r3, #128
 2703 003e 7B63     		str	r3, [r7, #52]
 2704 0040 7B68     		ldr	r3, [r7, #4]
 2705 0042 1B68     		ldr	r3, [r3]
 2706 0044 0833     		adds	r3, r3, #8
 2707 0046 7A6B     		ldr	r2, [r7, #52]
 2708 0048 FA62     		str	r2, [r7, #44]
 2709 004a BB62     		str	r3, [r7, #40]
 2710              	.LBB472:
 2711              	.LBB473:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2712              		.loc 2 1206 4 discriminator 1
 2713 004c B96A     		ldr	r1, [r7, #40]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 99


 2714 004e FA6A     		ldr	r2, [r7, #44]
 2715              		.syntax unified
 2716              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2717 0050 41E80023 		strex r3, r2, [r1]
 2718              	@ 0 "" 2
 2719              		.thumb
 2720              		.syntax unified
 2721 0054 7B62     		str	r3, [r7, #36]
 2722              		.loc 2 1207 10 discriminator 1
 2723 0056 7B6A     		ldr	r3, [r7, #36]
 2724              	.LBE473:
 2725              	.LBE472:
 2726              		.loc 1 1657 5 discriminator 1
 2727 0058 002B     		cmp	r3, #0
 2728 005a E5D1     		bne	.L155
 2729              	.LBE469:
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2730              		.loc 1 1660 14
 2731 005c 7B68     		ldr	r3, [r7, #4]
 2732 005e DB6E     		ldr	r3, [r3, #108]
 2733              		.loc 1 1660 8
 2734 0060 002B     		cmp	r3, #0
 2735 0062 15D0     		beq	.L156
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2736              		.loc 1 1662 11
 2737 0064 7B68     		ldr	r3, [r7, #4]
 2738 0066 DB6E     		ldr	r3, [r3, #108]
 2739 0068 1846     		mov	r0, r3
 2740 006a FFF7FEFF 		bl	HAL_DMA_Abort
 2741 006e 0346     		mov	r3, r0
 2742              		.loc 1 1662 10
 2743 0070 002B     		cmp	r3, #0
 2744 0072 0DD0     		beq	.L156
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2745              		.loc 1 1664 13
 2746 0074 7B68     		ldr	r3, [r7, #4]
 2747 0076 DB6E     		ldr	r3, [r3, #108]
 2748 0078 1846     		mov	r0, r3
 2749 007a FFF7FEFF 		bl	HAL_DMA_GetError
 2750 007e 0346     		mov	r3, r0
 2751              		.loc 1 1664 12
 2752 0080 202B     		cmp	r3, #32
 2753 0082 05D1     		bne	.L156
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2754              		.loc 1 1667 28
 2755 0084 7B68     		ldr	r3, [r7, #4]
 2756 0086 1022     		movs	r2, #16
 2757 0088 C3F88020 		str	r2, [r3, #128]
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2758              		.loc 1 1669 18
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 100


 2759 008c 0323     		movs	r3, #3
 2760 008e 44E0     		b	.L157
 2761              	.L156:
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2762              		.loc 1 1674 5
 2763 0090 7868     		ldr	r0, [r7, #4]
 2764 0092 FFF7FEFF 		bl	UART_EndTxTransfer
 2765              	.L152:
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2766              		.loc 1 1678 8
 2767 0096 7B68     		ldr	r3, [r7, #4]
 2768 0098 1B68     		ldr	r3, [r3]
 2769 009a 9B68     		ldr	r3, [r3, #8]
 2770 009c 03F04003 		and	r3, r3, #64
 2771              		.loc 1 1678 6
 2772 00a0 402B     		cmp	r3, #64
 2773 00a2 39D1     		bne	.L158
 2774              		.loc 1 1678 62 discriminator 1
 2775 00a4 BB6B     		ldr	r3, [r7, #56]
 2776 00a6 222B     		cmp	r3, #34
 2777 00a8 36D1     		bne	.L158
 2778              	.L161:
 2779              	.LBB474:
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2780              		.loc 1 1681 5 discriminator 1
 2781 00aa 7B68     		ldr	r3, [r7, #4]
 2782 00ac 1B68     		ldr	r3, [r3]
 2783 00ae 0833     		adds	r3, r3, #8
 2784 00b0 FB60     		str	r3, [r7, #12]
 2785              	.LBB475:
 2786              	.LBB476:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2787              		.loc 2 1155 4 discriminator 1
 2788 00b2 FB68     		ldr	r3, [r7, #12]
 2789              		.syntax unified
 2790              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2791 00b4 53E8003F 		ldrex r3, [r3]
 2792              	@ 0 "" 2
 2793              		.thumb
 2794              		.syntax unified
 2795 00b8 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2796              		.loc 2 1156 10 discriminator 1
 2797 00ba BB68     		ldr	r3, [r7, #8]
 2798              	.LBE476:
 2799              	.LBE475:
 2800              		.loc 1 1681 5 discriminator 1
 2801 00bc 23F04003 		bic	r3, r3, #64
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 101


 2802 00c0 3B63     		str	r3, [r7, #48]
 2803 00c2 7B68     		ldr	r3, [r7, #4]
 2804 00c4 1B68     		ldr	r3, [r3]
 2805 00c6 0833     		adds	r3, r3, #8
 2806 00c8 3A6B     		ldr	r2, [r7, #48]
 2807 00ca BA61     		str	r2, [r7, #24]
 2808 00cc 7B61     		str	r3, [r7, #20]
 2809              	.LBB477:
 2810              	.LBB478:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2811              		.loc 2 1206 4 discriminator 1
 2812 00ce 7969     		ldr	r1, [r7, #20]
 2813 00d0 BA69     		ldr	r2, [r7, #24]
 2814              		.syntax unified
 2815              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2816 00d2 41E80023 		strex r3, r2, [r1]
 2817              	@ 0 "" 2
 2818              		.thumb
 2819              		.syntax unified
 2820 00d6 3B61     		str	r3, [r7, #16]
 2821              		.loc 2 1207 10 discriminator 1
 2822 00d8 3B69     		ldr	r3, [r7, #16]
 2823              	.LBE478:
 2824              	.LBE477:
 2825              		.loc 1 1681 5 discriminator 1
 2826 00da 002B     		cmp	r3, #0
 2827 00dc E5D1     		bne	.L161
 2828              	.LBE474:
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2829              		.loc 1 1684 14
 2830 00de 7B68     		ldr	r3, [r7, #4]
 2831 00e0 1B6F     		ldr	r3, [r3, #112]
 2832              		.loc 1 1684 8
 2833 00e2 002B     		cmp	r3, #0
 2834 00e4 15D0     		beq	.L162
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2835              		.loc 1 1686 11
 2836 00e6 7B68     		ldr	r3, [r7, #4]
 2837 00e8 1B6F     		ldr	r3, [r3, #112]
 2838 00ea 1846     		mov	r0, r3
 2839 00ec FFF7FEFF 		bl	HAL_DMA_Abort
 2840 00f0 0346     		mov	r3, r0
 2841              		.loc 1 1686 10
 2842 00f2 002B     		cmp	r3, #0
 2843 00f4 0DD0     		beq	.L162
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2844              		.loc 1 1688 13
 2845 00f6 7B68     		ldr	r3, [r7, #4]
 2846 00f8 1B6F     		ldr	r3, [r3, #112]
 2847 00fa 1846     		mov	r0, r3
 2848 00fc FFF7FEFF 		bl	HAL_DMA_GetError
 2849 0100 0346     		mov	r3, r0
 2850              		.loc 1 1688 12
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 102


 2851 0102 202B     		cmp	r3, #32
 2852 0104 05D1     		bne	.L162
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2853              		.loc 1 1691 28
 2854 0106 7B68     		ldr	r3, [r7, #4]
 2855 0108 1022     		movs	r2, #16
 2856 010a C3F88020 		str	r2, [r3, #128]
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2857              		.loc 1 1693 18
 2858 010e 0323     		movs	r3, #3
 2859 0110 03E0     		b	.L157
 2860              	.L162:
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2861              		.loc 1 1698 5
 2862 0112 7868     		ldr	r0, [r7, #4]
 2863 0114 FFF7FEFF 		bl	UART_EndRxTransfer
 2864              	.L158:
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2865              		.loc 1 1701 10
 2866 0118 0023     		movs	r3, #0
 2867              	.L157:
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2868              		.loc 1 1702 1
 2869 011a 1846     		mov	r0, r3
 2870 011c 4037     		adds	r7, r7, #64
 2871              	.LCFI83:
 2872              		.cfi_def_cfa_offset 8
 2873 011e BD46     		mov	sp, r7
 2874              	.LCFI84:
 2875              		.cfi_def_cfa_register 13
 2876              		@ sp needed
 2877 0120 80BD     		pop	{r7, pc}
 2878              		.cfi_endproc
 2879              	.LFE307:
 2881              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2882              		.align	1
 2883              		.global	HAL_UART_Abort
 2884              		.syntax unified
 2885              		.thumb
 2886              		.thumb_func
 2887              		.fpu fpv4-sp-d16
 2889              	HAL_UART_Abort:
 2890              	.LFB308:
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 103


1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2891              		.loc 1 1717 1
 2892              		.cfi_startproc
 2893              		@ args = 0, pretend = 0, frame = 128
 2894              		@ frame_needed = 1, uses_anonymous_args = 0
 2895 0000 80B5     		push	{r7, lr}
 2896              	.LCFI85:
 2897              		.cfi_def_cfa_offset 8
 2898              		.cfi_offset 7, -8
 2899              		.cfi_offset 14, -4
 2900 0002 A0B0     		sub	sp, sp, #128
 2901              	.LCFI86:
 2902              		.cfi_def_cfa_offset 136
 2903 0004 00AF     		add	r7, sp, #0
 2904              	.LCFI87:
 2905              		.cfi_def_cfa_register 7
 2906 0006 7860     		str	r0, [r7, #4]
 2907              	.L166:
 2908              	.LBB479:
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 2909              		.loc 1 1725 3 discriminator 1
 2910 0008 7B68     		ldr	r3, [r7, #4]
 2911 000a 1B68     		ldr	r3, [r3]
 2912 000c FB65     		str	r3, [r7, #92]
 2913              	.LBB480:
 2914              	.LBB481:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2915              		.loc 2 1155 4 discriminator 1
 2916 000e FB6D     		ldr	r3, [r7, #92]
 2917              		.syntax unified
 2918              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2919 0010 53E8003F 		ldrex r3, [r3]
 2920              	@ 0 "" 2
 2921              		.thumb
 2922              		.syntax unified
 2923 0014 BB65     		str	r3, [r7, #88]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2924              		.loc 2 1156 10 discriminator 1
 2925 0016 BB6D     		ldr	r3, [r7, #88]
 2926              	.LBE481:
 2927              	.LBE480:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 104


 2928              		.loc 1 1725 3 discriminator 1
 2929 0018 23F4F073 		bic	r3, r3, #480
 2930 001c FB67     		str	r3, [r7, #124]
 2931 001e 7B68     		ldr	r3, [r7, #4]
 2932 0020 1B68     		ldr	r3, [r3]
 2933 0022 1A46     		mov	r2, r3
 2934 0024 FB6F     		ldr	r3, [r7, #124]
 2935 0026 BB66     		str	r3, [r7, #104]
 2936 0028 7A66     		str	r2, [r7, #100]
 2937              	.LBB482:
 2938              	.LBB483:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2939              		.loc 2 1206 4 discriminator 1
 2940 002a 796E     		ldr	r1, [r7, #100]
 2941 002c BA6E     		ldr	r2, [r7, #104]
 2942              		.syntax unified
 2943              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2944 002e 41E80023 		strex r3, r2, [r1]
 2945              	@ 0 "" 2
 2946              		.thumb
 2947              		.syntax unified
 2948 0032 3B66     		str	r3, [r7, #96]
 2949              		.loc 2 1207 10 discriminator 1
 2950 0034 3B6E     		ldr	r3, [r7, #96]
 2951              	.LBE483:
 2952              	.LBE482:
 2953              		.loc 1 1725 3 discriminator 1
 2954 0036 002B     		cmp	r3, #0
 2955 0038 E6D1     		bne	.L166
 2956              	.L169:
 2957              	.LBE479:
 2958              	.LBB484:
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2959              		.loc 1 1726 3 discriminator 1
 2960 003a 7B68     		ldr	r3, [r7, #4]
 2961 003c 1B68     		ldr	r3, [r3]
 2962 003e 0833     		adds	r3, r3, #8
 2963 0040 BB64     		str	r3, [r7, #72]
 2964              	.LBB485:
 2965              	.LBB486:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2966              		.loc 2 1155 4 discriminator 1
 2967 0042 BB6C     		ldr	r3, [r7, #72]
 2968              		.syntax unified
 2969              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2970 0044 53E8003F 		ldrex r3, [r3]
 2971              	@ 0 "" 2
 2972              		.thumb
 2973              		.syntax unified
 2974 0048 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2975              		.loc 2 1156 10 discriminator 1
 2976 004a 7B6C     		ldr	r3, [r7, #68]
 2977              	.LBE486:
 2978              	.LBE485:
 2979              		.loc 1 1726 3 discriminator 1
 2980 004c 23F00103 		bic	r3, r3, #1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 105


 2981 0050 BB67     		str	r3, [r7, #120]
 2982 0052 7B68     		ldr	r3, [r7, #4]
 2983 0054 1B68     		ldr	r3, [r3]
 2984 0056 0833     		adds	r3, r3, #8
 2985 0058 BA6F     		ldr	r2, [r7, #120]
 2986 005a 7A65     		str	r2, [r7, #84]
 2987 005c 3B65     		str	r3, [r7, #80]
 2988              	.LBB487:
 2989              	.LBB488:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2990              		.loc 2 1206 4 discriminator 1
 2991 005e 396D     		ldr	r1, [r7, #80]
 2992 0060 7A6D     		ldr	r2, [r7, #84]
 2993              		.syntax unified
 2994              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2995 0062 41E80023 		strex r3, r2, [r1]
 2996              	@ 0 "" 2
 2997              		.thumb
 2998              		.syntax unified
 2999 0066 FB64     		str	r3, [r7, #76]
 3000              		.loc 2 1207 10 discriminator 1
 3001 0068 FB6C     		ldr	r3, [r7, #76]
 3002              	.LBE488:
 3003              	.LBE487:
 3004              		.loc 1 1726 3 discriminator 1
 3005 006a 002B     		cmp	r3, #0
 3006 006c E5D1     		bne	.L169
 3007              	.LBE484:
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3008              		.loc 1 1730 12
 3009 006e 7B68     		ldr	r3, [r7, #4]
 3010 0070 1B6E     		ldr	r3, [r3, #96]
 3011              		.loc 1 1730 6
 3012 0072 012B     		cmp	r3, #1
 3013 0074 18D1     		bne	.L170
 3014              	.L173:
 3015              	.LBB489:
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3016              		.loc 1 1732 5 discriminator 1
 3017 0076 7B68     		ldr	r3, [r7, #4]
 3018 0078 1B68     		ldr	r3, [r3]
 3019 007a 7B63     		str	r3, [r7, #52]
 3020              	.LBB490:
 3021              	.LBB491:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3022              		.loc 2 1155 4 discriminator 1
 3023 007c 7B6B     		ldr	r3, [r7, #52]
 3024              		.syntax unified
 3025              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3026 007e 53E8003F 		ldrex r3, [r3]
 3027              	@ 0 "" 2
 3028              		.thumb
 3029              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 106


 3030 0082 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3031              		.loc 2 1156 10 discriminator 1
 3032 0084 3B6B     		ldr	r3, [r7, #48]
 3033              	.LBE491:
 3034              	.LBE490:
 3035              		.loc 1 1732 5 discriminator 1
 3036 0086 23F01003 		bic	r3, r3, #16
 3037 008a 7B67     		str	r3, [r7, #116]
 3038 008c 7B68     		ldr	r3, [r7, #4]
 3039 008e 1B68     		ldr	r3, [r3]
 3040 0090 1A46     		mov	r2, r3
 3041 0092 7B6F     		ldr	r3, [r7, #116]
 3042 0094 3B64     		str	r3, [r7, #64]
 3043 0096 FA63     		str	r2, [r7, #60]
 3044              	.LBB492:
 3045              	.LBB493:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3046              		.loc 2 1206 4 discriminator 1
 3047 0098 F96B     		ldr	r1, [r7, #60]
 3048 009a 3A6C     		ldr	r2, [r7, #64]
 3049              		.syntax unified
 3050              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3051 009c 41E80023 		strex r3, r2, [r1]
 3052              	@ 0 "" 2
 3053              		.thumb
 3054              		.syntax unified
 3055 00a0 BB63     		str	r3, [r7, #56]
 3056              		.loc 2 1207 10 discriminator 1
 3057 00a2 BB6B     		ldr	r3, [r7, #56]
 3058              	.LBE493:
 3059              	.LBE492:
 3060              		.loc 1 1732 5 discriminator 1
 3061 00a4 002B     		cmp	r3, #0
 3062 00a6 E6D1     		bne	.L173
 3063              	.L170:
 3064              	.LBE489:
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3065              		.loc 1 1736 7
 3066 00a8 7B68     		ldr	r3, [r7, #4]
 3067 00aa 1B68     		ldr	r3, [r3]
 3068 00ac 9B68     		ldr	r3, [r3, #8]
 3069 00ae 03F08003 		and	r3, r3, #128
 3070              		.loc 1 1736 6
 3071 00b2 802B     		cmp	r3, #128
 3072 00b4 37D1     		bne	.L174
 3073              	.L177:
 3074              	.LBB494:
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3075              		.loc 1 1739 5 discriminator 1
 3076 00b6 7B68     		ldr	r3, [r7, #4]
 3077 00b8 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 107


 3078 00ba 0833     		adds	r3, r3, #8
 3079 00bc 3B62     		str	r3, [r7, #32]
 3080              	.LBB495:
 3081              	.LBB496:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3082              		.loc 2 1155 4 discriminator 1
 3083 00be 3B6A     		ldr	r3, [r7, #32]
 3084              		.syntax unified
 3085              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3086 00c0 53E8003F 		ldrex r3, [r3]
 3087              	@ 0 "" 2
 3088              		.thumb
 3089              		.syntax unified
 3090 00c4 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3091              		.loc 2 1156 10 discriminator 1
 3092 00c6 FB69     		ldr	r3, [r7, #28]
 3093              	.LBE496:
 3094              	.LBE495:
 3095              		.loc 1 1739 5 discriminator 1
 3096 00c8 23F08003 		bic	r3, r3, #128
 3097 00cc 3B67     		str	r3, [r7, #112]
 3098 00ce 7B68     		ldr	r3, [r7, #4]
 3099 00d0 1B68     		ldr	r3, [r3]
 3100 00d2 0833     		adds	r3, r3, #8
 3101 00d4 3A6F     		ldr	r2, [r7, #112]
 3102 00d6 FA62     		str	r2, [r7, #44]
 3103 00d8 BB62     		str	r3, [r7, #40]
 3104              	.LBB497:
 3105              	.LBB498:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3106              		.loc 2 1206 4 discriminator 1
 3107 00da B96A     		ldr	r1, [r7, #40]
 3108 00dc FA6A     		ldr	r2, [r7, #44]
 3109              		.syntax unified
 3110              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3111 00de 41E80023 		strex r3, r2, [r1]
 3112              	@ 0 "" 2
 3113              		.thumb
 3114              		.syntax unified
 3115 00e2 7B62     		str	r3, [r7, #36]
 3116              		.loc 2 1207 10 discriminator 1
 3117 00e4 7B6A     		ldr	r3, [r7, #36]
 3118              	.LBE498:
 3119              	.LBE497:
 3120              		.loc 1 1739 5 discriminator 1
 3121 00e6 002B     		cmp	r3, #0
 3122 00e8 E5D1     		bne	.L177
 3123              	.LBE494:
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3124              		.loc 1 1742 14
 3125 00ea 7B68     		ldr	r3, [r7, #4]
 3126 00ec DB6E     		ldr	r3, [r3, #108]
 3127              		.loc 1 1742 8
 3128 00ee 002B     		cmp	r3, #0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 108


 3129 00f0 19D0     		beq	.L174
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3130              		.loc 1 1746 12
 3131 00f2 7B68     		ldr	r3, [r7, #4]
 3132 00f4 DB6E     		ldr	r3, [r3, #108]
 3133              		.loc 1 1746 40
 3134 00f6 0022     		movs	r2, #0
 3135 00f8 9A63     		str	r2, [r3, #56]
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3136              		.loc 1 1748 11
 3137 00fa 7B68     		ldr	r3, [r7, #4]
 3138 00fc DB6E     		ldr	r3, [r3, #108]
 3139 00fe 1846     		mov	r0, r3
 3140 0100 FFF7FEFF 		bl	HAL_DMA_Abort
 3141 0104 0346     		mov	r3, r0
 3142              		.loc 1 1748 10
 3143 0106 002B     		cmp	r3, #0
 3144 0108 0DD0     		beq	.L174
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3145              		.loc 1 1750 13
 3146 010a 7B68     		ldr	r3, [r7, #4]
 3147 010c DB6E     		ldr	r3, [r3, #108]
 3148 010e 1846     		mov	r0, r3
 3149 0110 FFF7FEFF 		bl	HAL_DMA_GetError
 3150 0114 0346     		mov	r3, r0
 3151              		.loc 1 1750 12
 3152 0116 202B     		cmp	r3, #32
 3153 0118 05D1     		bne	.L174
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3154              		.loc 1 1753 28
 3155 011a 7B68     		ldr	r3, [r7, #4]
 3156 011c 1022     		movs	r2, #16
 3157 011e C3F88020 		str	r2, [r3, #128]
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3158              		.loc 1 1755 18
 3159 0122 0323     		movs	r3, #3
 3160 0124 62E0     		b	.L178
 3161              	.L174:
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3162              		.loc 1 1762 7
 3163 0126 7B68     		ldr	r3, [r7, #4]
 3164 0128 1B68     		ldr	r3, [r3]
 3165 012a 9B68     		ldr	r3, [r3, #8]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 109


 3166 012c 03F04003 		and	r3, r3, #64
 3167              		.loc 1 1762 6
 3168 0130 402B     		cmp	r3, #64
 3169 0132 37D1     		bne	.L179
 3170              	.L182:
 3171              	.LBB499:
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3172              		.loc 1 1765 5 discriminator 1
 3173 0134 7B68     		ldr	r3, [r7, #4]
 3174 0136 1B68     		ldr	r3, [r3]
 3175 0138 0833     		adds	r3, r3, #8
 3176 013a FB60     		str	r3, [r7, #12]
 3177              	.LBB500:
 3178              	.LBB501:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3179              		.loc 2 1155 4 discriminator 1
 3180 013c FB68     		ldr	r3, [r7, #12]
 3181              		.syntax unified
 3182              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3183 013e 53E8003F 		ldrex r3, [r3]
 3184              	@ 0 "" 2
 3185              		.thumb
 3186              		.syntax unified
 3187 0142 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3188              		.loc 2 1156 10 discriminator 1
 3189 0144 BB68     		ldr	r3, [r7, #8]
 3190              	.LBE501:
 3191              	.LBE500:
 3192              		.loc 1 1765 5 discriminator 1
 3193 0146 23F04003 		bic	r3, r3, #64
 3194 014a FB66     		str	r3, [r7, #108]
 3195 014c 7B68     		ldr	r3, [r7, #4]
 3196 014e 1B68     		ldr	r3, [r3]
 3197 0150 0833     		adds	r3, r3, #8
 3198 0152 FA6E     		ldr	r2, [r7, #108]
 3199 0154 BA61     		str	r2, [r7, #24]
 3200 0156 7B61     		str	r3, [r7, #20]
 3201              	.LBB502:
 3202              	.LBB503:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3203              		.loc 2 1206 4 discriminator 1
 3204 0158 7969     		ldr	r1, [r7, #20]
 3205 015a BA69     		ldr	r2, [r7, #24]
 3206              		.syntax unified
 3207              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3208 015c 41E80023 		strex r3, r2, [r1]
 3209              	@ 0 "" 2
 3210              		.thumb
 3211              		.syntax unified
 3212 0160 3B61     		str	r3, [r7, #16]
 3213              		.loc 2 1207 10 discriminator 1
 3214 0162 3B69     		ldr	r3, [r7, #16]
 3215              	.LBE503:
 3216              	.LBE502:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 110


 3217              		.loc 1 1765 5 discriminator 1
 3218 0164 002B     		cmp	r3, #0
 3219 0166 E5D1     		bne	.L182
 3220              	.LBE499:
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3221              		.loc 1 1768 14
 3222 0168 7B68     		ldr	r3, [r7, #4]
 3223 016a 1B6F     		ldr	r3, [r3, #112]
 3224              		.loc 1 1768 8
 3225 016c 002B     		cmp	r3, #0
 3226 016e 19D0     		beq	.L179
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3227              		.loc 1 1772 12
 3228 0170 7B68     		ldr	r3, [r7, #4]
 3229 0172 1B6F     		ldr	r3, [r3, #112]
 3230              		.loc 1 1772 40
 3231 0174 0022     		movs	r2, #0
 3232 0176 9A63     		str	r2, [r3, #56]
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3233              		.loc 1 1774 11
 3234 0178 7B68     		ldr	r3, [r7, #4]
 3235 017a 1B6F     		ldr	r3, [r3, #112]
 3236 017c 1846     		mov	r0, r3
 3237 017e FFF7FEFF 		bl	HAL_DMA_Abort
 3238 0182 0346     		mov	r3, r0
 3239              		.loc 1 1774 10
 3240 0184 002B     		cmp	r3, #0
 3241 0186 0DD0     		beq	.L179
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3242              		.loc 1 1776 13
 3243 0188 7B68     		ldr	r3, [r7, #4]
 3244 018a 1B6F     		ldr	r3, [r3, #112]
 3245 018c 1846     		mov	r0, r3
 3246 018e FFF7FEFF 		bl	HAL_DMA_GetError
 3247 0192 0346     		mov	r3, r0
 3248              		.loc 1 1776 12
 3249 0194 202B     		cmp	r3, #32
 3250 0196 05D1     		bne	.L179
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3251              		.loc 1 1779 28
 3252 0198 7B68     		ldr	r3, [r7, #4]
 3253 019a 1022     		movs	r2, #16
 3254 019c C3F88020 		str	r2, [r3, #128]
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3255              		.loc 1 1781 18
 3256 01a0 0323     		movs	r3, #3
 3257 01a2 23E0     		b	.L178
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 111


 3258              	.L179:
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3259              		.loc 1 1788 22
 3260 01a4 7B68     		ldr	r3, [r7, #4]
 3261 01a6 0022     		movs	r2, #0
 3262 01a8 A3F85220 		strh	r2, [r3, #82]	@ movhi
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3263              		.loc 1 1789 22
 3264 01ac 7B68     		ldr	r3, [r7, #4]
 3265 01ae 0022     		movs	r2, #0
 3266 01b0 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 3267              		.loc 1 1792 3
 3268 01b4 7B68     		ldr	r3, [r7, #4]
 3269 01b6 1B68     		ldr	r3, [r3]
 3270 01b8 0F22     		movs	r2, #15
 3271 01ba 1A62     		str	r2, [r3, #32]
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3272              		.loc 1 1803 3
 3273 01bc 7B68     		ldr	r3, [r7, #4]
 3274 01be 1B68     		ldr	r3, [r3]
 3275 01c0 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3276 01c2 9AB2     		uxth	r2, r3
 3277 01c4 7B68     		ldr	r3, [r7, #4]
 3278 01c6 1B68     		ldr	r3, [r3]
 3279 01c8 42F00802 		orr	r2, r2, #8
 3280 01cc 92B2     		uxth	r2, r2
 3281 01ce 1A83     		strh	r2, [r3, #24]	@ movhi
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 3282              		.loc 1 1806 18
 3283 01d0 7B68     		ldr	r3, [r7, #4]
 3284 01d2 2022     		movs	r2, #32
 3285 01d4 9A67     		str	r2, [r3, #120]
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3286              		.loc 1 1807 18
 3287 01d6 7B68     		ldr	r3, [r7, #4]
 3288 01d8 2022     		movs	r2, #32
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 112


 3289 01da DA67     		str	r2, [r3, #124]
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3290              		.loc 1 1808 24
 3291 01dc 7B68     		ldr	r3, [r7, #4]
 3292 01de 0022     		movs	r2, #0
 3293 01e0 1A66     		str	r2, [r3, #96]
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3294              		.loc 1 1810 20
 3295 01e2 7B68     		ldr	r3, [r7, #4]
 3296 01e4 0022     		movs	r2, #0
 3297 01e6 C3F88020 		str	r2, [r3, #128]
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3298              		.loc 1 1812 10
 3299 01ea 0023     		movs	r3, #0
 3300              	.L178:
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3301              		.loc 1 1813 1
 3302 01ec 1846     		mov	r0, r3
 3303 01ee 8037     		adds	r7, r7, #128
 3304              	.LCFI88:
 3305              		.cfi_def_cfa_offset 8
 3306 01f0 BD46     		mov	sp, r7
 3307              	.LCFI89:
 3308              		.cfi_def_cfa_register 13
 3309              		@ sp needed
 3310 01f2 80BD     		pop	{r7, pc}
 3311              		.cfi_endproc
 3312              	.LFE308:
 3314              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3315              		.align	1
 3316              		.global	HAL_UART_AbortTransmit
 3317              		.syntax unified
 3318              		.thumb
 3319              		.thumb_func
 3320              		.fpu fpv4-sp-d16
 3322              	HAL_UART_AbortTransmit:
 3323              	.LFB309:
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3324              		.loc 1 1828 1
 3325              		.cfi_startproc
 3326              		@ args = 0, pretend = 0, frame = 56
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 113


 3327              		@ frame_needed = 1, uses_anonymous_args = 0
 3328 0000 80B5     		push	{r7, lr}
 3329              	.LCFI90:
 3330              		.cfi_def_cfa_offset 8
 3331              		.cfi_offset 7, -8
 3332              		.cfi_offset 14, -4
 3333 0002 8EB0     		sub	sp, sp, #56
 3334              	.LCFI91:
 3335              		.cfi_def_cfa_offset 64
 3336 0004 00AF     		add	r7, sp, #0
 3337              	.LCFI92:
 3338              		.cfi_def_cfa_register 7
 3339 0006 7860     		str	r0, [r7, #4]
 3340              	.L186:
 3341              	.LBB504:
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3342              		.loc 1 1835 3 discriminator 1
 3343 0008 7B68     		ldr	r3, [r7, #4]
 3344 000a 1B68     		ldr	r3, [r3]
 3345 000c 3B62     		str	r3, [r7, #32]
 3346              	.LBB505:
 3347              	.LBB506:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3348              		.loc 2 1155 4 discriminator 1
 3349 000e 3B6A     		ldr	r3, [r7, #32]
 3350              		.syntax unified
 3351              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3352 0010 53E8003F 		ldrex r3, [r3]
 3353              	@ 0 "" 2
 3354              		.thumb
 3355              		.syntax unified
 3356 0014 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3357              		.loc 2 1156 10 discriminator 1
 3358 0016 FB69     		ldr	r3, [r7, #28]
 3359              	.LBE506:
 3360              	.LBE505:
 3361              		.loc 1 1835 3 discriminator 1
 3362 0018 23F0C003 		bic	r3, r3, #192
 3363 001c 7B63     		str	r3, [r7, #52]
 3364 001e 7B68     		ldr	r3, [r7, #4]
 3365 0020 1B68     		ldr	r3, [r3]
 3366 0022 1A46     		mov	r2, r3
 3367 0024 7B6B     		ldr	r3, [r7, #52]
 3368 0026 FB62     		str	r3, [r7, #44]
 3369 0028 BA62     		str	r2, [r7, #40]
 3370              	.LBB507:
 3371              	.LBB508:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3372              		.loc 2 1206 4 discriminator 1
 3373 002a B96A     		ldr	r1, [r7, #40]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 114


 3374 002c FA6A     		ldr	r2, [r7, #44]
 3375              		.syntax unified
 3376              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3377 002e 41E80023 		strex r3, r2, [r1]
 3378              	@ 0 "" 2
 3379              		.thumb
 3380              		.syntax unified
 3381 0032 7B62     		str	r3, [r7, #36]
 3382              		.loc 2 1207 10 discriminator 1
 3383 0034 7B6A     		ldr	r3, [r7, #36]
 3384              	.LBE508:
 3385              	.LBE507:
 3386              		.loc 1 1835 3 discriminator 1
 3387 0036 002B     		cmp	r3, #0
 3388 0038 E6D1     		bne	.L186
 3389              	.LBE504:
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3390              		.loc 1 1839 7
 3391 003a 7B68     		ldr	r3, [r7, #4]
 3392 003c 1B68     		ldr	r3, [r3]
 3393 003e 9B68     		ldr	r3, [r3, #8]
 3394 0040 03F08003 		and	r3, r3, #128
 3395              		.loc 1 1839 6
 3396 0044 802B     		cmp	r3, #128
 3397 0046 37D1     		bne	.L187
 3398              	.L190:
 3399              	.LBB509:
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3400              		.loc 1 1842 5 discriminator 1
 3401 0048 7B68     		ldr	r3, [r7, #4]
 3402 004a 1B68     		ldr	r3, [r3]
 3403 004c 0833     		adds	r3, r3, #8
 3404 004e FB60     		str	r3, [r7, #12]
 3405              	.LBB510:
 3406              	.LBB511:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3407              		.loc 2 1155 4 discriminator 1
 3408 0050 FB68     		ldr	r3, [r7, #12]
 3409              		.syntax unified
 3410              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3411 0052 53E8003F 		ldrex r3, [r3]
 3412              	@ 0 "" 2
 3413              		.thumb
 3414              		.syntax unified
 3415 0056 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3416              		.loc 2 1156 10 discriminator 1
 3417 0058 BB68     		ldr	r3, [r7, #8]
 3418              	.LBE511:
 3419              	.LBE510:
 3420              		.loc 1 1842 5 discriminator 1
 3421 005a 23F08003 		bic	r3, r3, #128
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 115


 3422 005e 3B63     		str	r3, [r7, #48]
 3423 0060 7B68     		ldr	r3, [r7, #4]
 3424 0062 1B68     		ldr	r3, [r3]
 3425 0064 0833     		adds	r3, r3, #8
 3426 0066 3A6B     		ldr	r2, [r7, #48]
 3427 0068 BA61     		str	r2, [r7, #24]
 3428 006a 7B61     		str	r3, [r7, #20]
 3429              	.LBB512:
 3430              	.LBB513:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3431              		.loc 2 1206 4 discriminator 1
 3432 006c 7969     		ldr	r1, [r7, #20]
 3433 006e BA69     		ldr	r2, [r7, #24]
 3434              		.syntax unified
 3435              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3436 0070 41E80023 		strex r3, r2, [r1]
 3437              	@ 0 "" 2
 3438              		.thumb
 3439              		.syntax unified
 3440 0074 3B61     		str	r3, [r7, #16]
 3441              		.loc 2 1207 10 discriminator 1
 3442 0076 3B69     		ldr	r3, [r7, #16]
 3443              	.LBE513:
 3444              	.LBE512:
 3445              		.loc 1 1842 5 discriminator 1
 3446 0078 002B     		cmp	r3, #0
 3447 007a E5D1     		bne	.L190
 3448              	.LBE509:
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3449              		.loc 1 1845 14
 3450 007c 7B68     		ldr	r3, [r7, #4]
 3451 007e DB6E     		ldr	r3, [r3, #108]
 3452              		.loc 1 1845 8
 3453 0080 002B     		cmp	r3, #0
 3454 0082 19D0     		beq	.L187
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3455              		.loc 1 1849 12
 3456 0084 7B68     		ldr	r3, [r7, #4]
 3457 0086 DB6E     		ldr	r3, [r3, #108]
 3458              		.loc 1 1849 40
 3459 0088 0022     		movs	r2, #0
 3460 008a 9A63     		str	r2, [r3, #56]
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3461              		.loc 1 1851 11
 3462 008c 7B68     		ldr	r3, [r7, #4]
 3463 008e DB6E     		ldr	r3, [r3, #108]
 3464 0090 1846     		mov	r0, r3
 3465 0092 FFF7FEFF 		bl	HAL_DMA_Abort
 3466 0096 0346     		mov	r3, r0
 3467              		.loc 1 1851 10
 3468 0098 002B     		cmp	r3, #0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 116


 3469 009a 0DD0     		beq	.L187
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3470              		.loc 1 1853 13
 3471 009c 7B68     		ldr	r3, [r7, #4]
 3472 009e DB6E     		ldr	r3, [r3, #108]
 3473 00a0 1846     		mov	r0, r3
 3474 00a2 FFF7FEFF 		bl	HAL_DMA_GetError
 3475 00a6 0346     		mov	r3, r0
 3476              		.loc 1 1853 12
 3477 00a8 202B     		cmp	r3, #32
 3478 00aa 05D1     		bne	.L187
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3479              		.loc 1 1856 28
 3480 00ac 7B68     		ldr	r3, [r7, #4]
 3481 00ae 1022     		movs	r2, #16
 3482 00b0 C3F88020 		str	r2, [r3, #128]
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3483              		.loc 1 1858 18
 3484 00b4 0323     		movs	r3, #3
 3485 00b6 07E0     		b	.L191
 3486              	.L187:
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3487              		.loc 1 1865 22
 3488 00b8 7B68     		ldr	r3, [r7, #4]
 3489 00ba 0022     		movs	r2, #0
 3490 00bc A3F85220 		strh	r2, [r3, #82]	@ movhi
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3491              		.loc 1 1876 17
 3492 00c0 7B68     		ldr	r3, [r7, #4]
 3493 00c2 2022     		movs	r2, #32
 3494 00c4 9A67     		str	r2, [r3, #120]
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3495              		.loc 1 1878 10
 3496 00c6 0023     		movs	r3, #0
 3497              	.L191:
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 117


 3498              		.loc 1 1879 1
 3499 00c8 1846     		mov	r0, r3
 3500 00ca 3837     		adds	r7, r7, #56
 3501              	.LCFI93:
 3502              		.cfi_def_cfa_offset 8
 3503 00cc BD46     		mov	sp, r7
 3504              	.LCFI94:
 3505              		.cfi_def_cfa_register 13
 3506              		@ sp needed
 3507 00ce 80BD     		pop	{r7, pc}
 3508              		.cfi_endproc
 3509              	.LFE309:
 3511              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3512              		.align	1
 3513              		.global	HAL_UART_AbortReceive
 3514              		.syntax unified
 3515              		.thumb
 3516              		.thumb_func
 3517              		.fpu fpv4-sp-d16
 3519              	HAL_UART_AbortReceive:
 3520              	.LFB310:
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3521              		.loc 1 1894 1
 3522              		.cfi_startproc
 3523              		@ args = 0, pretend = 0, frame = 104
 3524              		@ frame_needed = 1, uses_anonymous_args = 0
 3525 0000 80B5     		push	{r7, lr}
 3526              	.LCFI95:
 3527              		.cfi_def_cfa_offset 8
 3528              		.cfi_offset 7, -8
 3529              		.cfi_offset 14, -4
 3530 0002 9AB0     		sub	sp, sp, #104
 3531              	.LCFI96:
 3532              		.cfi_def_cfa_offset 112
 3533 0004 00AF     		add	r7, sp, #0
 3534              	.LCFI97:
 3535              		.cfi_def_cfa_register 7
 3536 0006 7860     		str	r0, [r7, #4]
 3537              	.L195:
 3538              	.LBB514:
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 118


1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3539              		.loc 1 1901 3 discriminator 1
 3540 0008 7B68     		ldr	r3, [r7, #4]
 3541 000a 1B68     		ldr	r3, [r3]
 3542 000c BB64     		str	r3, [r7, #72]
 3543              	.LBB515:
 3544              	.LBB516:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3545              		.loc 2 1155 4 discriminator 1
 3546 000e BB6C     		ldr	r3, [r7, #72]
 3547              		.syntax unified
 3548              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3549 0010 53E8003F 		ldrex r3, [r3]
 3550              	@ 0 "" 2
 3551              		.thumb
 3552              		.syntax unified
 3553 0014 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3554              		.loc 2 1156 10 discriminator 1
 3555 0016 7B6C     		ldr	r3, [r7, #68]
 3556              	.LBE516:
 3557              	.LBE515:
 3558              		.loc 1 1901 3 discriminator 1
 3559 0018 23F49073 		bic	r3, r3, #288
 3560 001c 7B66     		str	r3, [r7, #100]
 3561 001e 7B68     		ldr	r3, [r7, #4]
 3562 0020 1B68     		ldr	r3, [r3]
 3563 0022 1A46     		mov	r2, r3
 3564 0024 7B6E     		ldr	r3, [r7, #100]
 3565 0026 7B65     		str	r3, [r7, #84]
 3566 0028 3A65     		str	r2, [r7, #80]
 3567              	.LBB517:
 3568              	.LBB518:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3569              		.loc 2 1206 4 discriminator 1
 3570 002a 396D     		ldr	r1, [r7, #80]
 3571 002c 7A6D     		ldr	r2, [r7, #84]
 3572              		.syntax unified
 3573              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3574 002e 41E80023 		strex r3, r2, [r1]
 3575              	@ 0 "" 2
 3576              		.thumb
 3577              		.syntax unified
 3578 0032 FB64     		str	r3, [r7, #76]
 3579              		.loc 2 1207 10 discriminator 1
 3580 0034 FB6C     		ldr	r3, [r7, #76]
 3581              	.LBE518:
 3582              	.LBE517:
 3583              		.loc 1 1901 3 discriminator 1
 3584 0036 002B     		cmp	r3, #0
 3585 0038 E6D1     		bne	.L195
 3586              	.L198:
 3587              	.LBE514:
 3588              	.LBB519:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 119


1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3589              		.loc 1 1902 3 discriminator 1
 3590 003a 7B68     		ldr	r3, [r7, #4]
 3591 003c 1B68     		ldr	r3, [r3]
 3592 003e 0833     		adds	r3, r3, #8
 3593 0040 7B63     		str	r3, [r7, #52]
 3594              	.LBB520:
 3595              	.LBB521:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3596              		.loc 2 1155 4 discriminator 1
 3597 0042 7B6B     		ldr	r3, [r7, #52]
 3598              		.syntax unified
 3599              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3600 0044 53E8003F 		ldrex r3, [r3]
 3601              	@ 0 "" 2
 3602              		.thumb
 3603              		.syntax unified
 3604 0048 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3605              		.loc 2 1156 10 discriminator 1
 3606 004a 3B6B     		ldr	r3, [r7, #48]
 3607              	.LBE521:
 3608              	.LBE520:
 3609              		.loc 1 1902 3 discriminator 1
 3610 004c 23F00103 		bic	r3, r3, #1
 3611 0050 3B66     		str	r3, [r7, #96]
 3612 0052 7B68     		ldr	r3, [r7, #4]
 3613 0054 1B68     		ldr	r3, [r3]
 3614 0056 0833     		adds	r3, r3, #8
 3615 0058 3A6E     		ldr	r2, [r7, #96]
 3616 005a 3A64     		str	r2, [r7, #64]
 3617 005c FB63     		str	r3, [r7, #60]
 3618              	.LBB522:
 3619              	.LBB523:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3620              		.loc 2 1206 4 discriminator 1
 3621 005e F96B     		ldr	r1, [r7, #60]
 3622 0060 3A6C     		ldr	r2, [r7, #64]
 3623              		.syntax unified
 3624              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3625 0062 41E80023 		strex r3, r2, [r1]
 3626              	@ 0 "" 2
 3627              		.thumb
 3628              		.syntax unified
 3629 0066 BB63     		str	r3, [r7, #56]
 3630              		.loc 2 1207 10 discriminator 1
 3631 0068 BB6B     		ldr	r3, [r7, #56]
 3632              	.LBE523:
 3633              	.LBE522:
 3634              		.loc 1 1902 3 discriminator 1
 3635 006a 002B     		cmp	r3, #0
 3636 006c E5D1     		bne	.L198
 3637              	.LBE519:
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 120


 3638              		.loc 1 1906 12
 3639 006e 7B68     		ldr	r3, [r7, #4]
 3640 0070 1B6E     		ldr	r3, [r3, #96]
 3641              		.loc 1 1906 6
 3642 0072 012B     		cmp	r3, #1
 3643 0074 18D1     		bne	.L199
 3644              	.L202:
 3645              	.LBB524:
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3646              		.loc 1 1908 5 discriminator 1
 3647 0076 7B68     		ldr	r3, [r7, #4]
 3648 0078 1B68     		ldr	r3, [r3]
 3649 007a 3B62     		str	r3, [r7, #32]
 3650              	.LBB525:
 3651              	.LBB526:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3652              		.loc 2 1155 4 discriminator 1
 3653 007c 3B6A     		ldr	r3, [r7, #32]
 3654              		.syntax unified
 3655              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3656 007e 53E8003F 		ldrex r3, [r3]
 3657              	@ 0 "" 2
 3658              		.thumb
 3659              		.syntax unified
 3660 0082 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3661              		.loc 2 1156 10 discriminator 1
 3662 0084 FB69     		ldr	r3, [r7, #28]
 3663              	.LBE526:
 3664              	.LBE525:
 3665              		.loc 1 1908 5 discriminator 1
 3666 0086 23F01003 		bic	r3, r3, #16
 3667 008a FB65     		str	r3, [r7, #92]
 3668 008c 7B68     		ldr	r3, [r7, #4]
 3669 008e 1B68     		ldr	r3, [r3]
 3670 0090 1A46     		mov	r2, r3
 3671 0092 FB6D     		ldr	r3, [r7, #92]
 3672 0094 FB62     		str	r3, [r7, #44]
 3673 0096 BA62     		str	r2, [r7, #40]
 3674              	.LBB527:
 3675              	.LBB528:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3676              		.loc 2 1206 4 discriminator 1
 3677 0098 B96A     		ldr	r1, [r7, #40]
 3678 009a FA6A     		ldr	r2, [r7, #44]
 3679              		.syntax unified
 3680              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3681 009c 41E80023 		strex r3, r2, [r1]
 3682              	@ 0 "" 2
 3683              		.thumb
 3684              		.syntax unified
 3685 00a0 7B62     		str	r3, [r7, #36]
 3686              		.loc 2 1207 10 discriminator 1
 3687 00a2 7B6A     		ldr	r3, [r7, #36]
 3688              	.LBE528:
 3689              	.LBE527:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 121


 3690              		.loc 1 1908 5 discriminator 1
 3691 00a4 002B     		cmp	r3, #0
 3692 00a6 E6D1     		bne	.L202
 3693              	.L199:
 3694              	.LBE524:
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3695              		.loc 1 1912 7
 3696 00a8 7B68     		ldr	r3, [r7, #4]
 3697 00aa 1B68     		ldr	r3, [r3]
 3698 00ac 9B68     		ldr	r3, [r3, #8]
 3699 00ae 03F04003 		and	r3, r3, #64
 3700              		.loc 1 1912 6
 3701 00b2 402B     		cmp	r3, #64
 3702 00b4 37D1     		bne	.L203
 3703              	.L206:
 3704              	.LBB529:
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3705              		.loc 1 1915 5 discriminator 1
 3706 00b6 7B68     		ldr	r3, [r7, #4]
 3707 00b8 1B68     		ldr	r3, [r3]
 3708 00ba 0833     		adds	r3, r3, #8
 3709 00bc FB60     		str	r3, [r7, #12]
 3710              	.LBB530:
 3711              	.LBB531:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3712              		.loc 2 1155 4 discriminator 1
 3713 00be FB68     		ldr	r3, [r7, #12]
 3714              		.syntax unified
 3715              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3716 00c0 53E8003F 		ldrex r3, [r3]
 3717              	@ 0 "" 2
 3718              		.thumb
 3719              		.syntax unified
 3720 00c4 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3721              		.loc 2 1156 10 discriminator 1
 3722 00c6 BB68     		ldr	r3, [r7, #8]
 3723              	.LBE531:
 3724              	.LBE530:
 3725              		.loc 1 1915 5 discriminator 1
 3726 00c8 23F04003 		bic	r3, r3, #64
 3727 00cc BB65     		str	r3, [r7, #88]
 3728 00ce 7B68     		ldr	r3, [r7, #4]
 3729 00d0 1B68     		ldr	r3, [r3]
 3730 00d2 0833     		adds	r3, r3, #8
 3731 00d4 BA6D     		ldr	r2, [r7, #88]
 3732 00d6 BA61     		str	r2, [r7, #24]
 3733 00d8 7B61     		str	r3, [r7, #20]
 3734              	.LBB532:
 3735              	.LBB533:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3736              		.loc 2 1206 4 discriminator 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 122


 3737 00da 7969     		ldr	r1, [r7, #20]
 3738 00dc BA69     		ldr	r2, [r7, #24]
 3739              		.syntax unified
 3740              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3741 00de 41E80023 		strex r3, r2, [r1]
 3742              	@ 0 "" 2
 3743              		.thumb
 3744              		.syntax unified
 3745 00e2 3B61     		str	r3, [r7, #16]
 3746              		.loc 2 1207 10 discriminator 1
 3747 00e4 3B69     		ldr	r3, [r7, #16]
 3748              	.LBE533:
 3749              	.LBE532:
 3750              		.loc 1 1915 5 discriminator 1
 3751 00e6 002B     		cmp	r3, #0
 3752 00e8 E5D1     		bne	.L206
 3753              	.LBE529:
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3754              		.loc 1 1918 14
 3755 00ea 7B68     		ldr	r3, [r7, #4]
 3756 00ec 1B6F     		ldr	r3, [r3, #112]
 3757              		.loc 1 1918 8
 3758 00ee 002B     		cmp	r3, #0
 3759 00f0 19D0     		beq	.L203
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3760              		.loc 1 1922 12
 3761 00f2 7B68     		ldr	r3, [r7, #4]
 3762 00f4 1B6F     		ldr	r3, [r3, #112]
 3763              		.loc 1 1922 40
 3764 00f6 0022     		movs	r2, #0
 3765 00f8 9A63     		str	r2, [r3, #56]
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3766              		.loc 1 1924 11
 3767 00fa 7B68     		ldr	r3, [r7, #4]
 3768 00fc 1B6F     		ldr	r3, [r3, #112]
 3769 00fe 1846     		mov	r0, r3
 3770 0100 FFF7FEFF 		bl	HAL_DMA_Abort
 3771 0104 0346     		mov	r3, r0
 3772              		.loc 1 1924 10
 3773 0106 002B     		cmp	r3, #0
 3774 0108 0DD0     		beq	.L203
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3775              		.loc 1 1926 13
 3776 010a 7B68     		ldr	r3, [r7, #4]
 3777 010c 1B6F     		ldr	r3, [r3, #112]
 3778 010e 1846     		mov	r0, r3
 3779 0110 FFF7FEFF 		bl	HAL_DMA_GetError
 3780 0114 0346     		mov	r3, r0
 3781              		.loc 1 1926 12
 3782 0116 202B     		cmp	r3, #32
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 123


 3783 0118 05D1     		bne	.L203
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3784              		.loc 1 1929 28
 3785 011a 7B68     		ldr	r3, [r7, #4]
 3786 011c 1022     		movs	r2, #16
 3787 011e C3F88020 		str	r2, [r3, #128]
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3788              		.loc 1 1931 18
 3789 0122 0323     		movs	r3, #3
 3790 0124 18E0     		b	.L207
 3791              	.L203:
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3792              		.loc 1 1938 22
 3793 0126 7B68     		ldr	r3, [r7, #4]
 3794 0128 0022     		movs	r2, #0
 3795 012a A3F85A20 		strh	r2, [r3, #90]	@ movhi
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 3796              		.loc 1 1941 3
 3797 012e 7B68     		ldr	r3, [r7, #4]
 3798 0130 1B68     		ldr	r3, [r3]
 3799 0132 0F22     		movs	r2, #15
 3800 0134 1A62     		str	r2, [r3, #32]
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3801              		.loc 1 1944 3
 3802 0136 7B68     		ldr	r3, [r7, #4]
 3803 0138 1B68     		ldr	r3, [r3]
 3804 013a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3805 013c 9AB2     		uxth	r2, r3
 3806 013e 7B68     		ldr	r3, [r7, #4]
 3807 0140 1B68     		ldr	r3, [r3]
 3808 0142 42F00802 		orr	r2, r2, #8
 3809 0146 92B2     		uxth	r2, r2
 3810 0148 1A83     		strh	r2, [r3, #24]	@ movhi
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3811              		.loc 1 1947 18
 3812 014a 7B68     		ldr	r3, [r7, #4]
 3813 014c 2022     		movs	r2, #32
 3814 014e DA67     		str	r2, [r3, #124]
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3815              		.loc 1 1948 24
 3816 0150 7B68     		ldr	r3, [r7, #4]
 3817 0152 0022     		movs	r2, #0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 124


 3818 0154 1A66     		str	r2, [r3, #96]
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3819              		.loc 1 1950 10
 3820 0156 0023     		movs	r3, #0
 3821              	.L207:
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3822              		.loc 1 1951 1
 3823 0158 1846     		mov	r0, r3
 3824 015a 6837     		adds	r7, r7, #104
 3825              	.LCFI98:
 3826              		.cfi_def_cfa_offset 8
 3827 015c BD46     		mov	sp, r7
 3828              	.LCFI99:
 3829              		.cfi_def_cfa_register 13
 3830              		@ sp needed
 3831 015e 80BD     		pop	{r7, pc}
 3832              		.cfi_endproc
 3833              	.LFE310:
 3835              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3836              		.align	1
 3837              		.global	HAL_UART_Abort_IT
 3838              		.syntax unified
 3839              		.thumb
 3840              		.thumb_func
 3841              		.fpu fpv4-sp-d16
 3843              	HAL_UART_Abort_IT:
 3844              	.LFB311:
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3845              		.loc 1 1968 1
 3846              		.cfi_startproc
 3847              		@ args = 0, pretend = 0, frame = 136
 3848              		@ frame_needed = 1, uses_anonymous_args = 0
 3849 0000 80B5     		push	{r7, lr}
 3850              	.LCFI100:
 3851              		.cfi_def_cfa_offset 8
 3852              		.cfi_offset 7, -8
 3853              		.cfi_offset 14, -4
 3854 0002 A2B0     		sub	sp, sp, #136
 3855              	.LCFI101:
 3856              		.cfi_def_cfa_offset 144
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 125


 3857 0004 00AF     		add	r7, sp, #0
 3858              	.LCFI102:
 3859              		.cfi_def_cfa_register 7
 3860 0006 7860     		str	r0, [r7, #4]
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3861              		.loc 1 1969 12
 3862 0008 0123     		movs	r3, #1
 3863 000a C7F88430 		str	r3, [r7, #132]
 3864              	.L211:
 3865              	.LBB534:
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEI
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                           USART_CR1_TXEIE_TXFNFIE));
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 3866              		.loc 1 1977 3 discriminator 1
 3867 000e 7B68     		ldr	r3, [r7, #4]
 3868 0010 1B68     		ldr	r3, [r3]
 3869 0012 3B66     		str	r3, [r7, #96]
 3870              	.LBB535:
 3871              	.LBB536:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3872              		.loc 2 1155 4 discriminator 1
 3873 0014 3B6E     		ldr	r3, [r7, #96]
 3874              		.syntax unified
 3875              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3876 0016 53E8003F 		ldrex r3, [r3]
 3877              	@ 0 "" 2
 3878              		.thumb
 3879              		.syntax unified
 3880 001a FB65     		str	r3, [r7, #92]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3881              		.loc 2 1156 10 discriminator 1
 3882 001c FB6D     		ldr	r3, [r7, #92]
 3883              	.LBE536:
 3884              	.LBE535:
 3885              		.loc 1 1977 3 discriminator 1
 3886 001e 23F4F073 		bic	r3, r3, #480
 3887 0022 C7F88030 		str	r3, [r7, #128]
 3888 0026 7B68     		ldr	r3, [r7, #4]
 3889 0028 1B68     		ldr	r3, [r3]
 3890 002a 1A46     		mov	r2, r3
 3891 002c D7F88030 		ldr	r3, [r7, #128]
 3892 0030 FB66     		str	r3, [r7, #108]
 3893 0032 BA66     		str	r2, [r7, #104]
 3894              	.LBB537:
 3895              	.LBB538:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3896              		.loc 2 1206 4 discriminator 1
 3897 0034 B96E     		ldr	r1, [r7, #104]
 3898 0036 FA6E     		ldr	r2, [r7, #108]
 3899              		.syntax unified
 3900              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3901 0038 41E80023 		strex r3, r2, [r1]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 126


 3902              	@ 0 "" 2
 3903              		.thumb
 3904              		.syntax unified
 3905 003c 7B66     		str	r3, [r7, #100]
 3906              		.loc 2 1207 10 discriminator 1
 3907 003e 7B6E     		ldr	r3, [r7, #100]
 3908              	.LBE538:
 3909              	.LBE537:
 3910              		.loc 1 1977 3 discriminator 1
 3911 0040 002B     		cmp	r3, #0
 3912 0042 E4D1     		bne	.L211
 3913              	.L214:
 3914              	.LBE534:
 3915              	.LBB539:
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3916              		.loc 1 1978 3 discriminator 1
 3917 0044 7B68     		ldr	r3, [r7, #4]
 3918 0046 1B68     		ldr	r3, [r3]
 3919 0048 0833     		adds	r3, r3, #8
 3920 004a FB64     		str	r3, [r7, #76]
 3921              	.LBB540:
 3922              	.LBB541:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3923              		.loc 2 1155 4 discriminator 1
 3924 004c FB6C     		ldr	r3, [r7, #76]
 3925              		.syntax unified
 3926              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3927 004e 53E8003F 		ldrex r3, [r3]
 3928              	@ 0 "" 2
 3929              		.thumb
 3930              		.syntax unified
 3931 0052 BB64     		str	r3, [r7, #72]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3932              		.loc 2 1156 10 discriminator 1
 3933 0054 BB6C     		ldr	r3, [r7, #72]
 3934              	.LBE541:
 3935              	.LBE540:
 3936              		.loc 1 1978 3 discriminator 1
 3937 0056 23F00103 		bic	r3, r3, #1
 3938 005a FB67     		str	r3, [r7, #124]
 3939 005c 7B68     		ldr	r3, [r7, #4]
 3940 005e 1B68     		ldr	r3, [r3]
 3941 0060 0833     		adds	r3, r3, #8
 3942 0062 FA6F     		ldr	r2, [r7, #124]
 3943 0064 BA65     		str	r2, [r7, #88]
 3944 0066 7B65     		str	r3, [r7, #84]
 3945              	.LBB542:
 3946              	.LBB543:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3947              		.loc 2 1206 4 discriminator 1
 3948 0068 796D     		ldr	r1, [r7, #84]
 3949 006a BA6D     		ldr	r2, [r7, #88]
 3950              		.syntax unified
 3951              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3952 006c 41E80023 		strex r3, r2, [r1]
 3953              	@ 0 "" 2
 3954              		.thumb
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 127


 3955              		.syntax unified
 3956 0070 3B65     		str	r3, [r7, #80]
 3957              		.loc 2 1207 10 discriminator 1
 3958 0072 3B6D     		ldr	r3, [r7, #80]
 3959              	.LBE543:
 3960              	.LBE542:
 3961              		.loc 1 1978 3 discriminator 1
 3962 0074 002B     		cmp	r3, #0
 3963 0076 E5D1     		bne	.L214
 3964              	.LBE539:
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3965              		.loc 1 1982 12
 3966 0078 7B68     		ldr	r3, [r7, #4]
 3967 007a 1B6E     		ldr	r3, [r3, #96]
 3968              		.loc 1 1982 6
 3969 007c 012B     		cmp	r3, #1
 3970 007e 18D1     		bne	.L215
 3971              	.L218:
 3972              	.LBB544:
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3973              		.loc 1 1984 5 discriminator 1
 3974 0080 7B68     		ldr	r3, [r7, #4]
 3975 0082 1B68     		ldr	r3, [r3]
 3976 0084 BB63     		str	r3, [r7, #56]
 3977              	.LBB545:
 3978              	.LBB546:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3979              		.loc 2 1155 4 discriminator 1
 3980 0086 BB6B     		ldr	r3, [r7, #56]
 3981              		.syntax unified
 3982              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3983 0088 53E8003F 		ldrex r3, [r3]
 3984              	@ 0 "" 2
 3985              		.thumb
 3986              		.syntax unified
 3987 008c 7B63     		str	r3, [r7, #52]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3988              		.loc 2 1156 10 discriminator 1
 3989 008e 7B6B     		ldr	r3, [r7, #52]
 3990              	.LBE546:
 3991              	.LBE545:
 3992              		.loc 1 1984 5 discriminator 1
 3993 0090 23F01003 		bic	r3, r3, #16
 3994 0094 BB67     		str	r3, [r7, #120]
 3995 0096 7B68     		ldr	r3, [r7, #4]
 3996 0098 1B68     		ldr	r3, [r3]
 3997 009a 1A46     		mov	r2, r3
 3998 009c BB6F     		ldr	r3, [r7, #120]
 3999 009e 7B64     		str	r3, [r7, #68]
 4000 00a0 3A64     		str	r2, [r7, #64]
 4001              	.LBB547:
 4002              	.LBB548:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 128


 4003              		.loc 2 1206 4 discriminator 1
 4004 00a2 396C     		ldr	r1, [r7, #64]
 4005 00a4 7A6C     		ldr	r2, [r7, #68]
 4006              		.syntax unified
 4007              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4008 00a6 41E80023 		strex r3, r2, [r1]
 4009              	@ 0 "" 2
 4010              		.thumb
 4011              		.syntax unified
 4012 00aa FB63     		str	r3, [r7, #60]
 4013              		.loc 2 1207 10 discriminator 1
 4014 00ac FB6B     		ldr	r3, [r7, #60]
 4015              	.LBE548:
 4016              	.LBE547:
 4017              		.loc 1 1984 5 discriminator 1
 4018 00ae 002B     		cmp	r3, #0
 4019 00b0 E6D1     		bne	.L218
 4020              	.L215:
 4021              	.LBE544:
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 4022              		.loc 1 1990 12
 4023 00b2 7B68     		ldr	r3, [r7, #4]
 4024 00b4 DB6E     		ldr	r3, [r3, #108]
 4025              		.loc 1 1990 6
 4026 00b6 002B     		cmp	r3, #0
 4027 00b8 0FD0     		beq	.L219
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4028              		.loc 1 1994 9
 4029 00ba 7B68     		ldr	r3, [r7, #4]
 4030 00bc 1B68     		ldr	r3, [r3]
 4031 00be 9B68     		ldr	r3, [r3, #8]
 4032 00c0 03F08003 		and	r3, r3, #128
 4033              		.loc 1 1994 8
 4034 00c4 802B     		cmp	r3, #128
 4035 00c6 04D1     		bne	.L220
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 4036              		.loc 1 1996 12
 4037 00c8 7B68     		ldr	r3, [r7, #4]
 4038 00ca DB6E     		ldr	r3, [r3, #108]
 4039              		.loc 1 1996 40
 4040 00cc 5E4A     		ldr	r2, .L235
 4041 00ce 9A63     		str	r2, [r3, #56]
 4042 00d0 03E0     		b	.L219
 4043              	.L220:
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 129


 4044              		.loc 1 2000 12
 4045 00d2 7B68     		ldr	r3, [r7, #4]
 4046 00d4 DB6E     		ldr	r3, [r3, #108]
 4047              		.loc 1 2000 40
 4048 00d6 0022     		movs	r2, #0
 4049 00d8 9A63     		str	r2, [r3, #56]
 4050              	.L219:
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 4051              		.loc 1 2004 12
 4052 00da 7B68     		ldr	r3, [r7, #4]
 4053 00dc 1B6F     		ldr	r3, [r3, #112]
 4054              		.loc 1 2004 6
 4055 00de 002B     		cmp	r3, #0
 4056 00e0 0FD0     		beq	.L221
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4057              		.loc 1 2008 9
 4058 00e2 7B68     		ldr	r3, [r7, #4]
 4059 00e4 1B68     		ldr	r3, [r3]
 4060 00e6 9B68     		ldr	r3, [r3, #8]
 4061 00e8 03F04003 		and	r3, r3, #64
 4062              		.loc 1 2008 8
 4063 00ec 402B     		cmp	r3, #64
 4064 00ee 04D1     		bne	.L222
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 4065              		.loc 1 2010 12
 4066 00f0 7B68     		ldr	r3, [r7, #4]
 4067 00f2 1B6F     		ldr	r3, [r3, #112]
 4068              		.loc 1 2010 40
 4069 00f4 554A     		ldr	r2, .L235+4
 4070 00f6 9A63     		str	r2, [r3, #56]
 4071 00f8 03E0     		b	.L221
 4072              	.L222:
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4073              		.loc 1 2014 12
 4074 00fa 7B68     		ldr	r3, [r7, #4]
 4075 00fc 1B6F     		ldr	r3, [r3, #112]
 4076              		.loc 1 2014 40
 4077 00fe 0022     		movs	r2, #0
 4078 0100 9A63     		str	r2, [r3, #56]
 4079              	.L221:
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4080              		.loc 1 2019 7
 4081 0102 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 130


 4082 0104 1B68     		ldr	r3, [r3]
 4083 0106 9B68     		ldr	r3, [r3, #8]
 4084 0108 03F08003 		and	r3, r3, #128
 4085              		.loc 1 2019 6
 4086 010c 802B     		cmp	r3, #128
 4087 010e 2DD1     		bne	.L223
 4088              	.L226:
 4089              	.LBB549:
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4090              		.loc 1 2022 5 discriminator 1
 4091 0110 7B68     		ldr	r3, [r7, #4]
 4092 0112 1B68     		ldr	r3, [r3]
 4093 0114 0833     		adds	r3, r3, #8
 4094 0116 7B62     		str	r3, [r7, #36]
 4095              	.LBB550:
 4096              	.LBB551:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4097              		.loc 2 1155 4 discriminator 1
 4098 0118 7B6A     		ldr	r3, [r7, #36]
 4099              		.syntax unified
 4100              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4101 011a 53E8003F 		ldrex r3, [r3]
 4102              	@ 0 "" 2
 4103              		.thumb
 4104              		.syntax unified
 4105 011e 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4106              		.loc 2 1156 10 discriminator 1
 4107 0120 3B6A     		ldr	r3, [r7, #32]
 4108              	.LBE551:
 4109              	.LBE550:
 4110              		.loc 1 2022 5 discriminator 1
 4111 0122 23F08003 		bic	r3, r3, #128
 4112 0126 7B67     		str	r3, [r7, #116]
 4113 0128 7B68     		ldr	r3, [r7, #4]
 4114 012a 1B68     		ldr	r3, [r3]
 4115 012c 0833     		adds	r3, r3, #8
 4116 012e 7A6F     		ldr	r2, [r7, #116]
 4117 0130 3A63     		str	r2, [r7, #48]
 4118 0132 FB62     		str	r3, [r7, #44]
 4119              	.LBB552:
 4120              	.LBB553:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4121              		.loc 2 1206 4 discriminator 1
 4122 0134 F96A     		ldr	r1, [r7, #44]
 4123 0136 3A6B     		ldr	r2, [r7, #48]
 4124              		.syntax unified
 4125              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4126 0138 41E80023 		strex r3, r2, [r1]
 4127              	@ 0 "" 2
 4128              		.thumb
 4129              		.syntax unified
 4130 013c BB62     		str	r3, [r7, #40]
 4131              		.loc 2 1207 10 discriminator 1
 4132 013e BB6A     		ldr	r3, [r7, #40]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 131


 4133              	.LBE553:
 4134              	.LBE552:
 4135              		.loc 1 2022 5 discriminator 1
 4136 0140 002B     		cmp	r3, #0
 4137 0142 E5D1     		bne	.L226
 4138              	.LBE549:
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4139              		.loc 1 2025 14
 4140 0144 7B68     		ldr	r3, [r7, #4]
 4141 0146 DB6E     		ldr	r3, [r3, #108]
 4142              		.loc 1 2025 8
 4143 0148 002B     		cmp	r3, #0
 4144 014a 0FD0     		beq	.L223
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4145              		.loc 1 2031 11
 4146 014c 7B68     		ldr	r3, [r7, #4]
 4147 014e DB6E     		ldr	r3, [r3, #108]
 4148 0150 1846     		mov	r0, r3
 4149 0152 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4150 0156 0346     		mov	r3, r0
 4151              		.loc 1 2031 10
 4152 0158 002B     		cmp	r3, #0
 4153 015a 04D0     		beq	.L227
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 4154              		.loc 1 2033 14
 4155 015c 7B68     		ldr	r3, [r7, #4]
 4156 015e DB6E     		ldr	r3, [r3, #108]
 4157              		.loc 1 2033 42
 4158 0160 0022     		movs	r2, #0
 4159 0162 9A63     		str	r2, [r3, #56]
 4160 0164 02E0     		b	.L223
 4161              	.L227:
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
 4162              		.loc 1 2037 19
 4163 0166 0023     		movs	r3, #0
 4164 0168 C7F88430 		str	r3, [r7, #132]
 4165              	.L223:
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4166              		.loc 1 2043 7
 4167 016c 7B68     		ldr	r3, [r7, #4]
 4168 016e 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 132


 4169 0170 9B68     		ldr	r3, [r3, #8]
 4170 0172 03F04003 		and	r3, r3, #64
 4171              		.loc 1 2043 6
 4172 0176 402B     		cmp	r3, #64
 4173 0178 30D1     		bne	.L228
 4174              	.L231:
 4175              	.LBB554:
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4176              		.loc 1 2046 5 discriminator 1
 4177 017a 7B68     		ldr	r3, [r7, #4]
 4178 017c 1B68     		ldr	r3, [r3]
 4179 017e 0833     		adds	r3, r3, #8
 4180 0180 3B61     		str	r3, [r7, #16]
 4181              	.LBB555:
 4182              	.LBB556:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4183              		.loc 2 1155 4 discriminator 1
 4184 0182 3B69     		ldr	r3, [r7, #16]
 4185              		.syntax unified
 4186              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4187 0184 53E8003F 		ldrex r3, [r3]
 4188              	@ 0 "" 2
 4189              		.thumb
 4190              		.syntax unified
 4191 0188 FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4192              		.loc 2 1156 10 discriminator 1
 4193 018a FB68     		ldr	r3, [r7, #12]
 4194              	.LBE556:
 4195              	.LBE555:
 4196              		.loc 1 2046 5 discriminator 1
 4197 018c 23F04003 		bic	r3, r3, #64
 4198 0190 3B67     		str	r3, [r7, #112]
 4199 0192 7B68     		ldr	r3, [r7, #4]
 4200 0194 1B68     		ldr	r3, [r3]
 4201 0196 0833     		adds	r3, r3, #8
 4202 0198 3A6F     		ldr	r2, [r7, #112]
 4203 019a FA61     		str	r2, [r7, #28]
 4204 019c BB61     		str	r3, [r7, #24]
 4205              	.LBB557:
 4206              	.LBB558:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4207              		.loc 2 1206 4 discriminator 1
 4208 019e B969     		ldr	r1, [r7, #24]
 4209 01a0 FA69     		ldr	r2, [r7, #28]
 4210              		.syntax unified
 4211              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4212 01a2 41E80023 		strex r3, r2, [r1]
 4213              	@ 0 "" 2
 4214              		.thumb
 4215              		.syntax unified
 4216 01a6 7B61     		str	r3, [r7, #20]
 4217              		.loc 2 1207 10 discriminator 1
 4218 01a8 7B69     		ldr	r3, [r7, #20]
 4219              	.LBE558:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 133


 4220              	.LBE557:
 4221              		.loc 1 2046 5 discriminator 1
 4222 01aa 002B     		cmp	r3, #0
 4223 01ac E5D1     		bne	.L231
 4224              	.LBE554:
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4225              		.loc 1 2049 14
 4226 01ae 7B68     		ldr	r3, [r7, #4]
 4227 01b0 1B6F     		ldr	r3, [r3, #112]
 4228              		.loc 1 2049 8
 4229 01b2 002B     		cmp	r3, #0
 4230 01b4 12D0     		beq	.L228
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4231              		.loc 1 2055 11
 4232 01b6 7B68     		ldr	r3, [r7, #4]
 4233 01b8 1B6F     		ldr	r3, [r3, #112]
 4234 01ba 1846     		mov	r0, r3
 4235 01bc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4236 01c0 0346     		mov	r3, r0
 4237              		.loc 1 2055 10
 4238 01c2 002B     		cmp	r3, #0
 4239 01c4 07D0     		beq	.L232
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 4240              		.loc 1 2057 14
 4241 01c6 7B68     		ldr	r3, [r7, #4]
 4242 01c8 1B6F     		ldr	r3, [r3, #112]
 4243              		.loc 1 2057 42
 4244 01ca 0022     		movs	r2, #0
 4245 01cc 9A63     		str	r2, [r3, #56]
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 4246              		.loc 1 2058 19
 4247 01ce 0123     		movs	r3, #1
 4248 01d0 C7F88430 		str	r3, [r7, #132]
 4249 01d4 02E0     		b	.L228
 4250              	.L232:
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
 4251              		.loc 1 2062 19
 4252 01d6 0023     		movs	r3, #0
 4253 01d8 C7F88430 		str	r3, [r7, #132]
 4254              	.L228:
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 134


 4255              		.loc 1 2068 6
 4256 01dc D7F88430 		ldr	r3, [r7, #132]
 4257 01e0 012B     		cmp	r3, #1
 4258 01e2 2BD1     		bne	.L233
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4259              		.loc 1 2071 24
 4260 01e4 7B68     		ldr	r3, [r7, #4]
 4261 01e6 0022     		movs	r2, #0
 4262 01e8 A3F85220 		strh	r2, [r3, #82]	@ movhi
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4263              		.loc 1 2072 24
 4264 01ec 7B68     		ldr	r3, [r7, #4]
 4265 01ee 0022     		movs	r2, #0
 4266 01f0 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
 4267              		.loc 1 2075 18
 4268 01f4 7B68     		ldr	r3, [r7, #4]
 4269 01f6 0022     		movs	r2, #0
 4270 01f8 5A66     		str	r2, [r3, #100]
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 4271              		.loc 1 2076 18
 4272 01fa 7B68     		ldr	r3, [r7, #4]
 4273 01fc 0022     		movs	r2, #0
 4274 01fe 9A66     		str	r2, [r3, #104]
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4275              		.loc 1 2079 22
 4276 0200 7B68     		ldr	r3, [r7, #4]
 4277 0202 0022     		movs	r2, #0
 4278 0204 C3F88020 		str	r2, [r3, #128]
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 4279              		.loc 1 2082 5
 4280 0208 7B68     		ldr	r3, [r7, #4]
 4281 020a 1B68     		ldr	r3, [r3]
 4282 020c 0F22     		movs	r2, #15
 4283 020e 1A62     		str	r2, [r3, #32]
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Discard the received data */
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4284              		.loc 1 2093 5
 4285 0210 7B68     		ldr	r3, [r7, #4]
 4286 0212 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 135


 4287 0214 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4288 0216 9AB2     		uxth	r2, r3
 4289 0218 7B68     		ldr	r3, [r7, #4]
 4290 021a 1B68     		ldr	r3, [r3]
 4291 021c 42F00802 		orr	r2, r2, #8
 4292 0220 92B2     		uxth	r2, r2
 4293 0222 1A83     		strh	r2, [r3, #24]	@ movhi
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 4294              		.loc 1 2096 20
 4295 0224 7B68     		ldr	r3, [r7, #4]
 4296 0226 2022     		movs	r2, #32
 4297 0228 9A67     		str	r2, [r3, #120]
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4298              		.loc 1 2097 20
 4299 022a 7B68     		ldr	r3, [r7, #4]
 4300 022c 2022     		movs	r2, #32
 4301 022e DA67     		str	r2, [r3, #124]
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4302              		.loc 1 2098 26
 4303 0230 7B68     		ldr	r3, [r7, #4]
 4304 0232 0022     		movs	r2, #0
 4305 0234 1A66     		str	r2, [r3, #96]
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 4306              		.loc 1 2106 5
 4307 0236 7868     		ldr	r0, [r7, #4]
 4308 0238 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4309              	.L233:
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4310              		.loc 1 2110 10
 4311 023c 0023     		movs	r3, #0
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4312              		.loc 1 2111 1
 4313 023e 1846     		mov	r0, r3
 4314 0240 8837     		adds	r7, r7, #136
 4315              	.LCFI103:
 4316              		.cfi_def_cfa_offset 8
 4317 0242 BD46     		mov	sp, r7
 4318              	.LCFI104:
 4319              		.cfi_def_cfa_register 13
 4320              		@ sp needed
 4321 0244 80BD     		pop	{r7, pc}
 4322              	.L236:
 4323 0246 00BF     		.align	2
 4324              	.L235:
 4325 0248 00000000 		.word	UART_DMATxAbortCallback
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 136


 4326 024c 00000000 		.word	UART_DMARxAbortCallback
 4327              		.cfi_endproc
 4328              	.LFE311:
 4330              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4331              		.align	1
 4332              		.global	HAL_UART_AbortTransmit_IT
 4333              		.syntax unified
 4334              		.thumb
 4335              		.thumb_func
 4336              		.fpu fpv4-sp-d16
 4338              	HAL_UART_AbortTransmit_IT:
 4339              	.LFB312:
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4340              		.loc 1 2128 1
 4341              		.cfi_startproc
 4342              		@ args = 0, pretend = 0, frame = 56
 4343              		@ frame_needed = 1, uses_anonymous_args = 0
 4344 0000 80B5     		push	{r7, lr}
 4345              	.LCFI105:
 4346              		.cfi_def_cfa_offset 8
 4347              		.cfi_offset 7, -8
 4348              		.cfi_offset 14, -4
 4349 0002 8EB0     		sub	sp, sp, #56
 4350              	.LCFI106:
 4351              		.cfi_def_cfa_offset 64
 4352 0004 00AF     		add	r7, sp, #0
 4353              	.LCFI107:
 4354              		.cfi_def_cfa_register 7
 4355 0006 7860     		str	r0, [r7, #4]
 4356              	.L240:
 4357              	.LBB559:
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4358              		.loc 1 2134 3 discriminator 1
 4359 0008 7B68     		ldr	r3, [r7, #4]
 4360 000a 1B68     		ldr	r3, [r3]
 4361 000c 3B62     		str	r3, [r7, #32]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 137


 4362              	.LBB560:
 4363              	.LBB561:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4364              		.loc 2 1155 4 discriminator 1
 4365 000e 3B6A     		ldr	r3, [r7, #32]
 4366              		.syntax unified
 4367              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4368 0010 53E8003F 		ldrex r3, [r3]
 4369              	@ 0 "" 2
 4370              		.thumb
 4371              		.syntax unified
 4372 0014 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4373              		.loc 2 1156 10 discriminator 1
 4374 0016 FB69     		ldr	r3, [r7, #28]
 4375              	.LBE561:
 4376              	.LBE560:
 4377              		.loc 1 2134 3 discriminator 1
 4378 0018 23F0C003 		bic	r3, r3, #192
 4379 001c 7B63     		str	r3, [r7, #52]
 4380 001e 7B68     		ldr	r3, [r7, #4]
 4381 0020 1B68     		ldr	r3, [r3]
 4382 0022 1A46     		mov	r2, r3
 4383 0024 7B6B     		ldr	r3, [r7, #52]
 4384 0026 FB62     		str	r3, [r7, #44]
 4385 0028 BA62     		str	r2, [r7, #40]
 4386              	.LBB562:
 4387              	.LBB563:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4388              		.loc 2 1206 4 discriminator 1
 4389 002a B96A     		ldr	r1, [r7, #40]
 4390 002c FA6A     		ldr	r2, [r7, #44]
 4391              		.syntax unified
 4392              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4393 002e 41E80023 		strex r3, r2, [r1]
 4394              	@ 0 "" 2
 4395              		.thumb
 4396              		.syntax unified
 4397 0032 7B62     		str	r3, [r7, #36]
 4398              		.loc 2 1207 10 discriminator 1
 4399 0034 7B6A     		ldr	r3, [r7, #36]
 4400              	.LBE563:
 4401              	.LBE562:
 4402              		.loc 1 2134 3 discriminator 1
 4403 0036 002B     		cmp	r3, #0
 4404 0038 E6D1     		bne	.L240
 4405              	.LBE559:
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Tx channel if enabled */
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4406              		.loc 1 2138 7
 4407 003a 7B68     		ldr	r3, [r7, #4]
 4408 003c 1B68     		ldr	r3, [r3]
 4409 003e 9B68     		ldr	r3, [r3, #8]
 4410 0040 03F08003 		and	r3, r3, #128
 4411              		.loc 1 2138 6
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 138


 4412 0044 802B     		cmp	r3, #128
 4413 0046 3FD1     		bne	.L241
 4414              	.L244:
 4415              	.LBB564:
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request if enabled */
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4416              		.loc 1 2141 5 discriminator 1
 4417 0048 7B68     		ldr	r3, [r7, #4]
 4418 004a 1B68     		ldr	r3, [r3]
 4419 004c 0833     		adds	r3, r3, #8
 4420 004e FB60     		str	r3, [r7, #12]
 4421              	.LBB565:
 4422              	.LBB566:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4423              		.loc 2 1155 4 discriminator 1
 4424 0050 FB68     		ldr	r3, [r7, #12]
 4425              		.syntax unified
 4426              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4427 0052 53E8003F 		ldrex r3, [r3]
 4428              	@ 0 "" 2
 4429              		.thumb
 4430              		.syntax unified
 4431 0056 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4432              		.loc 2 1156 10 discriminator 1
 4433 0058 BB68     		ldr	r3, [r7, #8]
 4434              	.LBE566:
 4435              	.LBE565:
 4436              		.loc 1 2141 5 discriminator 1
 4437 005a 23F08003 		bic	r3, r3, #128
 4438 005e 3B63     		str	r3, [r7, #48]
 4439 0060 7B68     		ldr	r3, [r7, #4]
 4440 0062 1B68     		ldr	r3, [r3]
 4441 0064 0833     		adds	r3, r3, #8
 4442 0066 3A6B     		ldr	r2, [r7, #48]
 4443 0068 BA61     		str	r2, [r7, #24]
 4444 006a 7B61     		str	r3, [r7, #20]
 4445              	.LBB567:
 4446              	.LBB568:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4447              		.loc 2 1206 4 discriminator 1
 4448 006c 7969     		ldr	r1, [r7, #20]
 4449 006e BA69     		ldr	r2, [r7, #24]
 4450              		.syntax unified
 4451              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4452 0070 41E80023 		strex r3, r2, [r1]
 4453              	@ 0 "" 2
 4454              		.thumb
 4455              		.syntax unified
 4456 0074 3B61     		str	r3, [r7, #16]
 4457              		.loc 2 1207 10 discriminator 1
 4458 0076 3B69     		ldr	r3, [r7, #16]
 4459              	.LBE568:
 4460              	.LBE567:
 4461              		.loc 1 2141 5 discriminator 1
 4462 0078 002B     		cmp	r3, #0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 139


 4463 007a E5D1     		bne	.L244
 4464              	.LBE564:
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4465              		.loc 1 2144 14
 4466 007c 7B68     		ldr	r3, [r7, #4]
 4467 007e DB6E     		ldr	r3, [r3, #108]
 4468              		.loc 1 2144 8
 4469 0080 002B     		cmp	r3, #0
 4470 0082 13D0     		beq	.L245
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 4471              		.loc 1 2148 12
 4472 0084 7B68     		ldr	r3, [r7, #4]
 4473 0086 DB6E     		ldr	r3, [r3, #108]
 4474              		.loc 1 2148 40
 4475 0088 184A     		ldr	r2, .L248
 4476 008a 9A63     		str	r2, [r3, #56]
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4477              		.loc 1 2151 11
 4478 008c 7B68     		ldr	r3, [r7, #4]
 4479 008e DB6E     		ldr	r3, [r3, #108]
 4480 0090 1846     		mov	r0, r3
 4481 0092 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4482 0096 0346     		mov	r3, r0
 4483              		.loc 1 2151 10
 4484 0098 002B     		cmp	r3, #0
 4485 009a 22D0     		beq	.L246
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 4486              		.loc 1 2154 14
 4487 009c 7B68     		ldr	r3, [r7, #4]
 4488 009e DB6E     		ldr	r3, [r3, #108]
 4489              		.loc 1 2154 22
 4490 00a0 9B6B     		ldr	r3, [r3, #56]
 4491              		.loc 1 2154 47
 4492 00a2 7A68     		ldr	r2, [r7, #4]
 4493 00a4 D26E     		ldr	r2, [r2, #108]
 4494              		.loc 1 2154 9
 4495 00a6 1046     		mov	r0, r2
 4496 00a8 9847     		blx	r3
 4497              	.LVL0:
 4498 00aa 1AE0     		b	.L246
 4499              	.L245:
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U;
 4500              		.loc 1 2160 26
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 140


 4501 00ac 7B68     		ldr	r3, [r7, #4]
 4502 00ae 0022     		movs	r2, #0
 4503 00b0 A3F85220 		strh	r2, [r3, #82]	@ movhi
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
 4504              		.loc 1 2163 20
 4505 00b4 7B68     		ldr	r3, [r7, #4]
 4506 00b6 0022     		movs	r2, #0
 4507 00b8 9A66     		str	r2, [r3, #104]
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4508              		.loc 1 2166 21
 4509 00ba 7B68     		ldr	r3, [r7, #4]
 4510 00bc 2022     		movs	r2, #32
 4511 00be 9A67     		str	r2, [r3, #120]
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 4512              		.loc 1 2174 7
 4513 00c0 7868     		ldr	r0, [r7, #4]
 4514 00c2 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4515 00c6 0CE0     		b	.L246
 4516              	.L241:
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4517              		.loc 1 2181 24
 4518 00c8 7B68     		ldr	r3, [r7, #4]
 4519 00ca 0022     		movs	r2, #0
 4520 00cc A3F85220 		strh	r2, [r3, #82]	@ movhi
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 4521              		.loc 1 2184 18
 4522 00d0 7B68     		ldr	r3, [r7, #4]
 4523 00d2 0022     		movs	r2, #0
 4524 00d4 9A66     		str	r2, [r3, #104]
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 141


2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4525              		.loc 1 2195 19
 4526 00d6 7B68     		ldr	r3, [r7, #4]
 4527 00d8 2022     		movs	r2, #32
 4528 00da 9A67     		str	r2, [r3, #120]
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 4529              		.loc 1 2203 5
 4530 00dc 7868     		ldr	r0, [r7, #4]
 4531 00de FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4532              	.L246:
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4533              		.loc 1 2207 10
 4534 00e2 0023     		movs	r3, #0
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4535              		.loc 1 2208 1
 4536 00e4 1846     		mov	r0, r3
 4537 00e6 3837     		adds	r7, r7, #56
 4538              	.LCFI108:
 4539              		.cfi_def_cfa_offset 8
 4540 00e8 BD46     		mov	sp, r7
 4541              	.LCFI109:
 4542              		.cfi_def_cfa_register 13
 4543              		@ sp needed
 4544 00ea 80BD     		pop	{r7, pc}
 4545              	.L249:
 4546              		.align	2
 4547              	.L248:
 4548 00ec 00000000 		.word	UART_DMATxOnlyAbortCallback
 4549              		.cfi_endproc
 4550              	.LFE312:
 4552              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4553              		.align	1
 4554              		.global	HAL_UART_AbortReceive_IT
 4555              		.syntax unified
 4556              		.thumb
 4557              		.thumb_func
 4558              		.fpu fpv4-sp-d16
 4560              	HAL_UART_AbortReceive_IT:
 4561              	.LFB313:
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 142


2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4562              		.loc 1 2225 1
 4563              		.cfi_startproc
 4564              		@ args = 0, pretend = 0, frame = 104
 4565              		@ frame_needed = 1, uses_anonymous_args = 0
 4566 0000 80B5     		push	{r7, lr}
 4567              	.LCFI110:
 4568              		.cfi_def_cfa_offset 8
 4569              		.cfi_offset 7, -8
 4570              		.cfi_offset 14, -4
 4571 0002 9AB0     		sub	sp, sp, #104
 4572              	.LCFI111:
 4573              		.cfi_def_cfa_offset 112
 4574 0004 00AF     		add	r7, sp, #0
 4575              	.LCFI112:
 4576              		.cfi_def_cfa_register 7
 4577 0006 7860     		str	r0, [r7, #4]
 4578              	.L253:
 4579              	.LBB569:
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4580              		.loc 1 2231 3 discriminator 1
 4581 0008 7B68     		ldr	r3, [r7, #4]
 4582 000a 1B68     		ldr	r3, [r3]
 4583 000c BB64     		str	r3, [r7, #72]
 4584              	.LBB570:
 4585              	.LBB571:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4586              		.loc 2 1155 4 discriminator 1
 4587 000e BB6C     		ldr	r3, [r7, #72]
 4588              		.syntax unified
 4589              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4590 0010 53E8003F 		ldrex r3, [r3]
 4591              	@ 0 "" 2
 4592              		.thumb
 4593              		.syntax unified
 4594 0014 7B64     		str	r3, [r7, #68]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4595              		.loc 2 1156 10 discriminator 1
 4596 0016 7B6C     		ldr	r3, [r7, #68]
 4597              	.LBE571:
 4598              	.LBE570:
 4599              		.loc 1 2231 3 discriminator 1
 4600 0018 23F49073 		bic	r3, r3, #288
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 143


 4601 001c 7B66     		str	r3, [r7, #100]
 4602 001e 7B68     		ldr	r3, [r7, #4]
 4603 0020 1B68     		ldr	r3, [r3]
 4604 0022 1A46     		mov	r2, r3
 4605 0024 7B6E     		ldr	r3, [r7, #100]
 4606 0026 7B65     		str	r3, [r7, #84]
 4607 0028 3A65     		str	r2, [r7, #80]
 4608              	.LBB572:
 4609              	.LBB573:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4610              		.loc 2 1206 4 discriminator 1
 4611 002a 396D     		ldr	r1, [r7, #80]
 4612 002c 7A6D     		ldr	r2, [r7, #84]
 4613              		.syntax unified
 4614              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4615 002e 41E80023 		strex r3, r2, [r1]
 4616              	@ 0 "" 2
 4617              		.thumb
 4618              		.syntax unified
 4619 0032 FB64     		str	r3, [r7, #76]
 4620              		.loc 2 1207 10 discriminator 1
 4621 0034 FB6C     		ldr	r3, [r7, #76]
 4622              	.LBE573:
 4623              	.LBE572:
 4624              		.loc 1 2231 3 discriminator 1
 4625 0036 002B     		cmp	r3, #0
 4626 0038 E6D1     		bne	.L253
 4627              	.L256:
 4628              	.LBE569:
 4629              	.LBB574:
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4630              		.loc 1 2232 3 discriminator 1
 4631 003a 7B68     		ldr	r3, [r7, #4]
 4632 003c 1B68     		ldr	r3, [r3]
 4633 003e 0833     		adds	r3, r3, #8
 4634 0040 7B63     		str	r3, [r7, #52]
 4635              	.LBB575:
 4636              	.LBB576:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4637              		.loc 2 1155 4 discriminator 1
 4638 0042 7B6B     		ldr	r3, [r7, #52]
 4639              		.syntax unified
 4640              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4641 0044 53E8003F 		ldrex r3, [r3]
 4642              	@ 0 "" 2
 4643              		.thumb
 4644              		.syntax unified
 4645 0048 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4646              		.loc 2 1156 10 discriminator 1
 4647 004a 3B6B     		ldr	r3, [r7, #48]
 4648              	.LBE576:
 4649              	.LBE575:
 4650              		.loc 1 2232 3 discriminator 1
 4651 004c 23F00103 		bic	r3, r3, #1
 4652 0050 3B66     		str	r3, [r7, #96]
 4653 0052 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 144


 4654 0054 1B68     		ldr	r3, [r3]
 4655 0056 0833     		adds	r3, r3, #8
 4656 0058 3A6E     		ldr	r2, [r7, #96]
 4657 005a 3A64     		str	r2, [r7, #64]
 4658 005c FB63     		str	r3, [r7, #60]
 4659              	.LBB577:
 4660              	.LBB578:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4661              		.loc 2 1206 4 discriminator 1
 4662 005e F96B     		ldr	r1, [r7, #60]
 4663 0060 3A6C     		ldr	r2, [r7, #64]
 4664              		.syntax unified
 4665              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4666 0062 41E80023 		strex r3, r2, [r1]
 4667              	@ 0 "" 2
 4668              		.thumb
 4669              		.syntax unified
 4670 0066 BB63     		str	r3, [r7, #56]
 4671              		.loc 2 1207 10 discriminator 1
 4672 0068 BB6B     		ldr	r3, [r7, #56]
 4673              	.LBE578:
 4674              	.LBE577:
 4675              		.loc 1 2232 3 discriminator 1
 4676 006a 002B     		cmp	r3, #0
 4677 006c E5D1     		bne	.L256
 4678              	.LBE574:
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4679              		.loc 1 2236 12
 4680 006e 7B68     		ldr	r3, [r7, #4]
 4681 0070 1B6E     		ldr	r3, [r3, #96]
 4682              		.loc 1 2236 6
 4683 0072 012B     		cmp	r3, #1
 4684 0074 18D1     		bne	.L257
 4685              	.L260:
 4686              	.LBB579:
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4687              		.loc 1 2238 5 discriminator 1
 4688 0076 7B68     		ldr	r3, [r7, #4]
 4689 0078 1B68     		ldr	r3, [r3]
 4690 007a 3B62     		str	r3, [r7, #32]
 4691              	.LBB580:
 4692              	.LBB581:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4693              		.loc 2 1155 4 discriminator 1
 4694 007c 3B6A     		ldr	r3, [r7, #32]
 4695              		.syntax unified
 4696              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4697 007e 53E8003F 		ldrex r3, [r3]
 4698              	@ 0 "" 2
 4699              		.thumb
 4700              		.syntax unified
 4701 0082 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 145


 4702              		.loc 2 1156 10 discriminator 1
 4703 0084 FB69     		ldr	r3, [r7, #28]
 4704              	.LBE581:
 4705              	.LBE580:
 4706              		.loc 1 2238 5 discriminator 1
 4707 0086 23F01003 		bic	r3, r3, #16
 4708 008a FB65     		str	r3, [r7, #92]
 4709 008c 7B68     		ldr	r3, [r7, #4]
 4710 008e 1B68     		ldr	r3, [r3]
 4711 0090 1A46     		mov	r2, r3
 4712 0092 FB6D     		ldr	r3, [r7, #92]
 4713 0094 FB62     		str	r3, [r7, #44]
 4714 0096 BA62     		str	r2, [r7, #40]
 4715              	.LBB582:
 4716              	.LBB583:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4717              		.loc 2 1206 4 discriminator 1
 4718 0098 B96A     		ldr	r1, [r7, #40]
 4719 009a FA6A     		ldr	r2, [r7, #44]
 4720              		.syntax unified
 4721              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4722 009c 41E80023 		strex r3, r2, [r1]
 4723              	@ 0 "" 2
 4724              		.thumb
 4725              		.syntax unified
 4726 00a0 7B62     		str	r3, [r7, #36]
 4727              		.loc 2 1207 10 discriminator 1
 4728 00a2 7B6A     		ldr	r3, [r7, #36]
 4729              	.LBE583:
 4730              	.LBE582:
 4731              		.loc 1 2238 5 discriminator 1
 4732 00a4 002B     		cmp	r3, #0
 4733 00a6 E6D1     		bne	.L260
 4734              	.L257:
 4735              	.LBE579:
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Abort the UART DMA Rx channel if enabled */
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4736              		.loc 1 2242 7
 4737 00a8 7B68     		ldr	r3, [r7, #4]
 4738 00aa 1B68     		ldr	r3, [r3]
 4739 00ac 9B68     		ldr	r3, [r3, #8]
 4740 00ae 03F04003 		and	r3, r3, #64
 4741              		.loc 1 2242 6
 4742 00b2 402B     		cmp	r3, #64
 4743 00b4 50D1     		bne	.L261
 4744              	.L264:
 4745              	.LBB584:
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request if enabled */
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4746              		.loc 1 2245 5 discriminator 1
 4747 00b6 7B68     		ldr	r3, [r7, #4]
 4748 00b8 1B68     		ldr	r3, [r3]
 4749 00ba 0833     		adds	r3, r3, #8
 4750 00bc FB60     		str	r3, [r7, #12]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 146


 4751              	.LBB585:
 4752              	.LBB586:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4753              		.loc 2 1155 4 discriminator 1
 4754 00be FB68     		ldr	r3, [r7, #12]
 4755              		.syntax unified
 4756              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4757 00c0 53E8003F 		ldrex r3, [r3]
 4758              	@ 0 "" 2
 4759              		.thumb
 4760              		.syntax unified
 4761 00c4 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4762              		.loc 2 1156 10 discriminator 1
 4763 00c6 BB68     		ldr	r3, [r7, #8]
 4764              	.LBE586:
 4765              	.LBE585:
 4766              		.loc 1 2245 5 discriminator 1
 4767 00c8 23F04003 		bic	r3, r3, #64
 4768 00cc BB65     		str	r3, [r7, #88]
 4769 00ce 7B68     		ldr	r3, [r7, #4]
 4770 00d0 1B68     		ldr	r3, [r3]
 4771 00d2 0833     		adds	r3, r3, #8
 4772 00d4 BA6D     		ldr	r2, [r7, #88]
 4773 00d6 BA61     		str	r2, [r7, #24]
 4774 00d8 7B61     		str	r3, [r7, #20]
 4775              	.LBB587:
 4776              	.LBB588:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4777              		.loc 2 1206 4 discriminator 1
 4778 00da 7969     		ldr	r1, [r7, #20]
 4779 00dc BA69     		ldr	r2, [r7, #24]
 4780              		.syntax unified
 4781              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4782 00de 41E80023 		strex r3, r2, [r1]
 4783              	@ 0 "" 2
 4784              		.thumb
 4785              		.syntax unified
 4786 00e2 3B61     		str	r3, [r7, #16]
 4787              		.loc 2 1207 10 discriminator 1
 4788 00e4 3B69     		ldr	r3, [r7, #16]
 4789              	.LBE588:
 4790              	.LBE587:
 4791              		.loc 1 2245 5 discriminator 1
 4792 00e6 002B     		cmp	r3, #0
 4793 00e8 E5D1     		bne	.L264
 4794              	.LBE584:
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4795              		.loc 1 2248 14
 4796 00ea 7B68     		ldr	r3, [r7, #4]
 4797 00ec 1B6F     		ldr	r3, [r3, #112]
 4798              		.loc 1 2248 8
 4799 00ee 002B     		cmp	r3, #0
 4800 00f0 13D0     		beq	.L265
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 147


2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 4801              		.loc 1 2252 12
 4802 00f2 7B68     		ldr	r3, [r7, #4]
 4803 00f4 1B6F     		ldr	r3, [r3, #112]
 4804              		.loc 1 2252 40
 4805 00f6 254A     		ldr	r2, .L268
 4806 00f8 9A63     		str	r2, [r3, #56]
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4807              		.loc 1 2255 11
 4808 00fa 7B68     		ldr	r3, [r7, #4]
 4809 00fc 1B6F     		ldr	r3, [r3, #112]
 4810 00fe 1846     		mov	r0, r3
 4811 0100 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4812 0104 0346     		mov	r3, r0
 4813              		.loc 1 2255 10
 4814 0106 002B     		cmp	r3, #0
 4815 0108 3AD0     		beq	.L266
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 4816              		.loc 1 2258 14
 4817 010a 7B68     		ldr	r3, [r7, #4]
 4818 010c 1B6F     		ldr	r3, [r3, #112]
 4819              		.loc 1 2258 22
 4820 010e 9B6B     		ldr	r3, [r3, #56]
 4821              		.loc 1 2258 47
 4822 0110 7A68     		ldr	r2, [r7, #4]
 4823 0112 126F     		ldr	r2, [r2, #112]
 4824              		.loc 1 2258 9
 4825 0114 1046     		mov	r0, r2
 4826 0116 9847     		blx	r3
 4827              	.LVL1:
 4828 0118 32E0     		b	.L266
 4829              	.L265:
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
 4830              		.loc 1 2264 26
 4831 011a 7B68     		ldr	r3, [r7, #4]
 4832 011c 0022     		movs	r2, #0
 4833 011e A3F85A20 		strh	r2, [r3, #90]	@ movhi
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 4834              		.loc 1 2267 25
 4835 0122 7B68     		ldr	r3, [r7, #4]
 4836 0124 0022     		movs	r2, #0
 4837 0126 5A65     		str	r2, [r3, #84]
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 148


2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 4838              		.loc 1 2270 7
 4839 0128 7B68     		ldr	r3, [r7, #4]
 4840 012a 1B68     		ldr	r3, [r3]
 4841 012c 0F22     		movs	r2, #15
 4842 012e 1A62     		str	r2, [r3, #32]
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Discard the received data */
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 4843              		.loc 1 2273 7
 4844 0130 7B68     		ldr	r3, [r7, #4]
 4845 0132 1B68     		ldr	r3, [r3]
 4846 0134 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4847 0136 9AB2     		uxth	r2, r3
 4848 0138 7B68     		ldr	r3, [r7, #4]
 4849 013a 1B68     		ldr	r3, [r3]
 4850 013c 42F00802 		orr	r2, r2, #8
 4851 0140 92B2     		uxth	r2, r2
 4852 0142 1A83     		strh	r2, [r3, #24]	@ movhi
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4853              		.loc 1 2276 22
 4854 0144 7B68     		ldr	r3, [r7, #4]
 4855 0146 2022     		movs	r2, #32
 4856 0148 DA67     		str	r2, [r3, #124]
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4857              		.loc 1 2277 28
 4858 014a 7B68     		ldr	r3, [r7, #4]
 4859 014c 0022     		movs	r2, #0
 4860 014e 1A66     		str	r2, [r3, #96]
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 4861              		.loc 1 2285 7
 4862 0150 7868     		ldr	r0, [r7, #4]
 4863 0152 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4864 0156 13E0     		b	.L266
 4865              	.L261:
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4866              		.loc 1 2292 24
 4867 0158 7B68     		ldr	r3, [r7, #4]
 4868 015a 0022     		movs	r2, #0
 4869 015c A3F85A20 		strh	r2, [r3, #90]	@ movhi
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 149


2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 4870              		.loc 1 2295 23
 4871 0160 7B68     		ldr	r3, [r7, #4]
 4872 0162 0022     		movs	r2, #0
 4873 0164 5A65     		str	r2, [r3, #84]
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 4874              		.loc 1 2298 5
 4875 0166 7B68     		ldr	r3, [r7, #4]
 4876 0168 1B68     		ldr	r3, [r3]
 4877 016a 0F22     		movs	r2, #15
 4878 016c 1A62     		str	r2, [r3, #32]
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4879              		.loc 1 2301 20
 4880 016e 7B68     		ldr	r3, [r7, #4]
 4881 0170 2022     		movs	r2, #32
 4882 0172 DA67     		str	r2, [r3, #124]
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4883              		.loc 1 2302 26
 4884 0174 7B68     		ldr	r3, [r7, #4]
 4885 0176 0022     		movs	r2, #0
 4886 0178 1A66     		str	r2, [r3, #96]
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 4887              		.loc 1 2310 5
 4888 017a 7868     		ldr	r0, [r7, #4]
 4889 017c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4890              	.L266:
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4891              		.loc 1 2314 10
 4892 0180 0023     		movs	r3, #0
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4893              		.loc 1 2315 1
 4894 0182 1846     		mov	r0, r3
 4895 0184 6837     		adds	r7, r7, #104
 4896              	.LCFI113:
 4897              		.cfi_def_cfa_offset 8
 4898 0186 BD46     		mov	sp, r7
 4899              	.LCFI114:
 4900              		.cfi_def_cfa_register 13
 4901              		@ sp needed
 4902 0188 80BD     		pop	{r7, pc}
 4903              	.L269:
 4904 018a 00BF     		.align	2
 4905              	.L268:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 150


 4906 018c 00000000 		.word	UART_DMARxOnlyAbortCallback
 4907              		.cfi_endproc
 4908              	.LFE313:
 4910              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4911              		.align	1
 4912              		.global	HAL_UART_IRQHandler
 4913              		.syntax unified
 4914              		.thumb
 4915              		.thumb_func
 4916              		.fpu fpv4-sp-d16
 4918              	HAL_UART_IRQHandler:
 4919              	.LFB314:
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4920              		.loc 1 2323 1
 4921              		.cfi_startproc
 4922              		@ args = 0, pretend = 0, frame = 232
 4923              		@ frame_needed = 1, uses_anonymous_args = 0
 4924 0000 80B5     		push	{r7, lr}
 4925              	.LCFI115:
 4926              		.cfi_def_cfa_offset 8
 4927              		.cfi_offset 7, -8
 4928              		.cfi_offset 14, -4
 4929 0002 BAB0     		sub	sp, sp, #232
 4930              	.LCFI116:
 4931              		.cfi_def_cfa_offset 240
 4932 0004 00AF     		add	r7, sp, #0
 4933              	.LCFI117:
 4934              		.cfi_def_cfa_register 7
 4935 0006 7860     		str	r0, [r7, #4]
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 4936              		.loc 1 2324 25
 4937 0008 7B68     		ldr	r3, [r7, #4]
 4938 000a 1B68     		ldr	r3, [r3]
 4939              		.loc 1 2324 12
 4940 000c DB69     		ldr	r3, [r3, #28]
 4941 000e C7F8E430 		str	r3, [r7, #228]
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4942              		.loc 1 2325 25
 4943 0012 7B68     		ldr	r3, [r7, #4]
 4944 0014 1B68     		ldr	r3, [r3]
 4945              		.loc 1 2325 12
 4946 0016 1B68     		ldr	r3, [r3]
 4947 0018 C7F8E030 		str	r3, [r7, #224]
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 4948              		.loc 1 2326 25
 4949 001c 7B68     		ldr	r3, [r7, #4]
 4950 001e 1B68     		ldr	r3, [r3]
 4951              		.loc 1 2326 12
 4952 0020 9B68     		ldr	r3, [r3, #8]
 4953 0022 C7F8DC30 		str	r3, [r7, #220]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 151


2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorcode;
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
 4954              		.loc 1 2332 14
 4955 0026 D7F8E420 		ldr	r2, [r7, #228]
 4956 002a 40F60F03 		movw	r3, #2063
 4957 002e 1340     		ands	r3, r3, r2
 4958 0030 C7F8D830 		str	r3, [r7, #216]
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == 0U)
 4959              		.loc 1 2333 6
 4960 0034 D7F8D830 		ldr	r3, [r7, #216]
 4961 0038 002B     		cmp	r3, #0
 4962 003a 15D1     		bne	.L271
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
 4963              		.loc 1 2341 20
 4964 003c D7F8E430 		ldr	r3, [r7, #228]
 4965 0040 03F02003 		and	r3, r3, #32
 4966              		.loc 1 2341 8
 4967 0044 002B     		cmp	r3, #0
 4968 0046 0FD0     		beq	.L271
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 4969              		.loc 1 2342 21
 4970 0048 D7F8E030 		ldr	r3, [r7, #224]
 4971 004c 03F02003 		and	r3, r3, #32
 4972              		.loc 1 2342 9
 4973 0050 002B     		cmp	r3, #0
 4974 0052 09D0     		beq	.L271
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL)
 4975              		.loc 1 2345 16
 4976 0054 7B68     		ldr	r3, [r7, #4]
 4977 0056 5B6E     		ldr	r3, [r3, #100]
 4978              		.loc 1 2345 10
 4979 0058 002B     		cmp	r3, #0
 4980 005a 00F0A682 		beq	.L321
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR(huart);
 4981              		.loc 1 2347 14
 4982 005e 7B68     		ldr	r3, [r7, #4]
 4983 0060 5B6E     		ldr	r3, [r3, #100]
 4984              		.loc 1 2347 9
 4985 0062 7868     		ldr	r0, [r7, #4]
 4986 0064 9847     		blx	r3
 4987              	.LVL2:
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 152


 4988              		.loc 1 2349 7
 4989 0066 A0E2     		b	.L321
 4990              	.L271:
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
 4991              		.loc 1 2359 6
 4992 0068 D7F8D830 		ldr	r3, [r7, #216]
 4993 006c 002B     		cmp	r3, #0
 4994 006e 00F01781 		beq	.L274
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 4995              		.loc 1 2360 20
 4996 0072 D7F8DC30 		ldr	r3, [r7, #220]
 4997 0076 03F00103 		and	r3, r3, #1
 4998              		.loc 1 2360 7
 4999 007a 002B     		cmp	r3, #0
 5000 007c 06D1     		bne	.L275
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 5001              		.loc 1 2361 23
 5002 007e D7F8E020 		ldr	r2, [r7, #224]
 5003 0082 854B     		ldr	r3, .L327
 5004 0084 1340     		ands	r3, r3, r2
 5005              		.loc 1 2361 11
 5006 0086 002B     		cmp	r3, #0
 5007 0088 00F00A81 		beq	.L274
 5008              	.L275:
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 5009              		.loc 1 2365 20
 5010 008c D7F8E430 		ldr	r3, [r7, #228]
 5011 0090 03F00103 		and	r3, r3, #1
 5012              		.loc 1 2365 8
 5013 0094 002B     		cmp	r3, #0
 5014 0096 11D0     		beq	.L276
 5015              		.loc 1 2365 55 discriminator 1
 5016 0098 D7F8E030 		ldr	r3, [r7, #224]
 5017 009c 03F48073 		and	r3, r3, #256
 5018              		.loc 1 2365 43 discriminator 1
 5019 00a0 002B     		cmp	r3, #0
 5020 00a2 0BD0     		beq	.L276
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 5021              		.loc 1 2367 7
 5022 00a4 7B68     		ldr	r3, [r7, #4]
 5023 00a6 1B68     		ldr	r3, [r3]
 5024 00a8 0122     		movs	r2, #1
 5025 00aa 1A62     		str	r2, [r3, #32]
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 153


2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 5026              		.loc 1 2369 24
 5027 00ac 7B68     		ldr	r3, [r7, #4]
 5028 00ae D3F88030 		ldr	r3, [r3, #128]
 5029 00b2 43F00102 		orr	r2, r3, #1
 5030 00b6 7B68     		ldr	r3, [r7, #4]
 5031 00b8 C3F88020 		str	r2, [r3, #128]
 5032              	.L276:
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 5033              		.loc 1 2373 20
 5034 00bc D7F8E430 		ldr	r3, [r7, #228]
 5035 00c0 03F00203 		and	r3, r3, #2
 5036              		.loc 1 2373 8
 5037 00c4 002B     		cmp	r3, #0
 5038 00c6 11D0     		beq	.L277
 5039              		.loc 1 2373 55 discriminator 1
 5040 00c8 D7F8DC30 		ldr	r3, [r7, #220]
 5041 00cc 03F00103 		and	r3, r3, #1
 5042              		.loc 1 2373 43 discriminator 1
 5043 00d0 002B     		cmp	r3, #0
 5044 00d2 0BD0     		beq	.L277
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 5045              		.loc 1 2375 7
 5046 00d4 7B68     		ldr	r3, [r7, #4]
 5047 00d6 1B68     		ldr	r3, [r3]
 5048 00d8 0222     		movs	r2, #2
 5049 00da 1A62     		str	r2, [r3, #32]
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 5050              		.loc 1 2377 24
 5051 00dc 7B68     		ldr	r3, [r7, #4]
 5052 00de D3F88030 		ldr	r3, [r3, #128]
 5053 00e2 43F00402 		orr	r2, r3, #4
 5054 00e6 7B68     		ldr	r3, [r7, #4]
 5055 00e8 C3F88020 		str	r2, [r3, #128]
 5056              	.L277:
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 5057              		.loc 1 2381 20
 5058 00ec D7F8E430 		ldr	r3, [r7, #228]
 5059 00f0 03F00403 		and	r3, r3, #4
 5060              		.loc 1 2381 8
 5061 00f4 002B     		cmp	r3, #0
 5062 00f6 11D0     		beq	.L278
 5063              		.loc 1 2381 55 discriminator 1
 5064 00f8 D7F8DC30 		ldr	r3, [r7, #220]
 5065 00fc 03F00103 		and	r3, r3, #1
 5066              		.loc 1 2381 43 discriminator 1
 5067 0100 002B     		cmp	r3, #0
 5068 0102 0BD0     		beq	.L278
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 154


2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 5069              		.loc 1 2383 7
 5070 0104 7B68     		ldr	r3, [r7, #4]
 5071 0106 1B68     		ldr	r3, [r3]
 5072 0108 0422     		movs	r2, #4
 5073 010a 1A62     		str	r2, [r3, #32]
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 5074              		.loc 1 2385 24
 5075 010c 7B68     		ldr	r3, [r7, #4]
 5076 010e D3F88030 		ldr	r3, [r3, #128]
 5077 0112 43F00202 		orr	r2, r3, #2
 5078 0116 7B68     		ldr	r3, [r7, #4]
 5079 0118 C3F88020 		str	r2, [r3, #128]
 5080              	.L278:
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 5081              		.loc 1 2394 20
 5082 011c D7F8E430 		ldr	r3, [r7, #228]
 5083 0120 03F00803 		and	r3, r3, #8
 5084              		.loc 1 2394 8
 5085 0124 002B     		cmp	r3, #0
 5086 0126 17D0     		beq	.L279
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 5087              		.loc 1 2395 22
 5088 0128 D7F8E030 		ldr	r3, [r7, #224]
 5089 012c 03F02003 		and	r3, r3, #32
 5090              		.loc 1 2395 9
 5091 0130 002B     		cmp	r3, #0
 5092 0132 05D1     		bne	.L280
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 5093              		.loc 1 2396 22 discriminator 1
 5094 0134 D7F8DC30 		ldr	r3, [r7, #220]
 5095 0138 03F00103 		and	r3, r3, #1
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 5096              		.loc 1 2395 49 discriminator 1
 5097 013c 002B     		cmp	r3, #0
 5098 013e 0BD0     		beq	.L279
 5099              	.L280:
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 5100              		.loc 1 2399 7
 5101 0140 7B68     		ldr	r3, [r7, #4]
 5102 0142 1B68     		ldr	r3, [r3]
 5103 0144 0822     		movs	r2, #8
 5104 0146 1A62     		str	r2, [r3, #32]
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 5105              		.loc 1 2401 24
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 155


 5106 0148 7B68     		ldr	r3, [r7, #4]
 5107 014a D3F88030 		ldr	r3, [r3, #128]
 5108 014e 43F00802 		orr	r2, r3, #8
 5109 0152 7B68     		ldr	r3, [r7, #4]
 5110 0154 C3F88020 		str	r2, [r3, #128]
 5111              	.L279:
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 5112              		.loc 1 2405 20
 5113 0158 D7F8E430 		ldr	r3, [r7, #228]
 5114 015c 03F40063 		and	r3, r3, #2048
 5115              		.loc 1 2405 8
 5116 0160 002B     		cmp	r3, #0
 5117 0162 12D0     		beq	.L281
 5118              		.loc 1 2405 57 discriminator 1
 5119 0164 D7F8E030 		ldr	r3, [r7, #224]
 5120 0168 03F08063 		and	r3, r3, #67108864
 5121              		.loc 1 2405 45 discriminator 1
 5122 016c 002B     		cmp	r3, #0
 5123 016e 0CD0     		beq	.L281
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 5124              		.loc 1 2407 7
 5125 0170 7B68     		ldr	r3, [r7, #4]
 5126 0172 1B68     		ldr	r3, [r3]
 5127 0174 4FF40062 		mov	r2, #2048
 5128 0178 1A62     		str	r2, [r3, #32]
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
 5129              		.loc 1 2409 24
 5130 017a 7B68     		ldr	r3, [r7, #4]
 5131 017c D3F88030 		ldr	r3, [r3, #128]
 5132 0180 43F02002 		orr	r2, r3, #32
 5133 0184 7B68     		ldr	r3, [r7, #4]
 5134 0186 C3F88020 		str	r2, [r3, #128]
 5135              	.L281:
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 5136              		.loc 1 2413 14
 5137 018a 7B68     		ldr	r3, [r7, #4]
 5138 018c D3F88030 		ldr	r3, [r3, #128]
 5139              		.loc 1 2413 8
 5140 0190 002B     		cmp	r3, #0
 5141 0192 00F00C82 		beq	.L322
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
 5142              		.loc 1 2421 22
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 156


 5143 0196 D7F8E430 		ldr	r3, [r7, #228]
 5144 019a 03F02003 		and	r3, r3, #32
 5145              		.loc 1 2421 10
 5146 019e 002B     		cmp	r3, #0
 5147 01a0 0DD0     		beq	.L283
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 5148              		.loc 1 2422 23
 5149 01a2 D7F8E030 		ldr	r3, [r7, #224]
 5150 01a6 03F02003 		and	r3, r3, #32
 5151              		.loc 1 2422 11
 5152 01aa 002B     		cmp	r3, #0
 5153 01ac 07D0     		beq	.L283
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL)
 5154              		.loc 1 2425 18
 5155 01ae 7B68     		ldr	r3, [r7, #4]
 5156 01b0 5B6E     		ldr	r3, [r3, #100]
 5157              		.loc 1 2425 12
 5158 01b2 002B     		cmp	r3, #0
 5159 01b4 03D0     		beq	.L283
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxISR(huart);
 5160              		.loc 1 2427 16
 5161 01b6 7B68     		ldr	r3, [r7, #4]
 5162 01b8 5B6E     		ldr	r3, [r3, #100]
 5163              		.loc 1 2427 11
 5164 01ba 7868     		ldr	r0, [r7, #4]
 5165 01bc 9847     		blx	r3
 5166              	.LVL3:
 5167              	.L283:
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - Receiver Timeout error in Reception
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - Overrun error in Reception
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           - any error occurs in DMA mode reception
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       */
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 5168              		.loc 1 2436 17
 5169 01be 7B68     		ldr	r3, [r7, #4]
 5170 01c0 D3F88030 		ldr	r3, [r3, #128]
 5171 01c4 C7F8D430 		str	r3, [r7, #212]
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 5172              		.loc 1 2437 12
 5173 01c8 7B68     		ldr	r3, [r7, #4]
 5174 01ca 1B68     		ldr	r3, [r3]
 5175 01cc 9B68     		ldr	r3, [r3, #8]
 5176 01ce 03F04003 		and	r3, r3, #64
 5177              		.loc 1 2437 10
 5178 01d2 402B     		cmp	r3, #64
 5179 01d4 05D0     		beq	.L284
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 5180              		.loc 1 2438 23 discriminator 1
 5181 01d6 D7F8D430 		ldr	r3, [r7, #212]
 5182 01da 03F02803 		and	r3, r3, #40
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 157


2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 5183              		.loc 1 2437 66 discriminator 1
 5184 01de 002B     		cmp	r3, #0
 5185 01e0 4FD0     		beq	.L285
 5186              	.L284:
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 5187              		.loc 1 2443 9
 5188 01e2 7868     		ldr	r0, [r7, #4]
 5189 01e4 FFF7FEFF 		bl	UART_EndRxTransfer
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Abort the UART DMA Rx channel if enabled */
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5190              		.loc 1 2446 13
 5191 01e8 7B68     		ldr	r3, [r7, #4]
 5192 01ea 1B68     		ldr	r3, [r3]
 5193 01ec 9B68     		ldr	r3, [r3, #8]
 5194 01ee 03F04003 		and	r3, r3, #64
 5195              		.loc 1 2446 12
 5196 01f2 402B     		cmp	r3, #64
 5197 01f4 41D1     		bne	.L286
 5198              	.L289:
 5199              	.LBB589:
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Disable the UART DMA Rx request if enabled */
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5200              		.loc 1 2449 11 discriminator 1
 5201 01f6 7B68     		ldr	r3, [r7, #4]
 5202 01f8 1B68     		ldr	r3, [r3]
 5203 01fa 0833     		adds	r3, r3, #8
 5204 01fc C7F89C30 		str	r3, [r7, #156]
 5205              	.LBB590:
 5206              	.LBB591:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5207              		.loc 2 1155 4 discriminator 1
 5208 0200 D7F89C30 		ldr	r3, [r7, #156]
 5209              		.syntax unified
 5210              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5211 0204 53E8003F 		ldrex r3, [r3]
 5212              	@ 0 "" 2
 5213              		.thumb
 5214              		.syntax unified
 5215 0208 C7F89830 		str	r3, [r7, #152]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5216              		.loc 2 1156 10 discriminator 1
 5217 020c D7F89830 		ldr	r3, [r7, #152]
 5218              	.LBE591:
 5219              	.LBE590:
 5220              		.loc 1 2449 11 discriminator 1
 5221 0210 23F04003 		bic	r3, r3, #64
 5222 0214 C7F8D030 		str	r3, [r7, #208]
 5223 0218 7B68     		ldr	r3, [r7, #4]
 5224 021a 1B68     		ldr	r3, [r3]
 5225 021c 0833     		adds	r3, r3, #8
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 158


 5226 021e D7F8D020 		ldr	r2, [r7, #208]
 5227 0222 C7F8A820 		str	r2, [r7, #168]
 5228 0226 C7F8A430 		str	r3, [r7, #164]
 5229              	.LBB592:
 5230              	.LBB593:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5231              		.loc 2 1206 4 discriminator 1
 5232 022a D7F8A410 		ldr	r1, [r7, #164]
 5233 022e D7F8A820 		ldr	r2, [r7, #168]
 5234              		.syntax unified
 5235              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5236 0232 41E80023 		strex r3, r2, [r1]
 5237              	@ 0 "" 2
 5238              		.thumb
 5239              		.syntax unified
 5240 0236 C7F8A030 		str	r3, [r7, #160]
 5241              		.loc 2 1207 10 discriminator 1
 5242 023a D7F8A030 		ldr	r3, [r7, #160]
 5243              	.LBE593:
 5244              	.LBE592:
 5245              		.loc 1 2449 11 discriminator 1
 5246 023e 002B     		cmp	r3, #0
 5247 0240 D9D1     		bne	.L289
 5248              	.LBE589:
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 5249              		.loc 1 2452 20
 5250 0242 7B68     		ldr	r3, [r7, #4]
 5251 0244 1B6F     		ldr	r3, [r3, #112]
 5252              		.loc 1 2452 14
 5253 0246 002B     		cmp	r3, #0
 5254 0248 13D0     		beq	.L290
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 5255              		.loc 1 2456 18
 5256 024a 7B68     		ldr	r3, [r7, #4]
 5257 024c 1B6F     		ldr	r3, [r3, #112]
 5258              		.loc 1 2456 46
 5259 024e 134A     		ldr	r2, .L327+4
 5260 0250 9A63     		str	r2, [r3, #56]
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5261              		.loc 1 2459 17
 5262 0252 7B68     		ldr	r3, [r7, #4]
 5263 0254 1B6F     		ldr	r3, [r3, #112]
 5264 0256 1846     		mov	r0, r3
 5265 0258 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5266 025c 0346     		mov	r3, r0
 5267              		.loc 1 2459 16
 5268 025e 002B     		cmp	r3, #0
 5269 0260 17D0     		beq	.L323
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 159


2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5270              		.loc 1 2462 20
 5271 0262 7B68     		ldr	r3, [r7, #4]
 5272 0264 1B6F     		ldr	r3, [r3, #112]
 5273              		.loc 1 2462 28
 5274 0266 9B6B     		ldr	r3, [r3, #56]
 5275              		.loc 1 2462 53
 5276 0268 7A68     		ldr	r2, [r7, #4]
 5277 026a 126F     		ldr	r2, [r2, #112]
 5278              		.loc 1 2462 15
 5279 026c 1046     		mov	r0, r2
 5280 026e 9847     		blx	r3
 5281              	.LVL4:
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 5282              		.loc 1 2446 12
 5283 0270 0FE0     		b	.L323
 5284              	.L290:
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           else
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call registered error callback*/
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 5285              		.loc 1 2473 13
 5286 0272 7868     		ldr	r0, [r7, #4]
 5287 0274 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 5288              		.loc 1 2446 12
 5289 0278 0BE0     		b	.L323
 5290              	.L286:
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call registered error callback*/
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 5291              		.loc 1 2486 11
 5292 027a 7868     		ldr	r0, [r7, #4]
 5293 027c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 5294              		.loc 1 2446 12
 5295 0280 07E0     		b	.L323
 5296              	.L285:
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 160


2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered error callback*/
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 5297              		.loc 1 2499 9
 5298 0282 7868     		ldr	r0, [r7, #4]
 5299 0284 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5300              		.loc 1 2501 26
 5301 0288 7B68     		ldr	r3, [r7, #4]
 5302 028a 0022     		movs	r2, #0
 5303 028c C3F88020 		str	r2, [r3, #128]
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 5304              		.loc 1 2504 5
 5305 0290 8DE1     		b	.L322
 5306              	.L323:
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 5307              		.loc 1 2446 12
 5308 0292 00BF     		nop
 5309              		.loc 1 2504 5
 5310 0294 8BE1     		b	.L322
 5311              	.L328:
 5312 0296 00BF     		.align	2
 5313              	.L327:
 5314 0298 20010004 		.word	67109152
 5315 029c 00000000 		.word	UART_DMAAbortOnError
 5316              	.L274:
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check current reception Mode :
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5317              		.loc 1 2510 13
 5318 02a0 7B68     		ldr	r3, [r7, #4]
 5319 02a2 1B6E     		ldr	r3, [r3, #96]
 5320              		.loc 1 2510 6
 5321 02a4 012B     		cmp	r3, #1
 5322 02a6 40F04681 		bne	.L292
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((isrflags & USART_ISR_IDLE) != 0U)
 5323              		.loc 1 2511 21
 5324 02aa D7F8E430 		ldr	r3, [r7, #228]
 5325 02ae 03F01003 		and	r3, r3, #16
 5326              		.loc 1 2511 7
 5327 02b2 002B     		cmp	r3, #0
 5328 02b4 00F03F81 		beq	.L292
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_ISR_IDLE) != 0U))
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 161


 5329              		.loc 1 2512 19
 5330 02b8 D7F8E030 		ldr	r3, [r7, #224]
 5331 02bc 03F01003 		and	r3, r3, #16
 5332              		.loc 1 2512 7
 5333 02c0 002B     		cmp	r3, #0
 5334 02c2 00F03881 		beq	.L292
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 5335              		.loc 1 2514 5
 5336 02c6 7B68     		ldr	r3, [r7, #4]
 5337 02c8 1B68     		ldr	r3, [r3]
 5338 02ca 1022     		movs	r2, #16
 5339 02cc 1A62     		str	r2, [r3, #32]
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5340              		.loc 1 2517 9
 5341 02ce 7B68     		ldr	r3, [r7, #4]
 5342 02d0 1B68     		ldr	r3, [r3]
 5343 02d2 9B68     		ldr	r3, [r3, #8]
 5344 02d4 03F04003 		and	r3, r3, #64
 5345              		.loc 1 2517 8
 5346 02d8 402B     		cmp	r3, #64
 5347 02da 40F0B480 		bne	.L293
 5348              	.LBB594:
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* DMA mode enabled */
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          (DMA cplt callback will be called).
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 5349              		.loc 1 2523 50
 5350 02de 7B68     		ldr	r3, [r7, #4]
 5351 02e0 1B6F     		ldr	r3, [r3, #112]
 5352 02e2 1B68     		ldr	r3, [r3]
 5353 02e4 5B68     		ldr	r3, [r3, #4]
 5354              		.loc 1 2523 16
 5355 02e6 A7F8BE30 		strh	r3, [r7, #190]	@ movhi
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5356              		.loc 1 2524 10
 5357 02ea B7F8BE30 		ldrh	r3, [r7, #190]
 5358 02ee 002B     		cmp	r3, #0
 5359 02f0 00F05F81 		beq	.L324
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5360              		.loc 1 2525 43
 5361 02f4 7B68     		ldr	r3, [r7, #4]
 5362 02f6 B3F85830 		ldrh	r3, [r3, #88]
 5363              		.loc 1 2525 11
 5364 02fa B7F8BE20 		ldrh	r2, [r7, #190]
 5365 02fe 9A42     		cmp	r2, r3
 5366 0300 80F05781 		bcs	.L324
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Reception is not complete */
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 5367              		.loc 1 2528 28
 5368 0304 7B68     		ldr	r3, [r7, #4]
 5369 0306 B7F8BE20 		ldrh	r2, [r7, #190]	@ movhi
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 162


 5370 030a A3F85A20 		strh	r2, [r3, #90]	@ movhi
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_CLR(huart->hdmarx->Instance->CCR, DMA_CCR_CIRC))
 5371              		.loc 1 2531 13
 5372 030e 7B68     		ldr	r3, [r7, #4]
 5373 0310 1B6F     		ldr	r3, [r3, #112]
 5374 0312 1B68     		ldr	r3, [r3]
 5375 0314 1B68     		ldr	r3, [r3]
 5376 0316 03F02003 		and	r3, r3, #32
 5377              		.loc 1 2531 12
 5378 031a 002B     		cmp	r3, #0
 5379 031c 40F08580 		bne	.L295
 5380              	.L298:
 5381              	.LBB595:
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5382              		.loc 1 2534 11 discriminator 1
 5383 0320 7B68     		ldr	r3, [r7, #4]
 5384 0322 1B68     		ldr	r3, [r3]
 5385 0324 C7F88830 		str	r3, [r7, #136]
 5386              	.LBB596:
 5387              	.LBB597:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5388              		.loc 2 1155 4 discriminator 1
 5389 0328 D7F88830 		ldr	r3, [r7, #136]
 5390              		.syntax unified
 5391              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5392 032c 53E8003F 		ldrex r3, [r3]
 5393              	@ 0 "" 2
 5394              		.thumb
 5395              		.syntax unified
 5396 0330 C7F88430 		str	r3, [r7, #132]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5397              		.loc 2 1156 10 discriminator 1
 5398 0334 D7F88430 		ldr	r3, [r7, #132]
 5399              	.LBE597:
 5400              	.LBE596:
 5401              		.loc 1 2534 11 discriminator 1
 5402 0338 23F48073 		bic	r3, r3, #256
 5403 033c C7F8B830 		str	r3, [r7, #184]
 5404 0340 7B68     		ldr	r3, [r7, #4]
 5405 0342 1B68     		ldr	r3, [r3]
 5406 0344 1A46     		mov	r2, r3
 5407 0346 D7F8B830 		ldr	r3, [r7, #184]
 5408 034a C7F89430 		str	r3, [r7, #148]
 5409 034e C7F89020 		str	r2, [r7, #144]
 5410              	.LBB598:
 5411              	.LBB599:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5412              		.loc 2 1206 4 discriminator 1
 5413 0352 D7F89010 		ldr	r1, [r7, #144]
 5414 0356 D7F89420 		ldr	r2, [r7, #148]
 5415              		.syntax unified
 5416              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5417 035a 41E80023 		strex r3, r2, [r1]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 163


 5418              	@ 0 "" 2
 5419              		.thumb
 5420              		.syntax unified
 5421 035e C7F88C30 		str	r3, [r7, #140]
 5422              		.loc 2 1207 10 discriminator 1
 5423 0362 D7F88C30 		ldr	r3, [r7, #140]
 5424              	.LBE599:
 5425              	.LBE598:
 5426              		.loc 1 2534 11 discriminator 1
 5427 0366 002B     		cmp	r3, #0
 5428 0368 DAD1     		bne	.L298
 5429              	.L301:
 5430              	.LBE595:
 5431              	.LBB600:
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5432              		.loc 1 2535 11 discriminator 1
 5433 036a 7B68     		ldr	r3, [r7, #4]
 5434 036c 1B68     		ldr	r3, [r3]
 5435 036e 0833     		adds	r3, r3, #8
 5436 0370 7B67     		str	r3, [r7, #116]
 5437              	.LBB601:
 5438              	.LBB602:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5439              		.loc 2 1155 4 discriminator 1
 5440 0372 7B6F     		ldr	r3, [r7, #116]
 5441              		.syntax unified
 5442              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5443 0374 53E8003F 		ldrex r3, [r3]
 5444              	@ 0 "" 2
 5445              		.thumb
 5446              		.syntax unified
 5447 0378 3B67     		str	r3, [r7, #112]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5448              		.loc 2 1156 10 discriminator 1
 5449 037a 3B6F     		ldr	r3, [r7, #112]
 5450              	.LBE602:
 5451              	.LBE601:
 5452              		.loc 1 2535 11 discriminator 1
 5453 037c 23F00103 		bic	r3, r3, #1
 5454 0380 C7F8B430 		str	r3, [r7, #180]
 5455 0384 7B68     		ldr	r3, [r7, #4]
 5456 0386 1B68     		ldr	r3, [r3]
 5457 0388 0833     		adds	r3, r3, #8
 5458 038a D7F8B420 		ldr	r2, [r7, #180]
 5459 038e C7F88020 		str	r2, [r7, #128]
 5460 0392 FB67     		str	r3, [r7, #124]
 5461              	.LBB603:
 5462              	.LBB604:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5463              		.loc 2 1206 4 discriminator 1
 5464 0394 F96F     		ldr	r1, [r7, #124]
 5465 0396 D7F88020 		ldr	r2, [r7, #128]
 5466              		.syntax unified
 5467              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5468 039a 41E80023 		strex r3, r2, [r1]
 5469              	@ 0 "" 2
 5470              		.thumb
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 164


 5471              		.syntax unified
 5472 039e BB67     		str	r3, [r7, #120]
 5473              		.loc 2 1207 10 discriminator 1
 5474 03a0 BB6F     		ldr	r3, [r7, #120]
 5475              	.LBE604:
 5476              	.LBE603:
 5477              		.loc 1 2535 11 discriminator 1
 5478 03a2 002B     		cmp	r3, #0
 5479 03a4 E1D1     		bne	.L301
 5480              	.L304:
 5481              	.LBE600:
 5482              	.LBB605:
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the UART CR3 register */
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5483              		.loc 1 2539 11 discriminator 1
 5484 03a6 7B68     		ldr	r3, [r7, #4]
 5485 03a8 1B68     		ldr	r3, [r3]
 5486 03aa 0833     		adds	r3, r3, #8
 5487 03ac 3B66     		str	r3, [r7, #96]
 5488              	.LBB606:
 5489              	.LBB607:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5490              		.loc 2 1155 4 discriminator 1
 5491 03ae 3B6E     		ldr	r3, [r7, #96]
 5492              		.syntax unified
 5493              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5494 03b0 53E8003F 		ldrex r3, [r3]
 5495              	@ 0 "" 2
 5496              		.thumb
 5497              		.syntax unified
 5498 03b4 FB65     		str	r3, [r7, #92]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5499              		.loc 2 1156 10 discriminator 1
 5500 03b6 FB6D     		ldr	r3, [r7, #92]
 5501              	.LBE607:
 5502              	.LBE606:
 5503              		.loc 1 2539 11 discriminator 1
 5504 03b8 23F04003 		bic	r3, r3, #64
 5505 03bc C7F8B030 		str	r3, [r7, #176]
 5506 03c0 7B68     		ldr	r3, [r7, #4]
 5507 03c2 1B68     		ldr	r3, [r3]
 5508 03c4 0833     		adds	r3, r3, #8
 5509 03c6 D7F8B020 		ldr	r2, [r7, #176]
 5510 03ca FA66     		str	r2, [r7, #108]
 5511 03cc BB66     		str	r3, [r7, #104]
 5512              	.LBB608:
 5513              	.LBB609:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5514              		.loc 2 1206 4 discriminator 1
 5515 03ce B96E     		ldr	r1, [r7, #104]
 5516 03d0 FA6E     		ldr	r2, [r7, #108]
 5517              		.syntax unified
 5518              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5519 03d2 41E80023 		strex r3, r2, [r1]
 5520              	@ 0 "" 2
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 165


 5521              		.thumb
 5522              		.syntax unified
 5523 03d6 7B66     		str	r3, [r7, #100]
 5524              		.loc 2 1207 10 discriminator 1
 5525 03d8 7B6E     		ldr	r3, [r7, #100]
 5526              	.LBE609:
 5527              	.LBE608:
 5528              		.loc 1 2539 11 discriminator 1
 5529 03da 002B     		cmp	r3, #0
 5530 03dc E3D1     		bne	.L304
 5531              	.LBE605:
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5532              		.loc 1 2542 26
 5533 03de 7B68     		ldr	r3, [r7, #4]
 5534 03e0 2022     		movs	r2, #32
 5535 03e2 DA67     		str	r2, [r3, #124]
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5536              		.loc 1 2543 32
 5537 03e4 7B68     		ldr	r3, [r7, #4]
 5538 03e6 0022     		movs	r2, #0
 5539 03e8 1A66     		str	r2, [r3, #96]
 5540              	.L307:
 5541              	.LBB610:
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5542              		.loc 1 2545 11 discriminator 1
 5543 03ea 7B68     		ldr	r3, [r7, #4]
 5544 03ec 1B68     		ldr	r3, [r3]
 5545 03ee FB64     		str	r3, [r7, #76]
 5546              	.LBB611:
 5547              	.LBB612:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5548              		.loc 2 1155 4 discriminator 1
 5549 03f0 FB6C     		ldr	r3, [r7, #76]
 5550              		.syntax unified
 5551              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5552 03f2 53E8003F 		ldrex r3, [r3]
 5553              	@ 0 "" 2
 5554              		.thumb
 5555              		.syntax unified
 5556 03f6 BB64     		str	r3, [r7, #72]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5557              		.loc 2 1156 10 discriminator 1
 5558 03f8 BB6C     		ldr	r3, [r7, #72]
 5559              	.LBE612:
 5560              	.LBE611:
 5561              		.loc 1 2545 11 discriminator 1
 5562 03fa 23F01003 		bic	r3, r3, #16
 5563 03fe C7F8AC30 		str	r3, [r7, #172]
 5564 0402 7B68     		ldr	r3, [r7, #4]
 5565 0404 1B68     		ldr	r3, [r3]
 5566 0406 1A46     		mov	r2, r3
 5567 0408 D7F8AC30 		ldr	r3, [r7, #172]
 5568 040c BB65     		str	r3, [r7, #88]
 5569 040e 7A65     		str	r2, [r7, #84]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 166


 5570              	.LBB613:
 5571              	.LBB614:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5572              		.loc 2 1206 4 discriminator 1
 5573 0410 796D     		ldr	r1, [r7, #84]
 5574 0412 BA6D     		ldr	r2, [r7, #88]
 5575              		.syntax unified
 5576              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5577 0414 41E80023 		strex r3, r2, [r1]
 5578              	@ 0 "" 2
 5579              		.thumb
 5580              		.syntax unified
 5581 0418 3B65     		str	r3, [r7, #80]
 5582              		.loc 2 1207 10 discriminator 1
 5583 041a 3B6D     		ldr	r3, [r7, #80]
 5584              	.LBE614:
 5585              	.LBE613:
 5586              		.loc 1 2545 11 discriminator 1
 5587 041c 002B     		cmp	r3, #0
 5588 041e E4D1     		bne	.L307
 5589              	.LBE610:
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 5590              		.loc 1 2548 17
 5591 0420 7B68     		ldr	r3, [r7, #4]
 5592 0422 1B6F     		ldr	r3, [r3, #112]
 5593 0424 1846     		mov	r0, r3
 5594 0426 FFF7FEFF 		bl	HAL_DMA_Abort
 5595              	.L295:
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 5596              		.loc 1 2555 49
 5597 042a 7B68     		ldr	r3, [r7, #4]
 5598 042c B3F85820 		ldrh	r2, [r3, #88]
 5599              		.loc 1 2555 69
 5600 0430 7B68     		ldr	r3, [r7, #4]
 5601 0432 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 5602 0436 9BB2     		uxth	r3, r3
 5603              		.loc 1 2555 9
 5604 0438 D31A     		subs	r3, r2, r3
 5605 043a 9BB2     		uxth	r3, r3
 5606 043c 1946     		mov	r1, r3
 5607 043e 7868     		ldr	r0, [r7, #4]
 5608 0440 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
 5609              		.loc 1 2558 7
 5610 0444 B5E0     		b	.L324
 5611              	.L293:
 5612              	.LBE594:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 167


 5613              	.LBB615:
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* DMA mode not enabled */
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 5614              		.loc 1 2565 34
 5615 0446 7B68     		ldr	r3, [r7, #4]
 5616 0448 B3F85820 		ldrh	r2, [r3, #88]
 5617              		.loc 1 2565 54
 5618 044c 7B68     		ldr	r3, [r7, #4]
 5619 044e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 5620 0452 9BB2     		uxth	r3, r3
 5621              		.loc 1 2565 16
 5622 0454 D31A     		subs	r3, r2, r3
 5623 0456 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5624              		.loc 1 2566 17
 5625 045a 7B68     		ldr	r3, [r7, #4]
 5626 045c B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 5627 0460 9BB2     		uxth	r3, r3
 5628              		.loc 1 2566 10
 5629 0462 002B     		cmp	r3, #0
 5630 0464 00F0A780 		beq	.L325
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5631              		.loc 1 2567 11
 5632 0468 B7F8CE30 		ldrh	r3, [r7, #206]
 5633 046c 002B     		cmp	r3, #0
 5634 046e 00F0A280 		beq	.L325
 5635              	.L311:
 5636              	.LBB616:
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART Error Interrupt:(Frame error, noise error, overrun error) and RX FIFO T
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5637              		.loc 1 2577 9 discriminator 1
 5638 0472 7B68     		ldr	r3, [r7, #4]
 5639 0474 1B68     		ldr	r3, [r3]
 5640 0476 BB63     		str	r3, [r7, #56]
 5641              	.LBB617:
 5642              	.LBB618:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5643              		.loc 2 1155 4 discriminator 1
 5644 0478 BB6B     		ldr	r3, [r7, #56]
 5645              		.syntax unified
 5646              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5647 047a 53E8003F 		ldrex r3, [r3]
 5648              	@ 0 "" 2
 5649              		.thumb
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 168


 5650              		.syntax unified
 5651 047e 7B63     		str	r3, [r7, #52]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5652              		.loc 2 1156 10 discriminator 1
 5653 0480 7B6B     		ldr	r3, [r7, #52]
 5654              	.LBE618:
 5655              	.LBE617:
 5656              		.loc 1 2577 9 discriminator 1
 5657 0482 23F49073 		bic	r3, r3, #288
 5658 0486 C7F8C830 		str	r3, [r7, #200]
 5659 048a 7B68     		ldr	r3, [r7, #4]
 5660 048c 1B68     		ldr	r3, [r3]
 5661 048e 1A46     		mov	r2, r3
 5662 0490 D7F8C830 		ldr	r3, [r7, #200]
 5663 0494 7B64     		str	r3, [r7, #68]
 5664 0496 3A64     		str	r2, [r7, #64]
 5665              	.LBB619:
 5666              	.LBB620:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5667              		.loc 2 1206 4 discriminator 1
 5668 0498 396C     		ldr	r1, [r7, #64]
 5669 049a 7A6C     		ldr	r2, [r7, #68]
 5670              		.syntax unified
 5671              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5672 049c 41E80023 		strex r3, r2, [r1]
 5673              	@ 0 "" 2
 5674              		.thumb
 5675              		.syntax unified
 5676 04a0 FB63     		str	r3, [r7, #60]
 5677              		.loc 2 1207 10 discriminator 1
 5678 04a2 FB6B     		ldr	r3, [r7, #60]
 5679              	.LBE620:
 5680              	.LBE619:
 5681              		.loc 1 2577 9 discriminator 1
 5682 04a4 002B     		cmp	r3, #0
 5683 04a6 E4D1     		bne	.L311
 5684              	.L314:
 5685              	.LBE616:
 5686              	.LBB621:
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5687              		.loc 1 2580 9 discriminator 1
 5688 04a8 7B68     		ldr	r3, [r7, #4]
 5689 04aa 1B68     		ldr	r3, [r3]
 5690 04ac 0833     		adds	r3, r3, #8
 5691 04ae 7B62     		str	r3, [r7, #36]
 5692              	.LBB622:
 5693              	.LBB623:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5694              		.loc 2 1155 4 discriminator 1
 5695 04b0 7B6A     		ldr	r3, [r7, #36]
 5696              		.syntax unified
 5697              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5698 04b2 53E8003F 		ldrex r3, [r3]
 5699              	@ 0 "" 2
 5700              		.thumb
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 169


 5701              		.syntax unified
 5702 04b6 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5703              		.loc 2 1156 10 discriminator 1
 5704 04b8 3B6A     		ldr	r3, [r7, #32]
 5705              	.LBE623:
 5706              	.LBE622:
 5707              		.loc 1 2580 9 discriminator 1
 5708 04ba 23F00103 		bic	r3, r3, #1
 5709 04be C7F8C430 		str	r3, [r7, #196]
 5710 04c2 7B68     		ldr	r3, [r7, #4]
 5711 04c4 1B68     		ldr	r3, [r3]
 5712 04c6 0833     		adds	r3, r3, #8
 5713 04c8 D7F8C420 		ldr	r2, [r7, #196]
 5714 04cc 3A63     		str	r2, [r7, #48]
 5715 04ce FB62     		str	r3, [r7, #44]
 5716              	.LBB624:
 5717              	.LBB625:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5718              		.loc 2 1206 4 discriminator 1
 5719 04d0 F96A     		ldr	r1, [r7, #44]
 5720 04d2 3A6B     		ldr	r2, [r7, #48]
 5721              		.syntax unified
 5722              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5723 04d4 41E80023 		strex r3, r2, [r1]
 5724              	@ 0 "" 2
 5725              		.thumb
 5726              		.syntax unified
 5727 04d8 BB62     		str	r3, [r7, #40]
 5728              		.loc 2 1207 10 discriminator 1
 5729 04da BB6A     		ldr	r3, [r7, #40]
 5730              	.LBE625:
 5731              	.LBE624:
 5732              		.loc 1 2580 9 discriminator 1
 5733 04dc 002B     		cmp	r3, #0
 5734 04de E3D1     		bne	.L314
 5735              	.LBE621:
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5736              		.loc 1 2584 24
 5737 04e0 7B68     		ldr	r3, [r7, #4]
 5738 04e2 2022     		movs	r2, #32
 5739 04e4 DA67     		str	r2, [r3, #124]
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5740              		.loc 1 2585 30
 5741 04e6 7B68     		ldr	r3, [r7, #4]
 5742 04e8 0022     		movs	r2, #0
 5743 04ea 1A66     		str	r2, [r3, #96]
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Clear RxISR function pointer */
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = NULL;
 5744              		.loc 1 2588 22
 5745 04ec 7B68     		ldr	r3, [r7, #4]
 5746 04ee 0022     		movs	r2, #0
 5747 04f0 5A66     		str	r2, [r3, #100]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 170


 5748              	.L317:
 5749              	.LBB626:
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5750              		.loc 1 2590 9 discriminator 1
 5751 04f2 7B68     		ldr	r3, [r7, #4]
 5752 04f4 1B68     		ldr	r3, [r3]
 5753 04f6 3B61     		str	r3, [r7, #16]
 5754              	.LBB627:
 5755              	.LBB628:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5756              		.loc 2 1155 4 discriminator 1
 5757 04f8 3B69     		ldr	r3, [r7, #16]
 5758              		.syntax unified
 5759              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5760 04fa 53E8003F 		ldrex r3, [r3]
 5761              	@ 0 "" 2
 5762              		.thumb
 5763              		.syntax unified
 5764 04fe FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5765              		.loc 2 1156 10 discriminator 1
 5766 0500 FB68     		ldr	r3, [r7, #12]
 5767              	.LBE628:
 5768              	.LBE627:
 5769              		.loc 1 2590 9 discriminator 1
 5770 0502 23F01003 		bic	r3, r3, #16
 5771 0506 C7F8C030 		str	r3, [r7, #192]
 5772 050a 7B68     		ldr	r3, [r7, #4]
 5773 050c 1B68     		ldr	r3, [r3]
 5774 050e 1A46     		mov	r2, r3
 5775 0510 D7F8C030 		ldr	r3, [r7, #192]
 5776 0514 FB61     		str	r3, [r7, #28]
 5777 0516 BA61     		str	r2, [r7, #24]
 5778              	.LBB629:
 5779              	.LBB630:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5780              		.loc 2 1206 4 discriminator 1
 5781 0518 B969     		ldr	r1, [r7, #24]
 5782 051a FA69     		ldr	r2, [r7, #28]
 5783              		.syntax unified
 5784              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5785 051c 41E80023 		strex r3, r2, [r1]
 5786              	@ 0 "" 2
 5787              		.thumb
 5788              		.syntax unified
 5789 0520 7B61     		str	r3, [r7, #20]
 5790              		.loc 2 1207 10 discriminator 1
 5791 0522 7B69     		ldr	r3, [r7, #20]
 5792              	.LBE630:
 5793              	.LBE629:
 5794              		.loc 1 2590 9 discriminator 1
 5795 0524 002B     		cmp	r3, #0
 5796 0526 E4D1     		bne	.L317
 5797              	.LBE626:
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 171


2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 5798              		.loc 1 2596 9
 5799 0528 B7F8CE30 		ldrh	r3, [r7, #206]
 5800 052c 1946     		mov	r1, r3
 5801 052e 7868     		ldr	r0, [r7, #4]
 5802 0530 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
 5803              		.loc 1 2599 7
 5804 0534 3FE0     		b	.L325
 5805              	.L292:
 5806              	.LBE615:
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 5807              		.loc 1 2604 18
 5808 0536 D7F8E430 		ldr	r3, [r7, #228]
 5809 053a 03F48013 		and	r3, r3, #1048576
 5810              		.loc 1 2604 6
 5811 053e 002B     		cmp	r3, #0
 5812 0540 0ED0     		beq	.L318
 5813              		.loc 1 2604 54 discriminator 1
 5814 0542 D7F8DC30 		ldr	r3, [r7, #220]
 5815 0546 03F48003 		and	r3, r3, #4194304
 5816              		.loc 1 2604 42 discriminator 1
 5817 054a 002B     		cmp	r3, #0
 5818 054c 08D0     		beq	.L318
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 5819              		.loc 1 2606 5
 5820 054e 7B68     		ldr	r3, [r7, #4]
 5821 0550 1B68     		ldr	r3, [r3]
 5822 0552 4FF48012 		mov	r2, #1048576
 5823 0556 1A62     		str	r2, [r3, #32]
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 5824              		.loc 1 2616 5
 5825 0558 7868     		ldr	r0, [r7, #4]
 5826 055a FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 5827              		.loc 1 2618 5
 5828 055e 2DE0     		b	.L270
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 172


 5829              	.L318:
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
 5830              		.loc 1 2627 18
 5831 0560 D7F8E430 		ldr	r3, [r7, #228]
 5832 0564 03F08003 		and	r3, r3, #128
 5833              		.loc 1 2627 6
 5834 0568 002B     		cmp	r3, #0
 5835 056a 0ED0     		beq	.L319
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 5836              		.loc 1 2628 19
 5837 056c D7F8E030 		ldr	r3, [r7, #224]
 5838 0570 03F08003 		and	r3, r3, #128
 5839              		.loc 1 2628 7
 5840 0574 002B     		cmp	r3, #0
 5841 0576 08D0     		beq	.L319
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL)
 5842              		.loc 1 2631 14
 5843 0578 7B68     		ldr	r3, [r7, #4]
 5844 057a 9B6E     		ldr	r3, [r3, #104]
 5845              		.loc 1 2631 8
 5846 057c 002B     		cmp	r3, #0
 5847 057e 1CD0     		beq	.L326
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR(huart);
 5848              		.loc 1 2633 12
 5849 0580 7B68     		ldr	r3, [r7, #4]
 5850 0582 9B6E     		ldr	r3, [r3, #104]
 5851              		.loc 1 2633 7
 5852 0584 7868     		ldr	r0, [r7, #4]
 5853 0586 9847     		blx	r3
 5854              	.LVL5:
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 5855              		.loc 1 2635 5
 5856 0588 17E0     		b	.L326
 5857              	.L319:
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 5858              		.loc 1 2639 18
 5859 058a D7F8E430 		ldr	r3, [r7, #228]
 5860 058e 03F04003 		and	r3, r3, #64
 5861              		.loc 1 2639 6
 5862 0592 002B     		cmp	r3, #0
 5863 0594 12D0     		beq	.L270
 5864              		.loc 1 2639 53 discriminator 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 173


 5865 0596 D7F8E030 		ldr	r3, [r7, #224]
 5866 059a 03F04003 		and	r3, r3, #64
 5867              		.loc 1 2639 41 discriminator 1
 5868 059e 002B     		cmp	r3, #0
 5869 05a0 0CD0     		beq	.L270
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 5870              		.loc 1 2641 5
 5871 05a2 7868     		ldr	r0, [r7, #4]
 5872 05a4 FFF7FEFF 		bl	UART_EndTransmit_IT
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 5873              		.loc 1 2642 5
 5874 05a8 08E0     		b	.L270
 5875              	.L321:
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5876              		.loc 1 2349 7
 5877 05aa 00BF     		nop
 5878 05ac 06E0     		b	.L270
 5879              	.L322:
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5880              		.loc 1 2504 5
 5881 05ae 00BF     		nop
 5882 05b0 04E0     		b	.L270
 5883              	.L324:
 5884              	.LBB631:
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5885              		.loc 1 2558 7
 5886 05b2 00BF     		nop
 5887 05b4 02E0     		b	.L270
 5888              	.L325:
 5889              	.LBE631:
 5890              	.LBB632:
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 5891              		.loc 1 2599 7
 5892 05b6 00BF     		nop
 5893 05b8 00E0     		b	.L270
 5894              	.L326:
 5895              	.LBE632:
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5896              		.loc 1 2635 5
 5897 05ba 00BF     		nop
 5898              	.L270:
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 174


2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5899              		.loc 1 2672 1
 5900 05bc E837     		adds	r7, r7, #232
 5901              	.LCFI118:
 5902              		.cfi_def_cfa_offset 8
 5903 05be BD46     		mov	sp, r7
 5904              	.LCFI119:
 5905              		.cfi_def_cfa_register 13
 5906              		@ sp needed
 5907 05c0 80BD     		pop	{r7, pc}
 5908              		.cfi_endproc
 5909              	.LFE314:
 5911 05c2 00BF     		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 5912              		.align	1
 5913              		.weak	HAL_UART_TxCpltCallback
 5914              		.syntax unified
 5915              		.thumb
 5916              		.thumb_func
 5917              		.fpu fpv4-sp-d16
 5919              	HAL_UART_TxCpltCallback:
 5920              	.LFB315:
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5921              		.loc 1 2680 1
 5922              		.cfi_startproc
 5923              		@ args = 0, pretend = 0, frame = 8
 5924              		@ frame_needed = 1, uses_anonymous_args = 0
 5925              		@ link register save eliminated.
 5926 0000 80B4     		push	{r7}
 5927              	.LCFI120:
 5928              		.cfi_def_cfa_offset 4
 5929              		.cfi_offset 7, -4
 5930 0002 83B0     		sub	sp, sp, #12
 5931              	.LCFI121:
 5932              		.cfi_def_cfa_offset 16
 5933 0004 00AF     		add	r7, sp, #0
 5934              	.LCFI122:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 175


 5935              		.cfi_def_cfa_register 7
 5936 0006 7860     		str	r0, [r7, #4]
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5937              		.loc 1 2687 1
 5938 0008 00BF     		nop
 5939 000a 0C37     		adds	r7, r7, #12
 5940              	.LCFI123:
 5941              		.cfi_def_cfa_offset 4
 5942 000c BD46     		mov	sp, r7
 5943              	.LCFI124:
 5944              		.cfi_def_cfa_register 13
 5945              		@ sp needed
 5946 000e 5DF8047B 		ldr	r7, [sp], #4
 5947              	.LCFI125:
 5948              		.cfi_restore 7
 5949              		.cfi_def_cfa_offset 0
 5950 0012 7047     		bx	lr
 5951              		.cfi_endproc
 5952              	.LFE315:
 5954              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 5955              		.align	1
 5956              		.weak	HAL_UART_TxHalfCpltCallback
 5957              		.syntax unified
 5958              		.thumb
 5959              		.thumb_func
 5960              		.fpu fpv4-sp-d16
 5962              	HAL_UART_TxHalfCpltCallback:
 5963              	.LFB316:
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5964              		.loc 1 2695 1
 5965              		.cfi_startproc
 5966              		@ args = 0, pretend = 0, frame = 8
 5967              		@ frame_needed = 1, uses_anonymous_args = 0
 5968              		@ link register save eliminated.
 5969 0000 80B4     		push	{r7}
 5970              	.LCFI126:
 5971              		.cfi_def_cfa_offset 4
 5972              		.cfi_offset 7, -4
 5973 0002 83B0     		sub	sp, sp, #12
 5974              	.LCFI127:
 5975              		.cfi_def_cfa_offset 16
 5976 0004 00AF     		add	r7, sp, #0
 5977              	.LCFI128:
 5978              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 176


 5979 0006 7860     		str	r0, [r7, #4]
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5980              		.loc 1 2702 1
 5981 0008 00BF     		nop
 5982 000a 0C37     		adds	r7, r7, #12
 5983              	.LCFI129:
 5984              		.cfi_def_cfa_offset 4
 5985 000c BD46     		mov	sp, r7
 5986              	.LCFI130:
 5987              		.cfi_def_cfa_register 13
 5988              		@ sp needed
 5989 000e 5DF8047B 		ldr	r7, [sp], #4
 5990              	.LCFI131:
 5991              		.cfi_restore 7
 5992              		.cfi_def_cfa_offset 0
 5993 0012 7047     		bx	lr
 5994              		.cfi_endproc
 5995              	.LFE316:
 5997              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 5998              		.align	1
 5999              		.weak	HAL_UART_RxCpltCallback
 6000              		.syntax unified
 6001              		.thumb
 6002              		.thumb_func
 6003              		.fpu fpv4-sp-d16
 6005              	HAL_UART_RxCpltCallback:
 6006              	.LFB317:
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6007              		.loc 1 2710 1
 6008              		.cfi_startproc
 6009              		@ args = 0, pretend = 0, frame = 8
 6010              		@ frame_needed = 1, uses_anonymous_args = 0
 6011              		@ link register save eliminated.
 6012 0000 80B4     		push	{r7}
 6013              	.LCFI132:
 6014              		.cfi_def_cfa_offset 4
 6015              		.cfi_offset 7, -4
 6016 0002 83B0     		sub	sp, sp, #12
 6017              	.LCFI133:
 6018              		.cfi_def_cfa_offset 16
 6019 0004 00AF     		add	r7, sp, #0
 6020              	.LCFI134:
 6021              		.cfi_def_cfa_register 7
 6022 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 177


2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6023              		.loc 1 2717 1
 6024 0008 00BF     		nop
 6025 000a 0C37     		adds	r7, r7, #12
 6026              	.LCFI135:
 6027              		.cfi_def_cfa_offset 4
 6028 000c BD46     		mov	sp, r7
 6029              	.LCFI136:
 6030              		.cfi_def_cfa_register 13
 6031              		@ sp needed
 6032 000e 5DF8047B 		ldr	r7, [sp], #4
 6033              	.LCFI137:
 6034              		.cfi_restore 7
 6035              		.cfi_def_cfa_offset 0
 6036 0012 7047     		bx	lr
 6037              		.cfi_endproc
 6038              	.LFE317:
 6040              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 6041              		.align	1
 6042              		.weak	HAL_UART_RxHalfCpltCallback
 6043              		.syntax unified
 6044              		.thumb
 6045              		.thumb_func
 6046              		.fpu fpv4-sp-d16
 6048              	HAL_UART_RxHalfCpltCallback:
 6049              	.LFB318:
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6050              		.loc 1 2725 1
 6051              		.cfi_startproc
 6052              		@ args = 0, pretend = 0, frame = 8
 6053              		@ frame_needed = 1, uses_anonymous_args = 0
 6054              		@ link register save eliminated.
 6055 0000 80B4     		push	{r7}
 6056              	.LCFI138:
 6057              		.cfi_def_cfa_offset 4
 6058              		.cfi_offset 7, -4
 6059 0002 83B0     		sub	sp, sp, #12
 6060              	.LCFI139:
 6061              		.cfi_def_cfa_offset 16
 6062 0004 00AF     		add	r7, sp, #0
 6063              	.LCFI140:
 6064              		.cfi_def_cfa_register 7
 6065 0006 7860     		str	r0, [r7, #4]
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 178


2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6066              		.loc 1 2732 1
 6067 0008 00BF     		nop
 6068 000a 0C37     		adds	r7, r7, #12
 6069              	.LCFI141:
 6070              		.cfi_def_cfa_offset 4
 6071 000c BD46     		mov	sp, r7
 6072              	.LCFI142:
 6073              		.cfi_def_cfa_register 13
 6074              		@ sp needed
 6075 000e 5DF8047B 		ldr	r7, [sp], #4
 6076              	.LCFI143:
 6077              		.cfi_restore 7
 6078              		.cfi_def_cfa_offset 0
 6079 0012 7047     		bx	lr
 6080              		.cfi_endproc
 6081              	.LFE318:
 6083              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 6084              		.align	1
 6085              		.weak	HAL_UART_ErrorCallback
 6086              		.syntax unified
 6087              		.thumb
 6088              		.thumb_func
 6089              		.fpu fpv4-sp-d16
 6091              	HAL_UART_ErrorCallback:
 6092              	.LFB319:
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART error callback.
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6093              		.loc 1 2740 1
 6094              		.cfi_startproc
 6095              		@ args = 0, pretend = 0, frame = 8
 6096              		@ frame_needed = 1, uses_anonymous_args = 0
 6097              		@ link register save eliminated.
 6098 0000 80B4     		push	{r7}
 6099              	.LCFI144:
 6100              		.cfi_def_cfa_offset 4
 6101              		.cfi_offset 7, -4
 6102 0002 83B0     		sub	sp, sp, #12
 6103              	.LCFI145:
 6104              		.cfi_def_cfa_offset 16
 6105 0004 00AF     		add	r7, sp, #0
 6106              	.LCFI146:
 6107              		.cfi_def_cfa_register 7
 6108 0006 7860     		str	r0, [r7, #4]
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 179


2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6109              		.loc 1 2747 1
 6110 0008 00BF     		nop
 6111 000a 0C37     		adds	r7, r7, #12
 6112              	.LCFI147:
 6113              		.cfi_def_cfa_offset 4
 6114 000c BD46     		mov	sp, r7
 6115              	.LCFI148:
 6116              		.cfi_def_cfa_register 13
 6117              		@ sp needed
 6118 000e 5DF8047B 		ldr	r7, [sp], #4
 6119              	.LCFI149:
 6120              		.cfi_restore 7
 6121              		.cfi_def_cfa_offset 0
 6122 0012 7047     		bx	lr
 6123              		.cfi_endproc
 6124              	.LFE319:
 6126              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 6127              		.align	1
 6128              		.weak	HAL_UART_AbortCpltCallback
 6129              		.syntax unified
 6130              		.thumb
 6131              		.thumb_func
 6132              		.fpu fpv4-sp-d16
 6134              	HAL_UART_AbortCpltCallback:
 6135              	.LFB320:
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6136              		.loc 1 2755 1
 6137              		.cfi_startproc
 6138              		@ args = 0, pretend = 0, frame = 8
 6139              		@ frame_needed = 1, uses_anonymous_args = 0
 6140              		@ link register save eliminated.
 6141 0000 80B4     		push	{r7}
 6142              	.LCFI150:
 6143              		.cfi_def_cfa_offset 4
 6144              		.cfi_offset 7, -4
 6145 0002 83B0     		sub	sp, sp, #12
 6146              	.LCFI151:
 6147              		.cfi_def_cfa_offset 16
 6148 0004 00AF     		add	r7, sp, #0
 6149              	.LCFI152:
 6150              		.cfi_def_cfa_register 7
 6151 0006 7860     		str	r0, [r7, #4]
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 180


2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6152              		.loc 1 2762 1
 6153 0008 00BF     		nop
 6154 000a 0C37     		adds	r7, r7, #12
 6155              	.LCFI153:
 6156              		.cfi_def_cfa_offset 4
 6157 000c BD46     		mov	sp, r7
 6158              	.LCFI154:
 6159              		.cfi_def_cfa_register 13
 6160              		@ sp needed
 6161 000e 5DF8047B 		ldr	r7, [sp], #4
 6162              	.LCFI155:
 6163              		.cfi_restore 7
 6164              		.cfi_def_cfa_offset 0
 6165 0012 7047     		bx	lr
 6166              		.cfi_endproc
 6167              	.LFE320:
 6169              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 6170              		.align	1
 6171              		.weak	HAL_UART_AbortTransmitCpltCallback
 6172              		.syntax unified
 6173              		.thumb
 6174              		.thumb_func
 6175              		.fpu fpv4-sp-d16
 6177              	HAL_UART_AbortTransmitCpltCallback:
 6178              	.LFB321:
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6179              		.loc 1 2770 1
 6180              		.cfi_startproc
 6181              		@ args = 0, pretend = 0, frame = 8
 6182              		@ frame_needed = 1, uses_anonymous_args = 0
 6183              		@ link register save eliminated.
 6184 0000 80B4     		push	{r7}
 6185              	.LCFI156:
 6186              		.cfi_def_cfa_offset 4
 6187              		.cfi_offset 7, -4
 6188 0002 83B0     		sub	sp, sp, #12
 6189              	.LCFI157:
 6190              		.cfi_def_cfa_offset 16
 6191 0004 00AF     		add	r7, sp, #0
 6192              	.LCFI158:
 6193              		.cfi_def_cfa_register 7
 6194 0006 7860     		str	r0, [r7, #4]
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 181


2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6195              		.loc 1 2777 1
 6196 0008 00BF     		nop
 6197 000a 0C37     		adds	r7, r7, #12
 6198              	.LCFI159:
 6199              		.cfi_def_cfa_offset 4
 6200 000c BD46     		mov	sp, r7
 6201              	.LCFI160:
 6202              		.cfi_def_cfa_register 13
 6203              		@ sp needed
 6204 000e 5DF8047B 		ldr	r7, [sp], #4
 6205              	.LCFI161:
 6206              		.cfi_restore 7
 6207              		.cfi_def_cfa_offset 0
 6208 0012 7047     		bx	lr
 6209              		.cfi_endproc
 6210              	.LFE321:
 6212              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 6213              		.align	1
 6214              		.weak	HAL_UART_AbortReceiveCpltCallback
 6215              		.syntax unified
 6216              		.thumb
 6217              		.thumb_func
 6218              		.fpu fpv4-sp-d16
 6220              	HAL_UART_AbortReceiveCpltCallback:
 6221              	.LFB322:
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6222              		.loc 1 2785 1
 6223              		.cfi_startproc
 6224              		@ args = 0, pretend = 0, frame = 8
 6225              		@ frame_needed = 1, uses_anonymous_args = 0
 6226              		@ link register save eliminated.
 6227 0000 80B4     		push	{r7}
 6228              	.LCFI162:
 6229              		.cfi_def_cfa_offset 4
 6230              		.cfi_offset 7, -4
 6231 0002 83B0     		sub	sp, sp, #12
 6232              	.LCFI163:
 6233              		.cfi_def_cfa_offset 16
 6234 0004 00AF     		add	r7, sp, #0
 6235              	.LCFI164:
 6236              		.cfi_def_cfa_register 7
 6237 0006 7860     		str	r0, [r7, #4]
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 182


2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6238              		.loc 1 2792 1
 6239 0008 00BF     		nop
 6240 000a 0C37     		adds	r7, r7, #12
 6241              	.LCFI165:
 6242              		.cfi_def_cfa_offset 4
 6243 000c BD46     		mov	sp, r7
 6244              	.LCFI166:
 6245              		.cfi_def_cfa_register 13
 6246              		@ sp needed
 6247 000e 5DF8047B 		ldr	r7, [sp], #4
 6248              	.LCFI167:
 6249              		.cfi_restore 7
 6250              		.cfi_def_cfa_offset 0
 6251 0012 7047     		bx	lr
 6252              		.cfi_endproc
 6253              	.LFE322:
 6255              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 6256              		.align	1
 6257              		.weak	HAL_UARTEx_RxEventCallback
 6258              		.syntax unified
 6259              		.thumb
 6260              		.thumb_func
 6261              		.fpu fpv4-sp-d16
 6263              	HAL_UARTEx_RxEventCallback:
 6264              	.LFB323:
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               reception buffer until which, data are available)
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6265              		.loc 1 2802 1
 6266              		.cfi_startproc
 6267              		@ args = 0, pretend = 0, frame = 8
 6268              		@ frame_needed = 1, uses_anonymous_args = 0
 6269              		@ link register save eliminated.
 6270 0000 80B4     		push	{r7}
 6271              	.LCFI168:
 6272              		.cfi_def_cfa_offset 4
 6273              		.cfi_offset 7, -4
 6274 0002 83B0     		sub	sp, sp, #12
 6275              	.LCFI169:
 6276              		.cfi_def_cfa_offset 16
 6277 0004 00AF     		add	r7, sp, #0
 6278              	.LCFI170:
 6279              		.cfi_def_cfa_register 7
 6280 0006 7860     		str	r0, [r7, #4]
 6281 0008 0B46     		mov	r3, r1
 6282 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 183


2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(Size);
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6283              		.loc 1 2810 1
 6284 000c 00BF     		nop
 6285 000e 0C37     		adds	r7, r7, #12
 6286              	.LCFI171:
 6287              		.cfi_def_cfa_offset 4
 6288 0010 BD46     		mov	sp, r7
 6289              	.LCFI172:
 6290              		.cfi_def_cfa_register 13
 6291              		@ sp needed
 6292 0012 5DF8047B 		ldr	r7, [sp], #4
 6293              	.LCFI173:
 6294              		.cfi_restore 7
 6295              		.cfi_def_cfa_offset 0
 6296 0016 7047     		bx	lr
 6297              		.cfi_endproc
 6298              	.LFE323:
 6300              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 6301              		.align	1
 6302              		.global	HAL_UART_ReceiverTimeout_Config
 6303              		.syntax unified
 6304              		.thumb
 6305              		.thumb_func
 6306              		.fpu fpv4-sp-d16
 6308              	HAL_UART_ReceiverTimeout_Config:
 6309              	.LFB324:
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 184


2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6310              		.loc 1 2850 1
 6311              		.cfi_startproc
 6312              		@ args = 0, pretend = 0, frame = 8
 6313              		@ frame_needed = 1, uses_anonymous_args = 0
 6314              		@ link register save eliminated.
 6315 0000 80B4     		push	{r7}
 6316              	.LCFI174:
 6317              		.cfi_def_cfa_offset 4
 6318              		.cfi_offset 7, -4
 6319 0002 83B0     		sub	sp, sp, #12
 6320              	.LCFI175:
 6321              		.cfi_def_cfa_offset 16
 6322 0004 00AF     		add	r7, sp, #0
 6323              	.LCFI176:
 6324              		.cfi_def_cfa_register 7
 6325 0006 7860     		str	r0, [r7, #4]
 6326 0008 3960     		str	r1, [r7]
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 6327              		.loc 1 2851 9
 6328 000a 7B68     		ldr	r3, [r7, #4]
 6329 000c 1B68     		ldr	r3, [r3]
 6330              		.loc 1 2851 6
 6331 000e 094A     		ldr	r2, .L341
 6332 0010 9342     		cmp	r3, r2
 6333 0012 09D0     		beq	.L340
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 6334              		.loc 1 2854 5
 6335 0014 7B68     		ldr	r3, [r7, #4]
 6336 0016 1B68     		ldr	r3, [r3]
 6337 0018 5B69     		ldr	r3, [r3, #20]
 6338 001a 03F07F41 		and	r1, r3, #-16777216
 6339 001e 7B68     		ldr	r3, [r7, #4]
 6340 0020 1B68     		ldr	r3, [r3]
 6341 0022 3A68     		ldr	r2, [r7]
 6342 0024 0A43     		orrs	r2, r2, r1
 6343 0026 5A61     		str	r2, [r3, #20]
 6344              	.L340:
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6345              		.loc 1 2856 1
 6346 0028 00BF     		nop
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 185


 6347 002a 0C37     		adds	r7, r7, #12
 6348              	.LCFI177:
 6349              		.cfi_def_cfa_offset 4
 6350 002c BD46     		mov	sp, r7
 6351              	.LCFI178:
 6352              		.cfi_def_cfa_register 13
 6353              		@ sp needed
 6354 002e 5DF8047B 		ldr	r7, [sp], #4
 6355              	.LCFI179:
 6356              		.cfi_restore 7
 6357              		.cfi_def_cfa_offset 0
 6358 0032 7047     		bx	lr
 6359              	.L342:
 6360              		.align	2
 6361              	.L341:
 6362 0034 00800040 		.word	1073774592
 6363              		.cfi_endproc
 6364              	.LFE324:
 6366              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 6367              		.align	1
 6368              		.global	HAL_UART_EnableReceiverTimeout
 6369              		.syntax unified
 6370              		.thumb
 6371              		.thumb_func
 6372              		.fpu fpv4-sp-d16
 6374              	HAL_UART_EnableReceiverTimeout:
 6375              	.LFB325:
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6376              		.loc 1 2865 1
 6377              		.cfi_startproc
 6378              		@ args = 0, pretend = 0, frame = 8
 6379              		@ frame_needed = 1, uses_anonymous_args = 0
 6380              		@ link register save eliminated.
 6381 0000 80B4     		push	{r7}
 6382              	.LCFI180:
 6383              		.cfi_def_cfa_offset 4
 6384              		.cfi_offset 7, -4
 6385 0002 83B0     		sub	sp, sp, #12
 6386              	.LCFI181:
 6387              		.cfi_def_cfa_offset 16
 6388 0004 00AF     		add	r7, sp, #0
 6389              	.LCFI182:
 6390              		.cfi_def_cfa_register 7
 6391 0006 7860     		str	r0, [r7, #4]
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 6392              		.loc 1 2866 9
 6393 0008 7B68     		ldr	r3, [r7, #4]
 6394 000a 1B68     		ldr	r3, [r3]
 6395              		.loc 1 2866 6
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 186


 6396 000c 174A     		ldr	r2, .L348
 6397 000e 9342     		cmp	r3, r2
 6398 0010 24D0     		beq	.L344
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
 6399              		.loc 1 2868 14
 6400 0012 7B68     		ldr	r3, [r7, #4]
 6401 0014 9B6F     		ldr	r3, [r3, #120]
 6402              		.loc 1 2868 8
 6403 0016 202B     		cmp	r3, #32
 6404 0018 1ED1     		bne	.L345
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Locked */
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_LOCK(huart);
 6405              		.loc 1 2871 7
 6406 001a 7B68     		ldr	r3, [r7, #4]
 6407 001c 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 6408 0020 012B     		cmp	r3, #1
 6409 0022 01D1     		bne	.L346
 6410              		.loc 1 2871 7 is_stmt 0 discriminator 1
 6411 0024 0223     		movs	r3, #2
 6412 0026 1AE0     		b	.L347
 6413              	.L346:
 6414              		.loc 1 2871 7 discriminator 2
 6415 0028 7B68     		ldr	r3, [r7, #4]
 6416 002a 0122     		movs	r2, #1
 6417 002c 83F87420 		strb	r2, [r3, #116]
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
 6418              		.loc 1 2873 21 is_stmt 1 discriminator 2
 6419 0030 7B68     		ldr	r3, [r7, #4]
 6420 0032 2422     		movs	r2, #36
 6421 0034 9A67     		str	r2, [r3, #120]
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 6422              		.loc 1 2876 7 discriminator 2
 6423 0036 7B68     		ldr	r3, [r7, #4]
 6424 0038 1B68     		ldr	r3, [r3]
 6425 003a 5A68     		ldr	r2, [r3, #4]
 6426 003c 7B68     		ldr	r3, [r7, #4]
 6427 003e 1B68     		ldr	r3, [r3]
 6428 0040 42F40002 		orr	r2, r2, #8388608
 6429 0044 5A60     		str	r2, [r3, #4]
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 6430              		.loc 1 2878 21 discriminator 2
 6431 0046 7B68     		ldr	r3, [r7, #4]
 6432 0048 2022     		movs	r2, #32
 6433 004a 9A67     		str	r2, [r3, #120]
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 6434              		.loc 1 2881 7 discriminator 2
 6435 004c 7B68     		ldr	r3, [r7, #4]
 6436 004e 0022     		movs	r2, #0
 6437 0050 83F87420 		strb	r2, [r3, #116]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 187


2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
 6438              		.loc 1 2883 14 discriminator 2
 6439 0054 0023     		movs	r3, #0
 6440 0056 02E0     		b	.L347
 6441              	.L345:
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_BUSY;
 6442              		.loc 1 2887 14
 6443 0058 0223     		movs	r3, #2
 6444 005a 00E0     		b	.L347
 6445              	.L344:
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 6446              		.loc 1 2892 12
 6447 005c 0123     		movs	r3, #1
 6448              	.L347:
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6449              		.loc 1 2894 1
 6450 005e 1846     		mov	r0, r3
 6451 0060 0C37     		adds	r7, r7, #12
 6452              	.LCFI183:
 6453              		.cfi_def_cfa_offset 4
 6454 0062 BD46     		mov	sp, r7
 6455              	.LCFI184:
 6456              		.cfi_def_cfa_register 13
 6457              		@ sp needed
 6458 0064 5DF8047B 		ldr	r7, [sp], #4
 6459              	.LCFI185:
 6460              		.cfi_restore 7
 6461              		.cfi_def_cfa_offset 0
 6462 0068 7047     		bx	lr
 6463              	.L349:
 6464 006a 00BF     		.align	2
 6465              	.L348:
 6466 006c 00800040 		.word	1073774592
 6467              		.cfi_endproc
 6468              	.LFE325:
 6470              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 6471              		.align	1
 6472              		.global	HAL_UART_DisableReceiverTimeout
 6473              		.syntax unified
 6474              		.thumb
 6475              		.thumb_func
 6476              		.fpu fpv4-sp-d16
 6478              	HAL_UART_DisableReceiverTimeout:
 6479              	.LFB326:
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 188


2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6480              		.loc 1 2903 1
 6481              		.cfi_startproc
 6482              		@ args = 0, pretend = 0, frame = 8
 6483              		@ frame_needed = 1, uses_anonymous_args = 0
 6484              		@ link register save eliminated.
 6485 0000 80B4     		push	{r7}
 6486              	.LCFI186:
 6487              		.cfi_def_cfa_offset 4
 6488              		.cfi_offset 7, -4
 6489 0002 83B0     		sub	sp, sp, #12
 6490              	.LCFI187:
 6491              		.cfi_def_cfa_offset 16
 6492 0004 00AF     		add	r7, sp, #0
 6493              	.LCFI188:
 6494              		.cfi_def_cfa_register 7
 6495 0006 7860     		str	r0, [r7, #4]
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 6496              		.loc 1 2904 9
 6497 0008 7B68     		ldr	r3, [r7, #4]
 6498 000a 1B68     		ldr	r3, [r3]
 6499              		.loc 1 2904 6
 6500 000c 174A     		ldr	r2, .L355
 6501 000e 9342     		cmp	r3, r2
 6502 0010 24D0     		beq	.L351
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
 6503              		.loc 1 2906 14
 6504 0012 7B68     		ldr	r3, [r7, #4]
 6505 0014 9B6F     		ldr	r3, [r3, #120]
 6506              		.loc 1 2906 8
 6507 0016 202B     		cmp	r3, #32
 6508 0018 1ED1     		bne	.L352
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Locked */
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_LOCK(huart);
 6509              		.loc 1 2909 7
 6510 001a 7B68     		ldr	r3, [r7, #4]
 6511 001c 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 6512 0020 012B     		cmp	r3, #1
 6513 0022 01D1     		bne	.L353
 6514              		.loc 1 2909 7 is_stmt 0 discriminator 1
 6515 0024 0223     		movs	r3, #2
 6516 0026 1AE0     		b	.L354
 6517              	.L353:
 6518              		.loc 1 2909 7 discriminator 2
 6519 0028 7B68     		ldr	r3, [r7, #4]
 6520 002a 0122     		movs	r2, #1
 6521 002c 83F87420 		strb	r2, [r3, #116]
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
 6522              		.loc 1 2911 21 is_stmt 1 discriminator 2
 6523 0030 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 189


 6524 0032 2422     		movs	r2, #36
 6525 0034 9A67     		str	r2, [r3, #120]
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
 6526              		.loc 1 2914 7 discriminator 2
 6527 0036 7B68     		ldr	r3, [r7, #4]
 6528 0038 1B68     		ldr	r3, [r3]
 6529 003a 5A68     		ldr	r2, [r3, #4]
 6530 003c 7B68     		ldr	r3, [r7, #4]
 6531 003e 1B68     		ldr	r3, [r3]
 6532 0040 22F40002 		bic	r2, r2, #8388608
 6533 0044 5A60     		str	r2, [r3, #4]
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 6534              		.loc 1 2916 21 discriminator 2
 6535 0046 7B68     		ldr	r3, [r7, #4]
 6536 0048 2022     		movs	r2, #32
 6537 004a 9A67     		str	r2, [r3, #120]
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 6538              		.loc 1 2919 7 discriminator 2
 6539 004c 7B68     		ldr	r3, [r7, #4]
 6540 004e 0022     		movs	r2, #0
 6541 0050 83F87420 		strb	r2, [r3, #116]
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
 6542              		.loc 1 2921 14 discriminator 2
 6543 0054 0023     		movs	r3, #0
 6544 0056 02E0     		b	.L354
 6545              	.L352:
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_BUSY;
 6546              		.loc 1 2925 14
 6547 0058 0223     		movs	r3, #2
 6548 005a 00E0     		b	.L354
 6549              	.L351:
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 6550              		.loc 1 2930 12
 6551 005c 0123     		movs	r3, #1
 6552              	.L354:
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6553              		.loc 1 2932 1
 6554 005e 1846     		mov	r0, r3
 6555 0060 0C37     		adds	r7, r7, #12
 6556              	.LCFI189:
 6557              		.cfi_def_cfa_offset 4
 6558 0062 BD46     		mov	sp, r7
 6559              	.LCFI190:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 190


 6560              		.cfi_def_cfa_register 13
 6561              		@ sp needed
 6562 0064 5DF8047B 		ldr	r7, [sp], #4
 6563              	.LCFI191:
 6564              		.cfi_restore 7
 6565              		.cfi_def_cfa_offset 0
 6566 0068 7047     		bx	lr
 6567              	.L356:
 6568 006a 00BF     		.align	2
 6569              	.L355:
 6570 006c 00800040 		.word	1073774592
 6571              		.cfi_endproc
 6572              	.LFE326:
 6574              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 6575              		.align	1
 6576              		.global	HAL_MultiProcessor_EnableMuteMode
 6577              		.syntax unified
 6578              		.thumb
 6579              		.thumb_func
 6580              		.fpu fpv4-sp-d16
 6582              	HAL_MultiProcessor_EnableMuteMode:
 6583              	.LFB327:
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6584              		.loc 1 2941 1
 6585              		.cfi_startproc
 6586              		@ args = 0, pretend = 0, frame = 32
 6587              		@ frame_needed = 1, uses_anonymous_args = 0
 6588 0000 80B5     		push	{r7, lr}
 6589              	.LCFI192:
 6590              		.cfi_def_cfa_offset 8
 6591              		.cfi_offset 7, -8
 6592              		.cfi_offset 14, -4
 6593 0002 88B0     		sub	sp, sp, #32
 6594              	.LCFI193:
 6595              		.cfi_def_cfa_offset 40
 6596 0004 00AF     		add	r7, sp, #0
 6597              	.LCFI194:
 6598              		.cfi_def_cfa_register 7
 6599 0006 7860     		str	r0, [r7, #4]
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6600              		.loc 1 2942 3
 6601 0008 7B68     		ldr	r3, [r7, #4]
 6602 000a 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 6603 000e 012B     		cmp	r3, #1
 6604 0010 01D1     		bne	.L358
 6605              		.loc 1 2942 3 is_stmt 0 discriminator 1
 6606 0012 0223     		movs	r3, #2
 6607 0014 26E0     		b	.L359
 6608              	.L358:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 191


 6609              		.loc 1 2942 3 discriminator 2
 6610 0016 7B68     		ldr	r3, [r7, #4]
 6611 0018 0122     		movs	r2, #1
 6612 001a 83F87420 		strb	r2, [r3, #116]
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6613              		.loc 1 2944 17 is_stmt 1 discriminator 2
 6614 001e 7B68     		ldr	r3, [r7, #4]
 6615 0020 2422     		movs	r2, #36
 6616 0022 9A67     		str	r2, [r3, #120]
 6617              	.L362:
 6618              	.LBB633:
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 6619              		.loc 1 2947 3 discriminator 1
 6620 0024 7B68     		ldr	r3, [r7, #4]
 6621 0026 1B68     		ldr	r3, [r3]
 6622 0028 FB60     		str	r3, [r7, #12]
 6623              	.LBB634:
 6624              	.LBB635:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6625              		.loc 2 1155 4 discriminator 1
 6626 002a FB68     		ldr	r3, [r7, #12]
 6627              		.syntax unified
 6628              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6629 002c 53E8003F 		ldrex r3, [r3]
 6630              	@ 0 "" 2
 6631              		.thumb
 6632              		.syntax unified
 6633 0030 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6634              		.loc 2 1156 10 discriminator 1
 6635 0032 BB68     		ldr	r3, [r7, #8]
 6636              	.LBE635:
 6637              	.LBE634:
 6638              		.loc 1 2947 3 discriminator 1
 6639 0034 43F40053 		orr	r3, r3, #8192
 6640 0038 FB61     		str	r3, [r7, #28]
 6641 003a 7B68     		ldr	r3, [r7, #4]
 6642 003c 1B68     		ldr	r3, [r3]
 6643 003e 1A46     		mov	r2, r3
 6644 0040 FB69     		ldr	r3, [r7, #28]
 6645 0042 BB61     		str	r3, [r7, #24]
 6646 0044 7A61     		str	r2, [r7, #20]
 6647              	.LBB636:
 6648              	.LBB637:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6649              		.loc 2 1206 4 discriminator 1
 6650 0046 7969     		ldr	r1, [r7, #20]
 6651 0048 BA69     		ldr	r2, [r7, #24]
 6652              		.syntax unified
 6653              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6654 004a 41E80023 		strex r3, r2, [r1]
 6655              	@ 0 "" 2
 6656              		.thumb
 6657              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 192


 6658 004e 3B61     		str	r3, [r7, #16]
 6659              		.loc 2 1207 10 discriminator 1
 6660 0050 3B69     		ldr	r3, [r7, #16]
 6661              	.LBE637:
 6662              	.LBE636:
 6663              		.loc 1 2947 3 discriminator 1
 6664 0052 002B     		cmp	r3, #0
 6665 0054 E6D1     		bne	.L362
 6666              	.LBE633:
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6667              		.loc 1 2949 17
 6668 0056 7B68     		ldr	r3, [r7, #4]
 6669 0058 2022     		movs	r2, #32
 6670 005a 9A67     		str	r2, [r3, #120]
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 6671              		.loc 1 2951 11
 6672 005c 7868     		ldr	r0, [r7, #4]
 6673 005e FFF7FEFF 		bl	UART_CheckIdleState
 6674 0062 0346     		mov	r3, r0
 6675              	.L359:
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6676              		.loc 1 2952 1
 6677 0064 1846     		mov	r0, r3
 6678 0066 2037     		adds	r7, r7, #32
 6679              	.LCFI195:
 6680              		.cfi_def_cfa_offset 8
 6681 0068 BD46     		mov	sp, r7
 6682              	.LCFI196:
 6683              		.cfi_def_cfa_register 13
 6684              		@ sp needed
 6685 006a 80BD     		pop	{r7, pc}
 6686              		.cfi_endproc
 6687              	.LFE327:
 6689              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 6690              		.align	1
 6691              		.global	HAL_MultiProcessor_DisableMuteMode
 6692              		.syntax unified
 6693              		.thumb
 6694              		.thumb_func
 6695              		.fpu fpv4-sp-d16
 6697              	HAL_MultiProcessor_DisableMuteMode:
 6698              	.LFB328:
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6699              		.loc 1 2961 1
 6700              		.cfi_startproc
 6701              		@ args = 0, pretend = 0, frame = 32
 6702              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 193


 6703 0000 80B5     		push	{r7, lr}
 6704              	.LCFI197:
 6705              		.cfi_def_cfa_offset 8
 6706              		.cfi_offset 7, -8
 6707              		.cfi_offset 14, -4
 6708 0002 88B0     		sub	sp, sp, #32
 6709              	.LCFI198:
 6710              		.cfi_def_cfa_offset 40
 6711 0004 00AF     		add	r7, sp, #0
 6712              	.LCFI199:
 6713              		.cfi_def_cfa_register 7
 6714 0006 7860     		str	r0, [r7, #4]
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6715              		.loc 1 2962 3
 6716 0008 7B68     		ldr	r3, [r7, #4]
 6717 000a 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 6718 000e 012B     		cmp	r3, #1
 6719 0010 01D1     		bne	.L364
 6720              		.loc 1 2962 3 is_stmt 0 discriminator 1
 6721 0012 0223     		movs	r3, #2
 6722 0014 26E0     		b	.L365
 6723              	.L364:
 6724              		.loc 1 2962 3 discriminator 2
 6725 0016 7B68     		ldr	r3, [r7, #4]
 6726 0018 0122     		movs	r2, #1
 6727 001a 83F87420 		strb	r2, [r3, #116]
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6728              		.loc 1 2964 17 is_stmt 1 discriminator 2
 6729 001e 7B68     		ldr	r3, [r7, #4]
 6730 0020 2422     		movs	r2, #36
 6731 0022 9A67     		str	r2, [r3, #120]
 6732              	.L368:
 6733              	.LBB638:
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 6734              		.loc 1 2967 3 discriminator 1
 6735 0024 7B68     		ldr	r3, [r7, #4]
 6736 0026 1B68     		ldr	r3, [r3]
 6737 0028 FB60     		str	r3, [r7, #12]
 6738              	.LBB639:
 6739              	.LBB640:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6740              		.loc 2 1155 4 discriminator 1
 6741 002a FB68     		ldr	r3, [r7, #12]
 6742              		.syntax unified
 6743              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6744 002c 53E8003F 		ldrex r3, [r3]
 6745              	@ 0 "" 2
 6746              		.thumb
 6747              		.syntax unified
 6748 0030 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6749              		.loc 2 1156 10 discriminator 1
 6750 0032 BB68     		ldr	r3, [r7, #8]
 6751              	.LBE640:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 194


 6752              	.LBE639:
 6753              		.loc 1 2967 3 discriminator 1
 6754 0034 23F40053 		bic	r3, r3, #8192
 6755 0038 FB61     		str	r3, [r7, #28]
 6756 003a 7B68     		ldr	r3, [r7, #4]
 6757 003c 1B68     		ldr	r3, [r3]
 6758 003e 1A46     		mov	r2, r3
 6759 0040 FB69     		ldr	r3, [r7, #28]
 6760 0042 BB61     		str	r3, [r7, #24]
 6761 0044 7A61     		str	r2, [r7, #20]
 6762              	.LBB641:
 6763              	.LBB642:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6764              		.loc 2 1206 4 discriminator 1
 6765 0046 7969     		ldr	r1, [r7, #20]
 6766 0048 BA69     		ldr	r2, [r7, #24]
 6767              		.syntax unified
 6768              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6769 004a 41E80023 		strex r3, r2, [r1]
 6770              	@ 0 "" 2
 6771              		.thumb
 6772              		.syntax unified
 6773 004e 3B61     		str	r3, [r7, #16]
 6774              		.loc 2 1207 10 discriminator 1
 6775 0050 3B69     		ldr	r3, [r7, #16]
 6776              	.LBE642:
 6777              	.LBE641:
 6778              		.loc 1 2967 3 discriminator 1
 6779 0052 002B     		cmp	r3, #0
 6780 0054 E6D1     		bne	.L368
 6781              	.LBE638:
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6782              		.loc 1 2969 17
 6783 0056 7B68     		ldr	r3, [r7, #4]
 6784 0058 2022     		movs	r2, #32
 6785 005a 9A67     		str	r2, [r3, #120]
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 6786              		.loc 1 2971 11
 6787 005c 7868     		ldr	r0, [r7, #4]
 6788 005e FFF7FEFF 		bl	UART_CheckIdleState
 6789 0062 0346     		mov	r3, r0
 6790              	.L365:
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6791              		.loc 1 2972 1
 6792 0064 1846     		mov	r0, r3
 6793 0066 2037     		adds	r7, r7, #32
 6794              	.LCFI200:
 6795              		.cfi_def_cfa_offset 8
 6796 0068 BD46     		mov	sp, r7
 6797              	.LCFI201:
 6798              		.cfi_def_cfa_register 13
 6799              		@ sp needed
 6800 006a 80BD     		pop	{r7, pc}
 6801              		.cfi_endproc
 6802              	.LFE328:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 195


 6804              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 6805              		.align	1
 6806              		.global	HAL_MultiProcessor_EnterMuteMode
 6807              		.syntax unified
 6808              		.thumb
 6809              		.thumb_func
 6810              		.fpu fpv4-sp-d16
 6812              	HAL_MultiProcessor_EnterMuteMode:
 6813              	.LFB329:
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6814              		.loc 1 2981 1
 6815              		.cfi_startproc
 6816              		@ args = 0, pretend = 0, frame = 8
 6817              		@ frame_needed = 1, uses_anonymous_args = 0
 6818              		@ link register save eliminated.
 6819 0000 80B4     		push	{r7}
 6820              	.LCFI202:
 6821              		.cfi_def_cfa_offset 4
 6822              		.cfi_offset 7, -4
 6823 0002 83B0     		sub	sp, sp, #12
 6824              	.LCFI203:
 6825              		.cfi_def_cfa_offset 16
 6826 0004 00AF     		add	r7, sp, #0
 6827              	.LCFI204:
 6828              		.cfi_def_cfa_register 7
 6829 0006 7860     		str	r0, [r7, #4]
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 6830              		.loc 1 2982 3
 6831 0008 7B68     		ldr	r3, [r7, #4]
 6832 000a 1B68     		ldr	r3, [r3]
 6833 000c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 6834 000e 9AB2     		uxth	r2, r3
 6835 0010 7B68     		ldr	r3, [r7, #4]
 6836 0012 1B68     		ldr	r3, [r3]
 6837 0014 42F00402 		orr	r2, r2, #4
 6838 0018 92B2     		uxth	r2, r2
 6839 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6840              		.loc 1 2983 1
 6841 001c 00BF     		nop
 6842 001e 0C37     		adds	r7, r7, #12
 6843              	.LCFI205:
 6844              		.cfi_def_cfa_offset 4
 6845 0020 BD46     		mov	sp, r7
 6846              	.LCFI206:
 6847              		.cfi_def_cfa_register 13
 6848              		@ sp needed
 6849 0022 5DF8047B 		ldr	r7, [sp], #4
 6850              	.LCFI207:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 196


 6851              		.cfi_restore 7
 6852              		.cfi_def_cfa_offset 0
 6853 0026 7047     		bx	lr
 6854              		.cfi_endproc
 6855              	.LFE329:
 6857              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 6858              		.align	1
 6859              		.global	HAL_HalfDuplex_EnableTransmitter
 6860              		.syntax unified
 6861              		.thumb
 6862              		.thumb_func
 6863              		.fpu fpv4-sp-d16
 6865              	HAL_HalfDuplex_EnableTransmitter:
 6866              	.LFB330:
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6867              		.loc 1 2991 1
 6868              		.cfi_startproc
 6869              		@ args = 0, pretend = 0, frame = 56
 6870              		@ frame_needed = 1, uses_anonymous_args = 0
 6871              		@ link register save eliminated.
 6872 0000 80B4     		push	{r7}
 6873              	.LCFI208:
 6874              		.cfi_def_cfa_offset 4
 6875              		.cfi_offset 7, -4
 6876 0002 8FB0     		sub	sp, sp, #60
 6877              	.LCFI209:
 6878              		.cfi_def_cfa_offset 64
 6879 0004 00AF     		add	r7, sp, #0
 6880              	.LCFI210:
 6881              		.cfi_def_cfa_register 7
 6882 0006 7860     		str	r0, [r7, #4]
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6883              		.loc 1 2992 3
 6884 0008 7B68     		ldr	r3, [r7, #4]
 6885 000a 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 6886 000e 012B     		cmp	r3, #1
 6887 0010 01D1     		bne	.L371
 6888              		.loc 1 2992 3 is_stmt 0 discriminator 1
 6889 0012 0223     		movs	r3, #2
 6890 0014 40E0     		b	.L372
 6891              	.L371:
 6892              		.loc 1 2992 3 discriminator 2
 6893 0016 7B68     		ldr	r3, [r7, #4]
 6894 0018 0122     		movs	r2, #1
 6895 001a 83F87420 		strb	r2, [r3, #116]
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6896              		.loc 1 2993 17 is_stmt 1 discriminator 2
 6897 001e 7B68     		ldr	r3, [r7, #4]
 6898 0020 2422     		movs	r2, #36
 6899 0022 9A67     		str	r2, [r3, #120]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 197


 6900              	.L375:
 6901              	.LBB643:
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 6902              		.loc 1 2996 3 discriminator 1
 6903 0024 7B68     		ldr	r3, [r7, #4]
 6904 0026 1B68     		ldr	r3, [r3]
 6905 0028 3B62     		str	r3, [r7, #32]
 6906              	.LBB644:
 6907              	.LBB645:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6908              		.loc 2 1155 4 discriminator 1
 6909 002a 3B6A     		ldr	r3, [r7, #32]
 6910              		.syntax unified
 6911              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6912 002c 53E8003F 		ldrex r3, [r3]
 6913              	@ 0 "" 2
 6914              		.thumb
 6915              		.syntax unified
 6916 0030 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6917              		.loc 2 1156 10 discriminator 1
 6918 0032 FB69     		ldr	r3, [r7, #28]
 6919              	.LBE645:
 6920              	.LBE644:
 6921              		.loc 1 2996 3 discriminator 1
 6922 0034 23F00C03 		bic	r3, r3, #12
 6923 0038 7B63     		str	r3, [r7, #52]
 6924 003a 7B68     		ldr	r3, [r7, #4]
 6925 003c 1B68     		ldr	r3, [r3]
 6926 003e 1A46     		mov	r2, r3
 6927 0040 7B6B     		ldr	r3, [r7, #52]
 6928 0042 FB62     		str	r3, [r7, #44]
 6929 0044 BA62     		str	r2, [r7, #40]
 6930              	.LBB646:
 6931              	.LBB647:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6932              		.loc 2 1206 4 discriminator 1
 6933 0046 B96A     		ldr	r1, [r7, #40]
 6934 0048 FA6A     		ldr	r2, [r7, #44]
 6935              		.syntax unified
 6936              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6937 004a 41E80023 		strex r3, r2, [r1]
 6938              	@ 0 "" 2
 6939              		.thumb
 6940              		.syntax unified
 6941 004e 7B62     		str	r3, [r7, #36]
 6942              		.loc 2 1207 10 discriminator 1
 6943 0050 7B6A     		ldr	r3, [r7, #36]
 6944              	.LBE647:
 6945              	.LBE646:
 6946              		.loc 1 2996 3 discriminator 1
 6947 0052 002B     		cmp	r3, #0
 6948 0054 E6D1     		bne	.L375
 6949              	.L378:
 6950              	.LBE643:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 198


 6951              	.LBB648:
2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 6952              		.loc 1 2999 3 discriminator 1
 6953 0056 7B68     		ldr	r3, [r7, #4]
 6954 0058 1B68     		ldr	r3, [r3]
 6955 005a FB60     		str	r3, [r7, #12]
 6956              	.LBB649:
 6957              	.LBB650:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6958              		.loc 2 1155 4 discriminator 1
 6959 005c FB68     		ldr	r3, [r7, #12]
 6960              		.syntax unified
 6961              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6962 005e 53E8003F 		ldrex r3, [r3]
 6963              	@ 0 "" 2
 6964              		.thumb
 6965              		.syntax unified
 6966 0062 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6967              		.loc 2 1156 10 discriminator 1
 6968 0064 BB68     		ldr	r3, [r7, #8]
 6969              	.LBE650:
 6970              	.LBE649:
 6971              		.loc 1 2999 3 discriminator 1
 6972 0066 43F00803 		orr	r3, r3, #8
 6973 006a 3B63     		str	r3, [r7, #48]
 6974 006c 7B68     		ldr	r3, [r7, #4]
 6975 006e 1B68     		ldr	r3, [r3]
 6976 0070 1A46     		mov	r2, r3
 6977 0072 3B6B     		ldr	r3, [r7, #48]
 6978 0074 BB61     		str	r3, [r7, #24]
 6979 0076 7A61     		str	r2, [r7, #20]
 6980              	.LBB651:
 6981              	.LBB652:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6982              		.loc 2 1206 4 discriminator 1
 6983 0078 7969     		ldr	r1, [r7, #20]
 6984 007a BA69     		ldr	r2, [r7, #24]
 6985              		.syntax unified
 6986              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6987 007c 41E80023 		strex r3, r2, [r1]
 6988              	@ 0 "" 2
 6989              		.thumb
 6990              		.syntax unified
 6991 0080 3B61     		str	r3, [r7, #16]
 6992              		.loc 2 1207 10 discriminator 1
 6993 0082 3B69     		ldr	r3, [r7, #16]
 6994              	.LBE652:
 6995              	.LBE651:
 6996              		.loc 1 2999 3 discriminator 1
 6997 0084 002B     		cmp	r3, #0
 6998 0086 E6D1     		bne	.L378
 6999              	.LBE648:
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 199


 7000              		.loc 1 3001 17
 7001 0088 7B68     		ldr	r3, [r7, #4]
 7002 008a 2022     		movs	r2, #32
 7003 008c 9A67     		str	r2, [r3, #120]
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7004              		.loc 1 3003 3
 7005 008e 7B68     		ldr	r3, [r7, #4]
 7006 0090 0022     		movs	r2, #0
 7007 0092 83F87420 		strb	r2, [r3, #116]
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 7008              		.loc 1 3005 10
 7009 0096 0023     		movs	r3, #0
 7010              	.L372:
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7011              		.loc 1 3006 1
 7012 0098 1846     		mov	r0, r3
 7013 009a 3C37     		adds	r7, r7, #60
 7014              	.LCFI211:
 7015              		.cfi_def_cfa_offset 4
 7016 009c BD46     		mov	sp, r7
 7017              	.LCFI212:
 7018              		.cfi_def_cfa_register 13
 7019              		@ sp needed
 7020 009e 5DF8047B 		ldr	r7, [sp], #4
 7021              	.LCFI213:
 7022              		.cfi_restore 7
 7023              		.cfi_def_cfa_offset 0
 7024 00a2 7047     		bx	lr
 7025              		.cfi_endproc
 7026              	.LFE330:
 7028              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 7029              		.align	1
 7030              		.global	HAL_HalfDuplex_EnableReceiver
 7031              		.syntax unified
 7032              		.thumb
 7033              		.thumb_func
 7034              		.fpu fpv4-sp-d16
 7036              	HAL_HalfDuplex_EnableReceiver:
 7037              	.LFB331:
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7038              		.loc 1 3014 1
 7039              		.cfi_startproc
 7040              		@ args = 0, pretend = 0, frame = 56
 7041              		@ frame_needed = 1, uses_anonymous_args = 0
 7042              		@ link register save eliminated.
 7043 0000 80B4     		push	{r7}
 7044              	.LCFI214:
 7045              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 200


 7046              		.cfi_offset 7, -4
 7047 0002 8FB0     		sub	sp, sp, #60
 7048              	.LCFI215:
 7049              		.cfi_def_cfa_offset 64
 7050 0004 00AF     		add	r7, sp, #0
 7051              	.LCFI216:
 7052              		.cfi_def_cfa_register 7
 7053 0006 7860     		str	r0, [r7, #4]
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 7054              		.loc 1 3015 3
 7055 0008 7B68     		ldr	r3, [r7, #4]
 7056 000a 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 7057 000e 012B     		cmp	r3, #1
 7058 0010 01D1     		bne	.L380
 7059              		.loc 1 3015 3 is_stmt 0 discriminator 1
 7060 0012 0223     		movs	r3, #2
 7061 0014 40E0     		b	.L381
 7062              	.L380:
 7063              		.loc 1 3015 3 discriminator 2
 7064 0016 7B68     		ldr	r3, [r7, #4]
 7065 0018 0122     		movs	r2, #1
 7066 001a 83F87420 		strb	r2, [r3, #116]
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7067              		.loc 1 3016 17 is_stmt 1 discriminator 2
 7068 001e 7B68     		ldr	r3, [r7, #4]
 7069 0020 2422     		movs	r2, #36
 7070 0022 9A67     		str	r2, [r3, #120]
 7071              	.L384:
 7072              	.LBB653:
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 7073              		.loc 1 3019 3 discriminator 1
 7074 0024 7B68     		ldr	r3, [r7, #4]
 7075 0026 1B68     		ldr	r3, [r3]
 7076 0028 3B62     		str	r3, [r7, #32]
 7077              	.LBB654:
 7078              	.LBB655:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7079              		.loc 2 1155 4 discriminator 1
 7080 002a 3B6A     		ldr	r3, [r7, #32]
 7081              		.syntax unified
 7082              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7083 002c 53E8003F 		ldrex r3, [r3]
 7084              	@ 0 "" 2
 7085              		.thumb
 7086              		.syntax unified
 7087 0030 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7088              		.loc 2 1156 10 discriminator 1
 7089 0032 FB69     		ldr	r3, [r7, #28]
 7090              	.LBE655:
 7091              	.LBE654:
 7092              		.loc 1 3019 3 discriminator 1
 7093 0034 23F00C03 		bic	r3, r3, #12
 7094 0038 7B63     		str	r3, [r7, #52]
 7095 003a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 201


 7096 003c 1B68     		ldr	r3, [r3]
 7097 003e 1A46     		mov	r2, r3
 7098 0040 7B6B     		ldr	r3, [r7, #52]
 7099 0042 FB62     		str	r3, [r7, #44]
 7100 0044 BA62     		str	r2, [r7, #40]
 7101              	.LBB656:
 7102              	.LBB657:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7103              		.loc 2 1206 4 discriminator 1
 7104 0046 B96A     		ldr	r1, [r7, #40]
 7105 0048 FA6A     		ldr	r2, [r7, #44]
 7106              		.syntax unified
 7107              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7108 004a 41E80023 		strex r3, r2, [r1]
 7109              	@ 0 "" 2
 7110              		.thumb
 7111              		.syntax unified
 7112 004e 7B62     		str	r3, [r7, #36]
 7113              		.loc 2 1207 10 discriminator 1
 7114 0050 7B6A     		ldr	r3, [r7, #36]
 7115              	.LBE657:
 7116              	.LBE656:
 7117              		.loc 1 3019 3 discriminator 1
 7118 0052 002B     		cmp	r3, #0
 7119 0054 E6D1     		bne	.L384
 7120              	.L387:
 7121              	.LBE653:
 7122              	.LBB658:
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 7123              		.loc 1 3022 3 discriminator 1
 7124 0056 7B68     		ldr	r3, [r7, #4]
 7125 0058 1B68     		ldr	r3, [r3]
 7126 005a FB60     		str	r3, [r7, #12]
 7127              	.LBB659:
 7128              	.LBB660:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7129              		.loc 2 1155 4 discriminator 1
 7130 005c FB68     		ldr	r3, [r7, #12]
 7131              		.syntax unified
 7132              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7133 005e 53E8003F 		ldrex r3, [r3]
 7134              	@ 0 "" 2
 7135              		.thumb
 7136              		.syntax unified
 7137 0062 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7138              		.loc 2 1156 10 discriminator 1
 7139 0064 BB68     		ldr	r3, [r7, #8]
 7140              	.LBE660:
 7141              	.LBE659:
 7142              		.loc 1 3022 3 discriminator 1
 7143 0066 43F00403 		orr	r3, r3, #4
 7144 006a 3B63     		str	r3, [r7, #48]
 7145 006c 7B68     		ldr	r3, [r7, #4]
 7146 006e 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 202


 7147 0070 1A46     		mov	r2, r3
 7148 0072 3B6B     		ldr	r3, [r7, #48]
 7149 0074 BB61     		str	r3, [r7, #24]
 7150 0076 7A61     		str	r2, [r7, #20]
 7151              	.LBB661:
 7152              	.LBB662:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7153              		.loc 2 1206 4 discriminator 1
 7154 0078 7969     		ldr	r1, [r7, #20]
 7155 007a BA69     		ldr	r2, [r7, #24]
 7156              		.syntax unified
 7157              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7158 007c 41E80023 		strex r3, r2, [r1]
 7159              	@ 0 "" 2
 7160              		.thumb
 7161              		.syntax unified
 7162 0080 3B61     		str	r3, [r7, #16]
 7163              		.loc 2 1207 10 discriminator 1
 7164 0082 3B69     		ldr	r3, [r7, #16]
 7165              	.LBE662:
 7166              	.LBE661:
 7167              		.loc 1 3022 3 discriminator 1
 7168 0084 002B     		cmp	r3, #0
 7169 0086 E6D1     		bne	.L387
 7170              	.LBE658:
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7171              		.loc 1 3024 17
 7172 0088 7B68     		ldr	r3, [r7, #4]
 7173 008a 2022     		movs	r2, #32
 7174 008c 9A67     		str	r2, [r3, #120]
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7175              		.loc 1 3026 3
 7176 008e 7B68     		ldr	r3, [r7, #4]
 7177 0090 0022     		movs	r2, #0
 7178 0092 83F87420 		strb	r2, [r3, #116]
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 7179              		.loc 1 3028 10
 7180 0096 0023     		movs	r3, #0
 7181              	.L381:
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7182              		.loc 1 3029 1
 7183 0098 1846     		mov	r0, r3
 7184 009a 3C37     		adds	r7, r7, #60
 7185              	.LCFI217:
 7186              		.cfi_def_cfa_offset 4
 7187 009c BD46     		mov	sp, r7
 7188              	.LCFI218:
 7189              		.cfi_def_cfa_register 13
 7190              		@ sp needed
 7191 009e 5DF8047B 		ldr	r7, [sp], #4
 7192              	.LCFI219:
 7193              		.cfi_restore 7
 7194              		.cfi_def_cfa_offset 0
 7195 00a2 7047     		bx	lr
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 203


 7196              		.cfi_endproc
 7197              	.LFE331:
 7199              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 7200              		.align	1
 7201              		.global	HAL_LIN_SendBreak
 7202              		.syntax unified
 7203              		.thumb
 7204              		.thumb_func
 7205              		.fpu fpv4-sp-d16
 7207              	HAL_LIN_SendBreak:
 7208              	.LFB332:
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7209              		.loc 1 3038 1
 7210              		.cfi_startproc
 7211              		@ args = 0, pretend = 0, frame = 8
 7212              		@ frame_needed = 1, uses_anonymous_args = 0
 7213              		@ link register save eliminated.
 7214 0000 80B4     		push	{r7}
 7215              	.LCFI220:
 7216              		.cfi_def_cfa_offset 4
 7217              		.cfi_offset 7, -4
 7218 0002 83B0     		sub	sp, sp, #12
 7219              	.LCFI221:
 7220              		.cfi_def_cfa_offset 16
 7221 0004 00AF     		add	r7, sp, #0
 7222              	.LCFI222:
 7223              		.cfi_def_cfa_register 7
 7224 0006 7860     		str	r0, [r7, #4]
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 7225              		.loc 1 3042 3
 7226 0008 7B68     		ldr	r3, [r7, #4]
 7227 000a 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 7228 000e 012B     		cmp	r3, #1
 7229 0010 01D1     		bne	.L389
 7230              		.loc 1 3042 3 is_stmt 0 discriminator 1
 7231 0012 0223     		movs	r3, #2
 7232 0014 18E0     		b	.L390
 7233              	.L389:
 7234              		.loc 1 3042 3 discriminator 2
 7235 0016 7B68     		ldr	r3, [r7, #4]
 7236 0018 0122     		movs	r2, #1
 7237 001a 83F87420 		strb	r2, [r3, #116]
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 7238              		.loc 1 3044 17 is_stmt 1 discriminator 2
 7239 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 204


 7240 0020 2422     		movs	r2, #36
 7241 0022 9A67     		str	r2, [r3, #120]
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 7242              		.loc 1 3047 3 discriminator 2
 7243 0024 7B68     		ldr	r3, [r7, #4]
 7244 0026 1B68     		ldr	r3, [r3]
 7245 0028 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7246 002a 9AB2     		uxth	r2, r3
 7247 002c 7B68     		ldr	r3, [r7, #4]
 7248 002e 1B68     		ldr	r3, [r3]
 7249 0030 42F00202 		orr	r2, r2, #2
 7250 0034 92B2     		uxth	r2, r2
 7251 0036 1A83     		strh	r2, [r3, #24]	@ movhi
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7252              		.loc 1 3049 17 discriminator 2
 7253 0038 7B68     		ldr	r3, [r7, #4]
 7254 003a 2022     		movs	r2, #32
 7255 003c 9A67     		str	r2, [r3, #120]
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7256              		.loc 1 3051 3 discriminator 2
 7257 003e 7B68     		ldr	r3, [r7, #4]
 7258 0040 0022     		movs	r2, #0
 7259 0042 83F87420 		strb	r2, [r3, #116]
3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 7260              		.loc 1 3053 10 discriminator 2
 7261 0046 0023     		movs	r3, #0
 7262              	.L390:
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7263              		.loc 1 3054 1
 7264 0048 1846     		mov	r0, r3
 7265 004a 0C37     		adds	r7, r7, #12
 7266              	.LCFI223:
 7267              		.cfi_def_cfa_offset 4
 7268 004c BD46     		mov	sp, r7
 7269              	.LCFI224:
 7270              		.cfi_def_cfa_register 13
 7271              		@ sp needed
 7272 004e 5DF8047B 		ldr	r7, [sp], #4
 7273              	.LCFI225:
 7274              		.cfi_restore 7
 7275              		.cfi_def_cfa_offset 0
 7276 0052 7047     		bx	lr
 7277              		.cfi_endproc
 7278              	.LFE332:
 7280              		.section	.text.HAL_UART_GetState,"ax",%progbits
 7281              		.align	1
 7282              		.global	HAL_UART_GetState
 7283              		.syntax unified
 7284              		.thumb
 7285              		.thumb_func
 7286              		.fpu fpv4-sp-d16
 7288              	HAL_UART_GetState:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 205


 7289              	.LFB333:
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7290              		.loc 1 3083 1
 7291              		.cfi_startproc
 7292              		@ args = 0, pretend = 0, frame = 16
 7293              		@ frame_needed = 1, uses_anonymous_args = 0
 7294              		@ link register save eliminated.
 7295 0000 80B4     		push	{r7}
 7296              	.LCFI226:
 7297              		.cfi_def_cfa_offset 4
 7298              		.cfi_offset 7, -4
 7299 0002 85B0     		sub	sp, sp, #20
 7300              	.LCFI227:
 7301              		.cfi_def_cfa_offset 24
 7302 0004 00AF     		add	r7, sp, #0
 7303              	.LCFI228:
 7304              		.cfi_def_cfa_register 7
 7305 0006 7860     		str	r0, [r7, #4]
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1;
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp2;
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
 7306              		.loc 1 3086 9
 7307 0008 7B68     		ldr	r3, [r7, #4]
 7308 000a 9B6F     		ldr	r3, [r3, #120]
 7309 000c FB60     		str	r3, [r7, #12]
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 7310              		.loc 1 3087 9
 7311 000e 7B68     		ldr	r3, [r7, #4]
 7312 0010 DB6F     		ldr	r3, [r3, #124]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 206


 7313 0012 BB60     		str	r3, [r7, #8]
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 7314              		.loc 1 3089 10
 7315 0014 FA68     		ldr	r2, [r7, #12]
 7316 0016 BB68     		ldr	r3, [r7, #8]
 7317 0018 1343     		orrs	r3, r3, r2
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7318              		.loc 1 3090 1
 7319 001a 1846     		mov	r0, r3
 7320 001c 1437     		adds	r7, r7, #20
 7321              	.LCFI229:
 7322              		.cfi_def_cfa_offset 4
 7323 001e BD46     		mov	sp, r7
 7324              	.LCFI230:
 7325              		.cfi_def_cfa_register 13
 7326              		@ sp needed
 7327 0020 5DF8047B 		ldr	r7, [sp], #4
 7328              	.LCFI231:
 7329              		.cfi_restore 7
 7330              		.cfi_def_cfa_offset 0
 7331 0024 7047     		bx	lr
 7332              		.cfi_endproc
 7333              	.LFE333:
 7335              		.section	.text.HAL_UART_GetError,"ax",%progbits
 7336              		.align	1
 7337              		.global	HAL_UART_GetError
 7338              		.syntax unified
 7339              		.thumb
 7340              		.thumb_func
 7341              		.fpu fpv4-sp-d16
 7343              	HAL_UART_GetError:
 7344              	.LFB334:
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval UART Error Code
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7345              		.loc 1 3099 1
 7346              		.cfi_startproc
 7347              		@ args = 0, pretend = 0, frame = 8
 7348              		@ frame_needed = 1, uses_anonymous_args = 0
 7349              		@ link register save eliminated.
 7350 0000 80B4     		push	{r7}
 7351              	.LCFI232:
 7352              		.cfi_def_cfa_offset 4
 7353              		.cfi_offset 7, -4
 7354 0002 83B0     		sub	sp, sp, #12
 7355              	.LCFI233:
 7356              		.cfi_def_cfa_offset 16
 7357 0004 00AF     		add	r7, sp, #0
 7358              	.LCFI234:
 7359              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 207


 7360 0006 7860     		str	r0, [r7, #4]
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 7361              		.loc 1 3100 15
 7362 0008 7B68     		ldr	r3, [r7, #4]
 7363 000a D3F88030 		ldr	r3, [r3, #128]
3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7364              		.loc 1 3101 1
 7365 000e 1846     		mov	r0, r3
 7366 0010 0C37     		adds	r7, r7, #12
 7367              	.LCFI235:
 7368              		.cfi_def_cfa_offset 4
 7369 0012 BD46     		mov	sp, r7
 7370              	.LCFI236:
 7371              		.cfi_def_cfa_register 13
 7372              		@ sp needed
 7373 0014 5DF8047B 		ldr	r7, [sp], #4
 7374              	.LCFI237:
 7375              		.cfi_restore 7
 7376              		.cfi_def_cfa_offset 0
 7377 0018 7047     		bx	lr
 7378              		.cfi_endproc
 7379              	.LFE334:
 7381              		.global	__aeabi_uldivmod
 7382              		.section	.text.UART_SetConfig,"ax",%progbits
 7383              		.align	1
 7384              		.global	UART_SetConfig
 7385              		.syntax unified
 7386              		.thumb
 7387              		.thumb_func
 7388              		.fpu fpv4-sp-d16
 7390              	UART_SetConfig:
 7391              	.LFB335:
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
3112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval none
3118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init the UART Callback settings */
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
3126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 208


3127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
3129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
3131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7392              		.loc 1 3147 1
 7393              		.cfi_startproc
 7394              		@ args = 0, pretend = 0, frame = 32
 7395              		@ frame_needed = 1, uses_anonymous_args = 0
 7396 0000 B0B5     		push	{r4, r5, r7, lr}
 7397              	.LCFI238:
 7398              		.cfi_def_cfa_offset 16
 7399              		.cfi_offset 4, -16
 7400              		.cfi_offset 5, -12
 7401              		.cfi_offset 7, -8
 7402              		.cfi_offset 14, -4
 7403 0002 88B0     		sub	sp, sp, #32
 7404              	.LCFI239:
 7405              		.cfi_def_cfa_offset 48
 7406 0004 00AF     		add	r7, sp, #0
 7407              	.LCFI240:
 7408              		.cfi_def_cfa_register 7
 7409 0006 7860     		str	r0, [r7, #4]
3148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg;
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp;
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv;
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 7410              		.loc 1 3152 21
 7411 0008 0023     		movs	r3, #0
 7412 000a BB76     		strb	r3, [r7, #26]
3153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t pclk;
3157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
3161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 209


3163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
3164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 7413              		.loc 1 3186 33
 7414 000c 7B68     		ldr	r3, [r7, #4]
 7415 000e 9A68     		ldr	r2, [r3, #8]
 7416              		.loc 1 3186 58
 7417 0010 7B68     		ldr	r3, [r7, #4]
 7418 0012 1B69     		ldr	r3, [r3, #16]
 7419              		.loc 1 3186 45
 7420 0014 1A43     		orrs	r2, r2, r3
 7421              		.loc 1 3186 79
 7422 0016 7B68     		ldr	r3, [r7, #4]
 7423 0018 5B69     		ldr	r3, [r3, #20]
 7424              		.loc 1 3186 66
 7425 001a 1A43     		orrs	r2, r2, r3
 7426              		.loc 1 3186 98
 7427 001c 7B68     		ldr	r3, [r7, #4]
 7428 001e DB69     		ldr	r3, [r3, #28]
 7429              		.loc 1 3186 10
 7430 0020 1343     		orrs	r3, r3, r2
 7431 0022 FB61     		str	r3, [r7, #28]
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 7432              		.loc 1 3187 3
 7433 0024 7B68     		ldr	r3, [r7, #4]
 7434 0026 1B68     		ldr	r3, [r3]
 7435 0028 1A68     		ldr	r2, [r3]
 7436 002a A44B     		ldr	r3, .L469
 7437 002c 1340     		ands	r3, r3, r2
 7438 002e 7A68     		ldr	r2, [r7, #4]
 7439 0030 1268     		ldr	r2, [r2]
 7440 0032 F969     		ldr	r1, [r7, #28]
 7441 0034 0B43     		orrs	r3, r3, r1
 7442 0036 1360     		str	r3, [r2]
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 210


3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 7443              		.loc 1 3192 3
 7444 0038 7B68     		ldr	r3, [r7, #4]
 7445 003a 1B68     		ldr	r3, [r3]
 7446 003c 5B68     		ldr	r3, [r3, #4]
 7447 003e 23F44051 		bic	r1, r3, #12288
 7448 0042 7B68     		ldr	r3, [r7, #4]
 7449 0044 DA68     		ldr	r2, [r3, #12]
 7450 0046 7B68     		ldr	r3, [r7, #4]
 7451 0048 1B68     		ldr	r3, [r3]
 7452 004a 0A43     		orrs	r2, r2, r1
 7453 004c 5A60     		str	r2, [r3, #4]
3193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 7454              		.loc 1 3200 10
 7455 004e 7B68     		ldr	r3, [r7, #4]
 7456 0050 9B69     		ldr	r3, [r3, #24]
 7457 0052 FB61     		str	r3, [r7, #28]
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
 7458              		.loc 1 3202 9
 7459 0054 7B68     		ldr	r3, [r7, #4]
 7460 0056 1B68     		ldr	r3, [r3]
 7461              		.loc 1 3202 6
 7462 0058 994A     		ldr	r2, .L469+4
 7463 005a 9342     		cmp	r3, r2
 7464 005c 04D0     		beq	.L396
3203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
 7465              		.loc 1 3204 26
 7466 005e 7B68     		ldr	r3, [r7, #4]
 7467 0060 1B6A     		ldr	r3, [r3, #32]
 7468              		.loc 1 3204 12
 7469 0062 FA69     		ldr	r2, [r7, #28]
 7470 0064 1343     		orrs	r3, r3, r2
 7471 0066 FB61     		str	r3, [r7, #28]
 7472              	.L396:
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 7473              		.loc 1 3206 3
 7474 0068 7B68     		ldr	r3, [r7, #4]
 7475 006a 1B68     		ldr	r3, [r3]
 7476 006c 9B68     		ldr	r3, [r3, #8]
 7477 006e 23F43061 		bic	r1, r3, #2816
 7478 0072 7B68     		ldr	r3, [r7, #4]
 7479 0074 1B68     		ldr	r3, [r3]
 7480 0076 FA69     		ldr	r2, [r7, #28]
 7481 0078 0A43     		orrs	r2, r2, r1
 7482 007a 9A60     		str	r2, [r3, #8]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 211


3207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 7483              		.loc 1 3216 3
 7484 007c 7B68     		ldr	r3, [r7, #4]
 7485 007e 1B68     		ldr	r3, [r3]
 7486 0080 904A     		ldr	r2, .L469+8
 7487 0082 9342     		cmp	r3, r2
 7488 0084 21D1     		bne	.L397
 7489              		.loc 1 3216 3 is_stmt 0 discriminator 1
 7490 0086 904B     		ldr	r3, .L469+12
 7491 0088 D3F88830 		ldr	r3, [r3, #136]
 7492 008c 03F00303 		and	r3, r3, #3
 7493 0090 032B     		cmp	r3, #3
 7494 0092 17D8     		bhi	.L398
 7495 0094 01A2     		adr	r2, .L400
 7496 0096 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7497 009a 00BF     		.p2align 2
 7498              	.L400:
 7499 009c AD000000 		.word	.L403+1
 7500 00a0 B9000000 		.word	.L402+1
 7501 00a4 B3000000 		.word	.L401+1
 7502 00a8 BF000000 		.word	.L399+1
 7503              		.p2align 1
 7504              	.L403:
 7505              		.loc 1 3216 3 discriminator 4
 7506 00ac 0123     		movs	r3, #1
 7507 00ae FB76     		strb	r3, [r7, #27]
 7508 00b0 BCE0     		b	.L405
 7509              	.L401:
 7510              		.loc 1 3216 3 discriminator 6
 7511 00b2 0223     		movs	r3, #2
 7512 00b4 FB76     		strb	r3, [r7, #27]
 7513 00b6 B9E0     		b	.L405
 7514              	.L402:
 7515              		.loc 1 3216 3 discriminator 5
 7516 00b8 0423     		movs	r3, #4
 7517 00ba FB76     		strb	r3, [r7, #27]
 7518 00bc B6E0     		b	.L405
 7519              	.L399:
 7520              		.loc 1 3216 3 discriminator 7
 7521 00be 0823     		movs	r3, #8
 7522 00c0 FB76     		strb	r3, [r7, #27]
 7523 00c2 B3E0     		b	.L405
 7524              	.L398:
 7525              		.loc 1 3216 3 discriminator 3
 7526 00c4 1023     		movs	r3, #16
 7527 00c6 FB76     		strb	r3, [r7, #27]
 7528 00c8 B0E0     		b	.L405
 7529              	.L397:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 212


 7530              		.loc 1 3216 3 discriminator 2
 7531 00ca 7B68     		ldr	r3, [r7, #4]
 7532 00cc 1B68     		ldr	r3, [r3]
 7533 00ce 7F4A     		ldr	r2, .L469+16
 7534 00d0 9342     		cmp	r3, r2
 7535 00d2 32D1     		bne	.L406
 7536              		.loc 1 3216 3 discriminator 13
 7537 00d4 7C4B     		ldr	r3, .L469+12
 7538 00d6 D3F88830 		ldr	r3, [r3, #136]
 7539 00da 03F00C03 		and	r3, r3, #12
 7540 00de 0C2B     		cmp	r3, #12
 7541 00e0 28D8     		bhi	.L407
 7542 00e2 01A2     		adr	r2, .L409
 7543 00e4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7544              		.p2align 2
 7545              	.L409:
 7546 00e8 1D010000 		.word	.L412+1
 7547 00ec 35010000 		.word	.L407+1
 7548 00f0 35010000 		.word	.L407+1
 7549 00f4 35010000 		.word	.L407+1
 7550 00f8 29010000 		.word	.L411+1
 7551 00fc 35010000 		.word	.L407+1
 7552 0100 35010000 		.word	.L407+1
 7553 0104 35010000 		.word	.L407+1
 7554 0108 23010000 		.word	.L410+1
 7555 010c 35010000 		.word	.L407+1
 7556 0110 35010000 		.word	.L407+1
 7557 0114 35010000 		.word	.L407+1
 7558 0118 2F010000 		.word	.L408+1
 7559              		.p2align 1
 7560              	.L412:
 7561              		.loc 1 3216 3 discriminator 16
 7562 011c 0023     		movs	r3, #0
 7563 011e FB76     		strb	r3, [r7, #27]
 7564 0120 84E0     		b	.L405
 7565              	.L410:
 7566              		.loc 1 3216 3 discriminator 18
 7567 0122 0223     		movs	r3, #2
 7568 0124 FB76     		strb	r3, [r7, #27]
 7569 0126 81E0     		b	.L405
 7570              	.L411:
 7571              		.loc 1 3216 3 discriminator 17
 7572 0128 0423     		movs	r3, #4
 7573 012a FB76     		strb	r3, [r7, #27]
 7574 012c 7EE0     		b	.L405
 7575              	.L408:
 7576              		.loc 1 3216 3 discriminator 19
 7577 012e 0823     		movs	r3, #8
 7578 0130 FB76     		strb	r3, [r7, #27]
 7579 0132 7BE0     		b	.L405
 7580              	.L407:
 7581              		.loc 1 3216 3 discriminator 15
 7582 0134 1023     		movs	r3, #16
 7583 0136 FB76     		strb	r3, [r7, #27]
 7584 0138 78E0     		b	.L405
 7585              	.L406:
 7586              		.loc 1 3216 3 discriminator 14
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 213


 7587 013a 7B68     		ldr	r3, [r7, #4]
 7588 013c 1B68     		ldr	r3, [r3]
 7589 013e 644A     		ldr	r2, .L469+20
 7590 0140 9342     		cmp	r3, r2
 7591 0142 20D1     		bne	.L414
 7592              		.loc 1 3216 3 discriminator 25
 7593 0144 604B     		ldr	r3, .L469+12
 7594 0146 D3F88830 		ldr	r3, [r3, #136]
 7595 014a 03F03003 		and	r3, r3, #48
 7596 014e 302B     		cmp	r3, #48
 7597 0150 13D0     		beq	.L415
 7598              		.loc 1 3216 3
 7599 0152 302B     		cmp	r3, #48
 7600 0154 14D8     		bhi	.L416
 7601 0156 202B     		cmp	r3, #32
 7602 0158 09D0     		beq	.L417
 7603 015a 202B     		cmp	r3, #32
 7604 015c 10D8     		bhi	.L416
 7605 015e 002B     		cmp	r3, #0
 7606 0160 02D0     		beq	.L418
 7607 0162 102B     		cmp	r3, #16
 7608 0164 06D0     		beq	.L419
 7609 0166 0BE0     		b	.L416
 7610              	.L418:
 7611              		.loc 1 3216 3 discriminator 28
 7612 0168 0023     		movs	r3, #0
 7613 016a FB76     		strb	r3, [r7, #27]
 7614 016c 5EE0     		b	.L405
 7615              	.L417:
 7616              		.loc 1 3216 3 discriminator 30
 7617 016e 0223     		movs	r3, #2
 7618 0170 FB76     		strb	r3, [r7, #27]
 7619 0172 5BE0     		b	.L405
 7620              	.L419:
 7621              		.loc 1 3216 3 discriminator 29
 7622 0174 0423     		movs	r3, #4
 7623 0176 FB76     		strb	r3, [r7, #27]
 7624 0178 58E0     		b	.L405
 7625              	.L415:
 7626              		.loc 1 3216 3 discriminator 31
 7627 017a 0823     		movs	r3, #8
 7628 017c FB76     		strb	r3, [r7, #27]
 7629 017e 55E0     		b	.L405
 7630              	.L416:
 7631              		.loc 1 3216 3 discriminator 27
 7632 0180 1023     		movs	r3, #16
 7633 0182 FB76     		strb	r3, [r7, #27]
 7634 0184 52E0     		b	.L405
 7635              	.L414:
 7636              		.loc 1 3216 3 discriminator 26
 7637 0186 7B68     		ldr	r3, [r7, #4]
 7638 0188 1B68     		ldr	r3, [r3]
 7639 018a 524A     		ldr	r2, .L469+24
 7640 018c 9342     		cmp	r3, r2
 7641 018e 20D1     		bne	.L421
 7642              		.loc 1 3216 3 discriminator 37
 7643 0190 4D4B     		ldr	r3, .L469+12
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 214


 7644 0192 D3F88830 		ldr	r3, [r3, #136]
 7645 0196 03F0C003 		and	r3, r3, #192
 7646 019a C02B     		cmp	r3, #192
 7647 019c 13D0     		beq	.L422
 7648              		.loc 1 3216 3
 7649 019e C02B     		cmp	r3, #192
 7650 01a0 14D8     		bhi	.L423
 7651 01a2 802B     		cmp	r3, #128
 7652 01a4 09D0     		beq	.L424
 7653 01a6 802B     		cmp	r3, #128
 7654 01a8 10D8     		bhi	.L423
 7655 01aa 002B     		cmp	r3, #0
 7656 01ac 02D0     		beq	.L425
 7657 01ae 402B     		cmp	r3, #64
 7658 01b0 06D0     		beq	.L426
 7659 01b2 0BE0     		b	.L423
 7660              	.L425:
 7661              		.loc 1 3216 3 discriminator 40
 7662 01b4 0023     		movs	r3, #0
 7663 01b6 FB76     		strb	r3, [r7, #27]
 7664 01b8 38E0     		b	.L405
 7665              	.L424:
 7666              		.loc 1 3216 3 discriminator 42
 7667 01ba 0223     		movs	r3, #2
 7668 01bc FB76     		strb	r3, [r7, #27]
 7669 01be 35E0     		b	.L405
 7670              	.L426:
 7671              		.loc 1 3216 3 discriminator 41
 7672 01c0 0423     		movs	r3, #4
 7673 01c2 FB76     		strb	r3, [r7, #27]
 7674 01c4 32E0     		b	.L405
 7675              	.L422:
 7676              		.loc 1 3216 3 discriminator 43
 7677 01c6 0823     		movs	r3, #8
 7678 01c8 FB76     		strb	r3, [r7, #27]
 7679 01ca 2FE0     		b	.L405
 7680              	.L423:
 7681              		.loc 1 3216 3 discriminator 39
 7682 01cc 1023     		movs	r3, #16
 7683 01ce FB76     		strb	r3, [r7, #27]
 7684 01d0 2CE0     		b	.L405
 7685              	.L421:
 7686              		.loc 1 3216 3 discriminator 38
 7687 01d2 7B68     		ldr	r3, [r7, #4]
 7688 01d4 1B68     		ldr	r3, [r3]
 7689 01d6 3A4A     		ldr	r2, .L469+4
 7690 01d8 9342     		cmp	r3, r2
 7691 01da 25D1     		bne	.L428
 7692              		.loc 1 3216 3 discriminator 49
 7693 01dc 3A4B     		ldr	r3, .L469+12
 7694 01de D3F88830 		ldr	r3, [r3, #136]
 7695 01e2 03F44063 		and	r3, r3, #3072
 7696 01e6 B3F5406F 		cmp	r3, #3072
 7697 01ea 17D0     		beq	.L429
 7698              		.loc 1 3216 3
 7699 01ec B3F5406F 		cmp	r3, #3072
 7700 01f0 17D8     		bhi	.L430
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 215


 7701 01f2 B3F5006F 		cmp	r3, #2048
 7702 01f6 0BD0     		beq	.L431
 7703 01f8 B3F5006F 		cmp	r3, #2048
 7704 01fc 11D8     		bhi	.L430
 7705 01fe 002B     		cmp	r3, #0
 7706 0200 03D0     		beq	.L432
 7707 0202 B3F5806F 		cmp	r3, #1024
 7708 0206 06D0     		beq	.L433
 7709 0208 0BE0     		b	.L430
 7710              	.L432:
 7711              		.loc 1 3216 3 discriminator 52
 7712 020a 0023     		movs	r3, #0
 7713 020c FB76     		strb	r3, [r7, #27]
 7714 020e 0DE0     		b	.L405
 7715              	.L431:
 7716              		.loc 1 3216 3 discriminator 54
 7717 0210 0223     		movs	r3, #2
 7718 0212 FB76     		strb	r3, [r7, #27]
 7719 0214 0AE0     		b	.L405
 7720              	.L433:
 7721              		.loc 1 3216 3 discriminator 53
 7722 0216 0423     		movs	r3, #4
 7723 0218 FB76     		strb	r3, [r7, #27]
 7724 021a 07E0     		b	.L405
 7725              	.L429:
 7726              		.loc 1 3216 3 discriminator 55
 7727 021c 0823     		movs	r3, #8
 7728 021e FB76     		strb	r3, [r7, #27]
 7729 0220 04E0     		b	.L405
 7730              	.L430:
 7731              		.loc 1 3216 3 discriminator 51
 7732 0222 1023     		movs	r3, #16
 7733 0224 FB76     		strb	r3, [r7, #27]
 7734 0226 01E0     		b	.L405
 7735              	.L428:
 7736              		.loc 1 3216 3 discriminator 50
 7737 0228 1023     		movs	r3, #16
 7738 022a FB76     		strb	r3, [r7, #27]
 7739              	.L405:
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 7740              		.loc 1 3219 7 is_stmt 1
 7741 022c 7B68     		ldr	r3, [r7, #4]
 7742 022e 1B68     		ldr	r3, [r3]
 7743              		.loc 1 3219 6
 7744 0230 234A     		ldr	r2, .L469+4
 7745 0232 9342     		cmp	r3, r2
 7746 0234 40F08480 		bne	.L435
3220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 7747              		.loc 1 3222 5
 7748 0238 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 7749 023a 082B     		cmp	r3, #8
 7750 023c 23D8     		bhi	.L436
 7751 023e 01A2     		adr	r2, .L438
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 216


 7752 0240 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7753              		.p2align 2
 7754              	.L438:
 7755 0244 69020000 		.word	.L441+1
 7756 0248 87020000 		.word	.L436+1
 7757 024c 71020000 		.word	.L440+1
 7758 0250 87020000 		.word	.L436+1
 7759 0254 77020000 		.word	.L439+1
 7760 0258 87020000 		.word	.L436+1
 7761 025c 87020000 		.word	.L436+1
 7762 0260 87020000 		.word	.L436+1
 7763 0264 7F020000 		.word	.L437+1
 7764              		.p2align 1
 7765              	.L441:
3223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 7766              		.loc 1 3225 16
 7767 0268 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 7768 026c 7861     		str	r0, [r7, #20]
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7769              		.loc 1 3226 9
 7770 026e 0FE0     		b	.L442
 7771              	.L440:
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
 7772              		.loc 1 3228 14
 7773 0270 194B     		ldr	r3, .L469+28
 7774 0272 7B61     		str	r3, [r7, #20]
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7775              		.loc 1 3229 9
 7776 0274 0CE0     		b	.L442
 7777              	.L439:
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 7778              		.loc 1 3231 16
 7779 0276 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 7780 027a 7861     		str	r0, [r7, #20]
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7781              		.loc 1 3232 9
 7782 027c 08E0     		b	.L442
 7783              	.L437:
3233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 7784              		.loc 1 3234 14
 7785 027e 4FF40043 		mov	r3, #32768
 7786 0282 7B61     		str	r3, [r7, #20]
3235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7787              		.loc 1 3235 9
 7788 0284 04E0     		b	.L442
 7789              	.L436:
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = 0U;
 7790              		.loc 1 3237 14
 7791 0286 0023     		movs	r3, #0
 7792 0288 7B61     		str	r3, [r7, #20]
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 217


 7793              		.loc 1 3238 13
 7794 028a 0123     		movs	r3, #1
 7795 028c BB76     		strb	r3, [r7, #26]
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7796              		.loc 1 3239 9
 7797 028e 00BF     		nop
 7798              	.L442:
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If proper clock source reported */
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
 7799              		.loc 1 3243 8
 7800 0290 7B69     		ldr	r3, [r7, #20]
 7801 0292 002B     		cmp	r3, #0
 7802 0294 00F00281 		beq	.L447
3244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Compute clock after Prescaler */
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescale
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
3263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
3267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* No Prescaler applicable */
3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((pclk < (3U * huart->Init.BaudRate)) ||
 7803              		.loc 1 3273 36
 7804 0298 7B68     		ldr	r3, [r7, #4]
 7805 029a 5A68     		ldr	r2, [r3, #4]
 7806              		.loc 1 3273 23
 7807 029c 1346     		mov	r3, r2
 7808 029e 5B00     		lsls	r3, r3, #1
 7809 02a0 1344     		add	r3, r3, r2
 7810              		.loc 1 3273 10
 7811 02a2 7A69     		ldr	r2, [r7, #20]
 7812 02a4 9A42     		cmp	r2, r3
 7813 02a6 05D3     		bcc	.L444
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (pclk > (4096U * huart->Init.BaudRate)))
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 218


 7814              		.loc 1 3274 39 discriminator 1
 7815 02a8 7B68     		ldr	r3, [r7, #4]
 7816 02aa 5B68     		ldr	r3, [r3, #4]
 7817              		.loc 1 3274 26 discriminator 1
 7818 02ac 1B03     		lsls	r3, r3, #12
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (pclk > (4096U * huart->Init.BaudRate)))
 7819              		.loc 1 3273 48 discriminator 1
 7820 02ae 7A69     		ldr	r2, [r7, #20]
 7821 02b0 9A42     		cmp	r2, r3
 7822 02b2 13D9     		bls	.L445
 7823              	.L444:
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 7824              		.loc 1 3276 13
 7825 02b4 0123     		movs	r3, #1
 7826 02b6 BB76     		strb	r3, [r7, #26]
 7827 02b8 F0E0     		b	.L447
 7828              	.L470:
 7829 02ba 00BF     		.align	2
 7830              	.L469:
 7831 02bc F369FFEF 		.word	-268473869
 7832 02c0 00800040 		.word	1073774592
 7833 02c4 00380140 		.word	1073821696
 7834 02c8 00100240 		.word	1073876992
 7835 02cc 00440040 		.word	1073759232
 7836 02d0 00480040 		.word	1073760256
 7837 02d4 004C0040 		.word	1073761280
 7838 02d8 0024F400 		.word	16000000
 7839              	.L445:
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate));
 7840              		.loc 1 3280 31
 7841 02dc 7B69     		ldr	r3, [r7, #20]
 7842 02de 1846     		mov	r0, r3
 7843 02e0 4FF00001 		mov	r1, #0
 7844 02e4 4FF00002 		mov	r2, #0
 7845 02e8 4FF00003 		mov	r3, #0
 7846 02ec 0B02     		lsls	r3, r1, #8
 7847 02ee 43EA1063 		orr	r3, r3, r0, lsr #24
 7848 02f2 0202     		lsls	r2, r0, #8
 7849 02f4 7968     		ldr	r1, [r7, #4]
 7850 02f6 4968     		ldr	r1, [r1, #4]
 7851 02f8 4908     		lsrs	r1, r1, #1
 7852 02fa 0846     		mov	r0, r1
 7853 02fc 4FF00001 		mov	r1, #0
 7854 0300 1418     		adds	r4, r2, r0
 7855 0302 43EB0105 		adc	r5, r3, r1
 7856 0306 7B68     		ldr	r3, [r7, #4]
 7857 0308 5B68     		ldr	r3, [r3, #4]
 7858 030a 1A46     		mov	r2, r3
 7859 030c 4FF00003 		mov	r3, #0
 7860 0310 2046     		mov	r0, r4
 7861 0312 2946     		mov	r1, r5
 7862 0314 FFF7FEFF 		bl	__aeabi_uldivmod
 7863              	.LVL6:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 219


 7864 0318 0246     		mov	r2, r0
 7865 031a 0B46     		mov	r3, r1
 7866              		.loc 1 3280 18
 7867 031c 1346     		mov	r3, r2
 7868 031e 3B61     		str	r3, [r7, #16]
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 7869              		.loc 1 3281 12
 7870 0320 3B69     		ldr	r3, [r7, #16]
 7871 0322 B3F5407F 		cmp	r3, #768
 7872 0326 08D3     		bcc	.L446
 7873              		.loc 1 3281 42 discriminator 1
 7874 0328 3B69     		ldr	r3, [r7, #16]
 7875 032a B3F5801F 		cmp	r3, #1048576
 7876 032e 04D2     		bcs	.L446
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
 7877              		.loc 1 3283 16
 7878 0330 7B68     		ldr	r3, [r7, #4]
 7879 0332 1B68     		ldr	r3, [r3]
 7880              		.loc 1 3283 32
 7881 0334 3A69     		ldr	r2, [r7, #16]
 7882 0336 DA60     		str	r2, [r3, #12]
 7883 0338 B0E0     		b	.L447
 7884              	.L446:
3284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
3286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
 7885              		.loc 1 3287 15
 7886 033a 0123     		movs	r3, #1
 7887 033c BB76     		strb	r3, [r7, #26]
 7888 033e ADE0     		b	.L447
 7889              	.L435:
3288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       } /* if ( (pclk < (3 * huart->Init.BaudRate) ) || (pclk > (4096 * huart->Init.BaudRate) )) */
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     } /* if (pclk != 0) */
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 7890              		.loc 1 3294 23
 7891 0340 7B68     		ldr	r3, [r7, #4]
 7892 0342 DB69     		ldr	r3, [r3, #28]
 7893              		.loc 1 3294 11
 7894 0344 B3F5004F 		cmp	r3, #32768
 7895 0348 5BD1     		bne	.L448
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 7896              		.loc 1 3296 5
 7897 034a FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 7898 034c 082B     		cmp	r3, #8
 7899 034e 28D8     		bhi	.L449
 7900 0350 01A2     		adr	r2, .L451
 7901 0352 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7902 0356 00BF     		.p2align 2
 7903              	.L451:
 7904 0358 7D030000 		.word	.L455+1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 220


 7905 035c 85030000 		.word	.L454+1
 7906 0360 8D030000 		.word	.L453+1
 7907 0364 A3030000 		.word	.L449+1
 7908 0368 93030000 		.word	.L452+1
 7909 036c A3030000 		.word	.L449+1
 7910 0370 A3030000 		.word	.L449+1
 7911 0374 A3030000 		.word	.L449+1
 7912 0378 9B030000 		.word	.L450+1
 7913              		.p2align 1
 7914              	.L455:
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 7915              		.loc 1 3299 16
 7916 037c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 7917 0380 7861     		str	r0, [r7, #20]
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7918              		.loc 1 3300 9
 7919 0382 13E0     		b	.L456
 7920              	.L454:
3301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 7921              		.loc 1 3302 16
 7922 0384 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 7923 0388 7861     		str	r0, [r7, #20]
3303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7924              		.loc 1 3303 9
 7925 038a 0FE0     		b	.L456
 7926              	.L453:
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
 7927              		.loc 1 3305 14
 7928 038c 494B     		ldr	r3, .L471
 7929 038e 7B61     		str	r3, [r7, #20]
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7930              		.loc 1 3306 9
 7931 0390 0CE0     		b	.L456
 7932              	.L452:
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 7933              		.loc 1 3308 16
 7934 0392 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 7935 0396 7861     		str	r0, [r7, #20]
3309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7936              		.loc 1 3309 9
 7937 0398 08E0     		b	.L456
 7938              	.L450:
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 7939              		.loc 1 3311 14
 7940 039a 4FF40043 		mov	r3, #32768
 7941 039e 7B61     		str	r3, [r7, #20]
3312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7942              		.loc 1 3312 9
 7943 03a0 04E0     		b	.L456
 7944              	.L449:
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 221


3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = 0U;
 7945              		.loc 1 3314 14
 7946 03a2 0023     		movs	r3, #0
 7947 03a4 7B61     		str	r3, [r7, #20]
3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 7948              		.loc 1 3315 13
 7949 03a6 0123     		movs	r3, #1
 7950 03a8 BB76     		strb	r3, [r7, #26]
3316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 7951              		.loc 1 3316 9
 7952 03aa 00BF     		nop
 7953              	.L456:
3317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
 7954              		.loc 1 3320 8
 7955 03ac 7B69     		ldr	r3, [r7, #20]
 7956 03ae 002B     		cmp	r3, #0
 7957 03b0 74D0     		beq	.L447
3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 7958              		.loc 1 3325 29
 7959 03b2 7B69     		ldr	r3, [r7, #20]
 7960 03b4 5A00     		lsls	r2, r3, #1
 7961 03b6 7B68     		ldr	r3, [r7, #4]
 7962 03b8 5B68     		ldr	r3, [r3, #4]
 7963 03ba 5B08     		lsrs	r3, r3, #1
 7964 03bc 1A44     		add	r2, r2, r3
 7965 03be 7B68     		ldr	r3, [r7, #4]
 7966 03c0 5B68     		ldr	r3, [r3, #4]
 7967              		.loc 1 3325 16
 7968 03c2 B2FBF3F3 		udiv	r3, r2, r3
 7969 03c6 3B61     		str	r3, [r7, #16]
3326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 7970              		.loc 1 3327 10
 7971 03c8 3B69     		ldr	r3, [r7, #16]
 7972 03ca 0F2B     		cmp	r3, #15
 7973 03cc 16D9     		bls	.L458
 7974              		.loc 1 3327 38 discriminator 1
 7975 03ce 3B69     		ldr	r3, [r7, #16]
 7976 03d0 B3F5803F 		cmp	r3, #65536
 7977 03d4 12D2     		bcs	.L458
3328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 7978              		.loc 1 3329 19
 7979 03d6 3B69     		ldr	r3, [r7, #16]
 7980 03d8 9BB2     		uxth	r3, r3
 7981              		.loc 1 3329 17
 7982 03da 23F00F03 		bic	r3, r3, #15
 7983 03de FB81     		strh	r3, [r7, #14]	@ movhi
3330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 7984              		.loc 1 3330 62
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 222


 7985 03e0 3B69     		ldr	r3, [r7, #16]
 7986 03e2 5B08     		lsrs	r3, r3, #1
 7987              		.loc 1 3330 20
 7988 03e4 9BB2     		uxth	r3, r3
 7989 03e6 03F00703 		and	r3, r3, #7
 7990 03ea 9AB2     		uxth	r2, r3
 7991              		.loc 1 3330 17
 7992 03ec FB89     		ldrh	r3, [r7, #14]	@ movhi
 7993 03ee 1343     		orrs	r3, r3, r2
 7994 03f0 FB81     		strh	r3, [r7, #14]	@ movhi
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 7995              		.loc 1 3331 14
 7996 03f2 7B68     		ldr	r3, [r7, #4]
 7997 03f4 1B68     		ldr	r3, [r3]
 7998              		.loc 1 3331 30
 7999 03f6 FA89     		ldrh	r2, [r7, #14]
 8000 03f8 DA60     		str	r2, [r3, #12]
 8001 03fa 4FE0     		b	.L447
 8002              	.L458:
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 8003              		.loc 1 3335 13
 8004 03fc 0123     		movs	r3, #1
 8005 03fe BB76     		strb	r3, [r7, #26]
 8006 0400 4CE0     		b	.L447
 8007              	.L448:
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 8008              		.loc 1 3341 5
 8009 0402 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 8010 0404 082B     		cmp	r3, #8
 8011 0406 28D8     		bhi	.L459
 8012 0408 01A2     		adr	r2, .L461
 8013 040a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8014 040e 00BF     		.p2align 2
 8015              	.L461:
 8016 0410 35040000 		.word	.L465+1
 8017 0414 3D040000 		.word	.L464+1
 8018 0418 45040000 		.word	.L463+1
 8019 041c 5B040000 		.word	.L459+1
 8020 0420 4B040000 		.word	.L462+1
 8021 0424 5B040000 		.word	.L459+1
 8022 0428 5B040000 		.word	.L459+1
 8023 042c 5B040000 		.word	.L459+1
 8024 0430 53040000 		.word	.L460+1
 8025              		.p2align 1
 8026              	.L465:
3342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
 8027              		.loc 1 3344 16
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 223


 8028 0434 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 8029 0438 7861     		str	r0, [r7, #20]
3345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 8030              		.loc 1 3345 9
 8031 043a 13E0     		b	.L466
 8032              	.L464:
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
 8033              		.loc 1 3347 16
 8034 043c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 8035 0440 7861     		str	r0, [r7, #20]
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 8036              		.loc 1 3348 9
 8037 0442 0FE0     		b	.L466
 8038              	.L463:
3349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
 8039              		.loc 1 3350 14
 8040 0444 1B4B     		ldr	r3, .L471
 8041 0446 7B61     		str	r3, [r7, #20]
3351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 8042              		.loc 1 3351 9
 8043 0448 0CE0     		b	.L466
 8044              	.L462:
3352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
 8045              		.loc 1 3353 16
 8046 044a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 8047 044e 7861     		str	r0, [r7, #20]
3354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 8048              		.loc 1 3354 9
 8049 0450 08E0     		b	.L466
 8050              	.L460:
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
 8051              		.loc 1 3356 14
 8052 0452 4FF40043 		mov	r3, #32768
 8053 0456 7B61     		str	r3, [r7, #20]
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 8054              		.loc 1 3357 9
 8055 0458 04E0     		b	.L466
 8056              	.L459:
3358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pclk = 0U;
 8057              		.loc 1 3359 14
 8058 045a 0023     		movs	r3, #0
 8059 045c 7B61     		str	r3, [r7, #20]
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 8060              		.loc 1 3360 13
 8061 045e 0123     		movs	r3, #1
 8062 0460 BB76     		strb	r3, [r7, #26]
3361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 8063              		.loc 1 3361 9
 8064 0462 00BF     		nop
 8065              	.L466:
3362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 224


3364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
 8066              		.loc 1 3364 8
 8067 0464 7B69     		ldr	r3, [r7, #20]
 8068 0466 002B     		cmp	r3, #0
 8069 0468 18D0     		beq	.L447
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8070              		.loc 1 3370 29
 8071 046a 7B68     		ldr	r3, [r7, #4]
 8072 046c 5B68     		ldr	r3, [r3, #4]
 8073 046e 5A08     		lsrs	r2, r3, #1
 8074 0470 7B69     		ldr	r3, [r7, #20]
 8075 0472 1A44     		add	r2, r2, r3
 8076 0474 7B68     		ldr	r3, [r7, #4]
 8077 0476 5B68     		ldr	r3, [r3, #4]
 8078              		.loc 1 3370 16
 8079 0478 B2FBF3F3 		udiv	r3, r2, r3
 8080 047c 3B61     		str	r3, [r7, #16]
3371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8081              		.loc 1 3372 10
 8082 047e 3B69     		ldr	r3, [r7, #16]
 8083 0480 0F2B     		cmp	r3, #15
 8084 0482 09D9     		bls	.L467
 8085              		.loc 1 3372 38 discriminator 1
 8086 0484 3B69     		ldr	r3, [r7, #16]
 8087 0486 B3F5803F 		cmp	r3, #65536
 8088 048a 05D2     		bcs	.L467
3373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)usartdiv;
 8089              		.loc 1 3374 32
 8090 048c 3B69     		ldr	r3, [r7, #16]
 8091 048e 9AB2     		uxth	r2, r3
 8092              		.loc 1 3374 14
 8093 0490 7B68     		ldr	r3, [r7, #4]
 8094 0492 1B68     		ldr	r3, [r3]
 8095              		.loc 1 3374 30
 8096 0494 DA60     		str	r2, [r3, #12]
 8097 0496 01E0     		b	.L447
 8098              	.L467:
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 8099              		.loc 1 3378 13
 8100 0498 0123     		movs	r3, #1
 8101 049a BB76     		strb	r3, [r7, #26]
 8102              	.L447:
3379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 225


3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
 8103              		.loc 1 3390 16
 8104 049c 7B68     		ldr	r3, [r7, #4]
 8105 049e 0022     		movs	r2, #0
 8106 04a0 5A66     		str	r2, [r3, #100]
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 8107              		.loc 1 3391 16
 8108 04a2 7B68     		ldr	r3, [r7, #4]
 8109 04a4 0022     		movs	r2, #0
 8110 04a6 9A66     		str	r2, [r3, #104]
3392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return ret;
 8111              		.loc 1 3393 10
 8112 04a8 BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 8113              		.loc 1 3394 1
 8114 04aa 1846     		mov	r0, r3
 8115 04ac 2037     		adds	r7, r7, #32
 8116              	.LCFI241:
 8117              		.cfi_def_cfa_offset 16
 8118 04ae BD46     		mov	sp, r7
 8119              	.LCFI242:
 8120              		.cfi_def_cfa_register 13
 8121              		@ sp needed
 8122 04b0 B0BD     		pop	{r4, r5, r7, pc}
 8123              	.L472:
 8124 04b2 00BF     		.align	2
 8125              	.L471:
 8126 04b4 0024F400 		.word	16000000
 8127              		.cfi_endproc
 8128              	.LFE335:
 8130              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 8131              		.align	1
 8132              		.global	UART_AdvFeatureConfig
 8133              		.syntax unified
 8134              		.thumb
 8135              		.thumb_func
 8136              		.fpu fpv4-sp-d16
 8138              	UART_AdvFeatureConfig:
 8139              	.LFB336:
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 8140              		.loc 1 3402 1
 8141              		.cfi_startproc
 8142              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 226


 8143              		@ frame_needed = 1, uses_anonymous_args = 0
 8144              		@ link register save eliminated.
 8145 0000 80B4     		push	{r7}
 8146              	.LCFI243:
 8147              		.cfi_def_cfa_offset 4
 8148              		.cfi_offset 7, -4
 8149 0002 83B0     		sub	sp, sp, #12
 8150              	.LCFI244:
 8151              		.cfi_def_cfa_offset 16
 8152 0004 00AF     		add	r7, sp, #0
 8153              	.LCFI245:
 8154              		.cfi_def_cfa_register 7
 8155 0006 7860     		str	r0, [r7, #4]
3403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8156              		.loc 1 3407 7
 8157 0008 7B68     		ldr	r3, [r7, #4]
 8158 000a 5B6A     		ldr	r3, [r3, #36]
 8159 000c 03F00103 		and	r3, r3, #1
 8160              		.loc 1 3407 6
 8161 0010 002B     		cmp	r3, #0
 8162 0012 0AD0     		beq	.L474
3408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8163              		.loc 1 3410 5
 8164 0014 7B68     		ldr	r3, [r7, #4]
 8165 0016 1B68     		ldr	r3, [r3]
 8166 0018 5B68     		ldr	r3, [r3, #4]
 8167 001a 23F40031 		bic	r1, r3, #131072
 8168 001e 7B68     		ldr	r3, [r7, #4]
 8169 0020 9A6A     		ldr	r2, [r3, #40]
 8170 0022 7B68     		ldr	r3, [r7, #4]
 8171 0024 1B68     		ldr	r3, [r3]
 8172 0026 0A43     		orrs	r2, r2, r1
 8173 0028 5A60     		str	r2, [r3, #4]
 8174              	.L474:
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8175              		.loc 1 3414 7
 8176 002a 7B68     		ldr	r3, [r7, #4]
 8177 002c 5B6A     		ldr	r3, [r3, #36]
 8178 002e 03F00203 		and	r3, r3, #2
 8179              		.loc 1 3414 6
 8180 0032 002B     		cmp	r3, #0
 8181 0034 0AD0     		beq	.L475
3415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8182              		.loc 1 3417 5
 8183 0036 7B68     		ldr	r3, [r7, #4]
 8184 0038 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 227


 8185 003a 5B68     		ldr	r3, [r3, #4]
 8186 003c 23F48031 		bic	r1, r3, #65536
 8187 0040 7B68     		ldr	r3, [r7, #4]
 8188 0042 DA6A     		ldr	r2, [r3, #44]
 8189 0044 7B68     		ldr	r3, [r7, #4]
 8190 0046 1B68     		ldr	r3, [r3]
 8191 0048 0A43     		orrs	r2, r2, r1
 8192 004a 5A60     		str	r2, [r3, #4]
 8193              	.L475:
3418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8194              		.loc 1 3421 7
 8195 004c 7B68     		ldr	r3, [r7, #4]
 8196 004e 5B6A     		ldr	r3, [r3, #36]
 8197 0050 03F00403 		and	r3, r3, #4
 8198              		.loc 1 3421 6
 8199 0054 002B     		cmp	r3, #0
 8200 0056 0AD0     		beq	.L476
3422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8201              		.loc 1 3424 5
 8202 0058 7B68     		ldr	r3, [r7, #4]
 8203 005a 1B68     		ldr	r3, [r3]
 8204 005c 5B68     		ldr	r3, [r3, #4]
 8205 005e 23F48021 		bic	r1, r3, #262144
 8206 0062 7B68     		ldr	r3, [r7, #4]
 8207 0064 1A6B     		ldr	r2, [r3, #48]
 8208 0066 7B68     		ldr	r3, [r7, #4]
 8209 0068 1B68     		ldr	r3, [r3]
 8210 006a 0A43     		orrs	r2, r2, r1
 8211 006c 5A60     		str	r2, [r3, #4]
 8212              	.L476:
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8213              		.loc 1 3428 7
 8214 006e 7B68     		ldr	r3, [r7, #4]
 8215 0070 5B6A     		ldr	r3, [r3, #36]
 8216 0072 03F00803 		and	r3, r3, #8
 8217              		.loc 1 3428 6
 8218 0076 002B     		cmp	r3, #0
 8219 0078 0AD0     		beq	.L477
3429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8220              		.loc 1 3431 5
 8221 007a 7B68     		ldr	r3, [r7, #4]
 8222 007c 1B68     		ldr	r3, [r3]
 8223 007e 5B68     		ldr	r3, [r3, #4]
 8224 0080 23F40041 		bic	r1, r3, #32768
 8225 0084 7B68     		ldr	r3, [r7, #4]
 8226 0086 5A6B     		ldr	r2, [r3, #52]
 8227 0088 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 228


 8228 008a 1B68     		ldr	r3, [r3]
 8229 008c 0A43     		orrs	r2, r2, r1
 8230 008e 5A60     		str	r2, [r3, #4]
 8231              	.L477:
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8232              		.loc 1 3435 7
 8233 0090 7B68     		ldr	r3, [r7, #4]
 8234 0092 5B6A     		ldr	r3, [r3, #36]
 8235 0094 03F01003 		and	r3, r3, #16
 8236              		.loc 1 3435 6
 8237 0098 002B     		cmp	r3, #0
 8238 009a 0AD0     		beq	.L478
3436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8239              		.loc 1 3438 5
 8240 009c 7B68     		ldr	r3, [r7, #4]
 8241 009e 1B68     		ldr	r3, [r3]
 8242 00a0 9B68     		ldr	r3, [r3, #8]
 8243 00a2 23F48051 		bic	r1, r3, #4096
 8244 00a6 7B68     		ldr	r3, [r7, #4]
 8245 00a8 9A6B     		ldr	r2, [r3, #56]
 8246 00aa 7B68     		ldr	r3, [r7, #4]
 8247 00ac 1B68     		ldr	r3, [r3]
 8248 00ae 0A43     		orrs	r2, r2, r1
 8249 00b0 9A60     		str	r2, [r3, #8]
 8250              	.L478:
3439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8251              		.loc 1 3442 7
 8252 00b2 7B68     		ldr	r3, [r7, #4]
 8253 00b4 5B6A     		ldr	r3, [r3, #36]
 8254 00b6 03F02003 		and	r3, r3, #32
 8255              		.loc 1 3442 6
 8256 00ba 002B     		cmp	r3, #0
 8257 00bc 0AD0     		beq	.L479
3443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8258              		.loc 1 3445 5
 8259 00be 7B68     		ldr	r3, [r7, #4]
 8260 00c0 1B68     		ldr	r3, [r3]
 8261 00c2 9B68     		ldr	r3, [r3, #8]
 8262 00c4 23F40051 		bic	r1, r3, #8192
 8263 00c8 7B68     		ldr	r3, [r7, #4]
 8264 00ca DA6B     		ldr	r2, [r3, #60]
 8265 00cc 7B68     		ldr	r3, [r7, #4]
 8266 00ce 1B68     		ldr	r3, [r3]
 8267 00d0 0A43     		orrs	r2, r2, r1
 8268 00d2 9A60     		str	r2, [r3, #8]
 8269              	.L479:
3446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 229


3447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8270              		.loc 1 3449 7
 8271 00d4 7B68     		ldr	r3, [r7, #4]
 8272 00d6 5B6A     		ldr	r3, [r3, #36]
 8273 00d8 03F04003 		and	r3, r3, #64
 8274              		.loc 1 3449 6
 8275 00dc 002B     		cmp	r3, #0
 8276 00de 1AD0     		beq	.L480
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8277              		.loc 1 3453 5
 8278 00e0 7B68     		ldr	r3, [r7, #4]
 8279 00e2 1B68     		ldr	r3, [r3]
 8280 00e4 5B68     		ldr	r3, [r3, #4]
 8281 00e6 23F48011 		bic	r1, r3, #1048576
 8282 00ea 7B68     		ldr	r3, [r7, #4]
 8283 00ec 1A6C     		ldr	r2, [r3, #64]
 8284 00ee 7B68     		ldr	r3, [r7, #4]
 8285 00f0 1B68     		ldr	r3, [r3]
 8286 00f2 0A43     		orrs	r2, r2, r1
 8287 00f4 5A60     		str	r2, [r3, #4]
3454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8288              		.loc 1 3455 28
 8289 00f6 7B68     		ldr	r3, [r7, #4]
 8290 00f8 1B6C     		ldr	r3, [r3, #64]
 8291              		.loc 1 3455 8
 8292 00fa B3F5801F 		cmp	r3, #1048576
 8293 00fe 0AD1     		bne	.L480
3456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8294              		.loc 1 3458 7
 8295 0100 7B68     		ldr	r3, [r7, #4]
 8296 0102 1B68     		ldr	r3, [r3]
 8297 0104 5B68     		ldr	r3, [r3, #4]
 8298 0106 23F4C001 		bic	r1, r3, #6291456
 8299 010a 7B68     		ldr	r3, [r7, #4]
 8300 010c 5A6C     		ldr	r2, [r3, #68]
 8301 010e 7B68     		ldr	r3, [r7, #4]
 8302 0110 1B68     		ldr	r3, [r3]
 8303 0112 0A43     		orrs	r2, r2, r1
 8304 0114 5A60     		str	r2, [r3, #4]
 8305              	.L480:
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8306              		.loc 1 3463 7
 8307 0116 7B68     		ldr	r3, [r7, #4]
 8308 0118 5B6A     		ldr	r3, [r3, #36]
 8309 011a 03F08003 		and	r3, r3, #128
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 230


 8310              		.loc 1 3463 6
 8311 011e 002B     		cmp	r3, #0
 8312 0120 0AD0     		beq	.L482
3464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8313              		.loc 1 3466 5
 8314 0122 7B68     		ldr	r3, [r7, #4]
 8315 0124 1B68     		ldr	r3, [r3]
 8316 0126 5B68     		ldr	r3, [r3, #4]
 8317 0128 23F40021 		bic	r1, r3, #524288
 8318 012c 7B68     		ldr	r3, [r7, #4]
 8319 012e 9A6C     		ldr	r2, [r3, #72]
 8320 0130 7B68     		ldr	r3, [r7, #4]
 8321 0132 1B68     		ldr	r3, [r3]
 8322 0134 0A43     		orrs	r2, r2, r1
 8323 0136 5A60     		str	r2, [r3, #4]
 8324              	.L482:
3467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 8325              		.loc 1 3468 1
 8326 0138 00BF     		nop
 8327 013a 0C37     		adds	r7, r7, #12
 8328              	.LCFI246:
 8329              		.cfi_def_cfa_offset 4
 8330 013c BD46     		mov	sp, r7
 8331              	.LCFI247:
 8332              		.cfi_def_cfa_register 13
 8333              		@ sp needed
 8334 013e 5DF8047B 		ldr	r7, [sp], #4
 8335              	.LCFI248:
 8336              		.cfi_restore 7
 8337              		.cfi_def_cfa_offset 0
 8338 0142 7047     		bx	lr
 8339              		.cfi_endproc
 8340              	.LFE336:
 8342              		.section	.text.UART_CheckIdleState,"ax",%progbits
 8343              		.align	1
 8344              		.global	UART_CheckIdleState
 8345              		.syntax unified
 8346              		.thumb
 8347              		.thumb_func
 8348              		.fpu fpv4-sp-d16
 8350              	UART_CheckIdleState:
 8351              	.LFB337:
3469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 8352              		.loc 1 3476 1
 8353              		.cfi_startproc
 8354              		@ args = 0, pretend = 0, frame = 16
 8355              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 231


 8356 0000 80B5     		push	{r7, lr}
 8357              	.LCFI249:
 8358              		.cfi_def_cfa_offset 8
 8359              		.cfi_offset 7, -8
 8360              		.cfi_offset 14, -4
 8361 0002 86B0     		sub	sp, sp, #24
 8362              	.LCFI250:
 8363              		.cfi_def_cfa_offset 32
 8364 0004 02AF     		add	r7, sp, #8
 8365              	.LCFI251:
 8366              		.cfi_def_cfa 7, 24
 8367 0006 7860     		str	r0, [r7, #4]
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
3478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8368              		.loc 1 3480 20
 8369 0008 7B68     		ldr	r3, [r7, #4]
 8370 000a 0022     		movs	r2, #0
 8371 000c C3F88020 		str	r2, [r3, #128]
3481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout management */
3483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
 8372              		.loc 1 3483 15
 8373 0010 FFF7FEFF 		bl	HAL_GetTick
 8374 0014 F860     		str	r0, [r7, #12]
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8375              		.loc 1 3486 13
 8376 0016 7B68     		ldr	r3, [r7, #4]
 8377 0018 1B68     		ldr	r3, [r3]
 8378              		.loc 1 3486 23
 8379 001a 1B68     		ldr	r3, [r3]
 8380              		.loc 1 3486 29
 8381 001c 03F00803 		and	r3, r3, #8
 8382              		.loc 1 3486 6
 8383 0020 082B     		cmp	r3, #8
 8384 0022 0ED1     		bne	.L484
3487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 8385              		.loc 1 3489 9
 8386 0024 6FF07E43 		mvn	r3, #-33554432
 8387 0028 0093     		str	r3, [sp]
 8388 002a FB68     		ldr	r3, [r7, #12]
 8389 002c 0022     		movs	r2, #0
 8390 002e 4FF40011 		mov	r1, #2097152
 8391 0032 7868     		ldr	r0, [r7, #4]
 8392 0034 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8393 0038 0346     		mov	r3, r0
 8394              		.loc 1 3489 8
 8395 003a 002B     		cmp	r3, #0
 8396 003c 01D0     		beq	.L484
3490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 232


 8397              		.loc 1 3492 14
 8398 003e 0323     		movs	r3, #3
 8399 0040 23E0     		b	.L485
 8400              	.L484:
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8401              		.loc 1 3497 13
 8402 0042 7B68     		ldr	r3, [r7, #4]
 8403 0044 1B68     		ldr	r3, [r3]
 8404              		.loc 1 3497 23
 8405 0046 1B68     		ldr	r3, [r3]
 8406              		.loc 1 3497 29
 8407 0048 03F00403 		and	r3, r3, #4
 8408              		.loc 1 3497 6
 8409 004c 042B     		cmp	r3, #4
 8410 004e 0ED1     		bne	.L486
3498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 8411              		.loc 1 3500 9
 8412 0050 6FF07E43 		mvn	r3, #-33554432
 8413 0054 0093     		str	r3, [sp]
 8414 0056 FB68     		ldr	r3, [r7, #12]
 8415 0058 0022     		movs	r2, #0
 8416 005a 4FF48001 		mov	r1, #4194304
 8417 005e 7868     		ldr	r0, [r7, #4]
 8418 0060 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 8419 0064 0346     		mov	r3, r0
 8420              		.loc 1 3500 8
 8421 0066 002B     		cmp	r3, #0
 8422 0068 01D0     		beq	.L486
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 8423              		.loc 1 3503 14
 8424 006a 0323     		movs	r3, #3
 8425 006c 0DE0     		b	.L485
 8426              	.L486:
3504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
3508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8427              		.loc 1 3508 17
 8428 006e 7B68     		ldr	r3, [r7, #4]
 8429 0070 2022     		movs	r2, #32
 8430 0072 9A67     		str	r2, [r3, #120]
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8431              		.loc 1 3509 18
 8432 0074 7B68     		ldr	r3, [r7, #4]
 8433 0076 2022     		movs	r2, #32
 8434 0078 DA67     		str	r2, [r3, #124]
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8435              		.loc 1 3510 24
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 233


 8436 007a 7B68     		ldr	r3, [r7, #4]
 8437 007c 0022     		movs	r2, #0
 8438 007e 1A66     		str	r2, [r3, #96]
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 8439              		.loc 1 3512 3
 8440 0080 7B68     		ldr	r3, [r7, #4]
 8441 0082 0022     		movs	r2, #0
 8442 0084 83F87420 		strb	r2, [r3, #116]
3513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 8443              		.loc 1 3514 10
 8444 0088 0023     		movs	r3, #0
 8445              	.L485:
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 8446              		.loc 1 3515 1
 8447 008a 1846     		mov	r0, r3
 8448 008c 1037     		adds	r7, r7, #16
 8449              	.LCFI252:
 8450              		.cfi_def_cfa_offset 8
 8451 008e BD46     		mov	sp, r7
 8452              	.LCFI253:
 8453              		.cfi_def_cfa_register 13
 8454              		@ sp needed
 8455 0090 80BD     		pop	{r7, pc}
 8456              		.cfi_endproc
 8457              	.LFE337:
 8459              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 8460              		.align	1
 8461              		.global	UART_WaitOnFlagUntilTimeout
 8462              		.syntax unified
 8463              		.thumb
 8464              		.thumb_func
 8465              		.fpu fpv4-sp-d16
 8467              	UART_WaitOnFlagUntilTimeout:
 8468              	.LFB338:
3516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                  until a flag is no longer in the specified status.
3520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Status    The actual Flag status (SET or RESET)
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
3524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 8469              		.loc 1 3529 1
 8470              		.cfi_startproc
 8471              		@ args = 4, pretend = 0, frame = 112
 8472              		@ frame_needed = 1, uses_anonymous_args = 0
 8473 0000 80B5     		push	{r7, lr}
 8474              	.LCFI254:
 8475              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 234


 8476              		.cfi_offset 7, -8
 8477              		.cfi_offset 14, -4
 8478 0002 9CB0     		sub	sp, sp, #112
 8479              	.LCFI255:
 8480              		.cfi_def_cfa_offset 120
 8481 0004 00AF     		add	r7, sp, #0
 8482              	.LCFI256:
 8483              		.cfi_def_cfa_register 7
 8484 0006 F860     		str	r0, [r7, #12]
 8485 0008 B960     		str	r1, [r7, #8]
 8486 000a 3B60     		str	r3, [r7]
 8487 000c 1346     		mov	r3, r2
 8488 000e FB71     		strb	r3, [r7, #7]
3530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8489              		.loc 1 3531 9
 8490 0010 A5E0     		b	.L488
 8491              	.L504:
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 8492              		.loc 1 3534 8
 8493 0012 BB6F     		ldr	r3, [r7, #120]
 8494 0014 B3F1FF3F 		cmp	r3, #-1
 8495 0018 00F0A180 		beq	.L488
3535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8496              		.loc 1 3536 13
 8497 001c FFF7FEFF 		bl	HAL_GetTick
 8498 0020 0246     		mov	r2, r0
 8499              		.loc 1 3536 27
 8500 0022 3B68     		ldr	r3, [r7]
 8501 0024 D31A     		subs	r3, r2, r3
 8502              		.loc 1 3536 10
 8503 0026 BA6F     		ldr	r2, [r7, #120]
 8504 0028 9A42     		cmp	r2, r3
 8505 002a 02D3     		bcc	.L493
 8506              		.loc 1 3536 51 discriminator 1
 8507 002c BB6F     		ldr	r3, [r7, #120]
 8508 002e 002B     		cmp	r3, #0
 8509 0030 3ED1     		bne	.L490
 8510              	.L493:
 8511              	.LBB663:
3537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            interrupts for the interrupt process */
3540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
3542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                                 USART_CR1_TXEIE_TXFNFIE));
3543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE
 8512              		.loc 1 3544 9 discriminator 1
 8513 0032 FB68     		ldr	r3, [r7, #12]
 8514 0034 1B68     		ldr	r3, [r3]
 8515 0036 3B65     		str	r3, [r7, #80]
 8516              	.LBB664:
 8517              	.LBB665:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 235


1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8518              		.loc 2 1155 4 discriminator 1
 8519 0038 3B6D     		ldr	r3, [r7, #80]
 8520              		.syntax unified
 8521              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8522 003a 53E8003F 		ldrex r3, [r3]
 8523              	@ 0 "" 2
 8524              		.thumb
 8525              		.syntax unified
 8526 003e FB64     		str	r3, [r7, #76]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8527              		.loc 2 1156 10 discriminator 1
 8528 0040 FB6C     		ldr	r3, [r7, #76]
 8529              	.LBE665:
 8530              	.LBE664:
 8531              		.loc 1 3544 9 discriminator 1
 8532 0042 23F4D073 		bic	r3, r3, #416
 8533 0046 7B66     		str	r3, [r7, #100]
 8534 0048 FB68     		ldr	r3, [r7, #12]
 8535 004a 1B68     		ldr	r3, [r3]
 8536 004c 1A46     		mov	r2, r3
 8537 004e 7B6E     		ldr	r3, [r7, #100]
 8538 0050 FB65     		str	r3, [r7, #92]
 8539 0052 BA65     		str	r2, [r7, #88]
 8540              	.LBB666:
 8541              	.LBB667:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8542              		.loc 2 1206 4 discriminator 1
 8543 0054 B96D     		ldr	r1, [r7, #88]
 8544 0056 FA6D     		ldr	r2, [r7, #92]
 8545              		.syntax unified
 8546              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8547 0058 41E80023 		strex r3, r2, [r1]
 8548              	@ 0 "" 2
 8549              		.thumb
 8550              		.syntax unified
 8551 005c 7B65     		str	r3, [r7, #84]
 8552              		.loc 2 1207 10 discriminator 1
 8553 005e 7B6D     		ldr	r3, [r7, #84]
 8554              	.LBE667:
 8555              	.LBE666:
 8556              		.loc 1 3544 9 discriminator 1
 8557 0060 002B     		cmp	r3, #0
 8558 0062 E6D1     		bne	.L493
 8559              	.L496:
 8560              	.LBE663:
 8561              	.LBB668:
3545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8562              		.loc 1 3546 9 discriminator 1
 8563 0064 FB68     		ldr	r3, [r7, #12]
 8564 0066 1B68     		ldr	r3, [r3]
 8565 0068 0833     		adds	r3, r3, #8
 8566 006a FB63     		str	r3, [r7, #60]
 8567              	.LBB669:
 8568              	.LBB670:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 236


 8569              		.loc 2 1155 4 discriminator 1
 8570 006c FB6B     		ldr	r3, [r7, #60]
 8571              		.syntax unified
 8572              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8573 006e 53E8003F 		ldrex r3, [r3]
 8574              	@ 0 "" 2
 8575              		.thumb
 8576              		.syntax unified
 8577 0072 BB63     		str	r3, [r7, #56]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8578              		.loc 2 1156 10 discriminator 1
 8579 0074 BB6B     		ldr	r3, [r7, #56]
 8580              	.LBE670:
 8581              	.LBE669:
 8582              		.loc 1 3546 9 discriminator 1
 8583 0076 23F00103 		bic	r3, r3, #1
 8584 007a 3B66     		str	r3, [r7, #96]
 8585 007c FB68     		ldr	r3, [r7, #12]
 8586 007e 1B68     		ldr	r3, [r3]
 8587 0080 0833     		adds	r3, r3, #8
 8588 0082 3A6E     		ldr	r2, [r7, #96]
 8589 0084 BA64     		str	r2, [r7, #72]
 8590 0086 7B64     		str	r3, [r7, #68]
 8591              	.LBB671:
 8592              	.LBB672:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8593              		.loc 2 1206 4 discriminator 1
 8594 0088 796C     		ldr	r1, [r7, #68]
 8595 008a BA6C     		ldr	r2, [r7, #72]
 8596              		.syntax unified
 8597              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8598 008c 41E80023 		strex r3, r2, [r1]
 8599              	@ 0 "" 2
 8600              		.thumb
 8601              		.syntax unified
 8602 0090 3B64     		str	r3, [r7, #64]
 8603              		.loc 2 1207 10 discriminator 1
 8604 0092 3B6C     		ldr	r3, [r7, #64]
 8605              	.LBE672:
 8606              	.LBE671:
 8607              		.loc 1 3546 9 discriminator 1
 8608 0094 002B     		cmp	r3, #0
 8609 0096 E5D1     		bne	.L496
 8610              	.LBE668:
3547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 8611              		.loc 1 3548 23
 8612 0098 FB68     		ldr	r3, [r7, #12]
 8613 009a 2022     		movs	r2, #32
 8614 009c 9A67     		str	r2, [r3, #120]
3549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 8615              		.loc 1 3549 24
 8616 009e FB68     		ldr	r3, [r7, #12]
 8617 00a0 2022     		movs	r2, #32
 8618 00a2 DA67     		str	r2, [r3, #124]
3550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 237


 8619              		.loc 1 3551 9
 8620 00a4 FB68     		ldr	r3, [r7, #12]
 8621 00a6 0022     		movs	r2, #0
 8622 00a8 83F87420 		strb	r2, [r3, #116]
3552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 8623              		.loc 1 3553 16
 8624 00ac 0323     		movs	r3, #3
 8625 00ae 67E0     		b	.L497
 8626              	.L490:
3554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8627              		.loc 1 3556 11
 8628 00b0 FB68     		ldr	r3, [r7, #12]
 8629 00b2 1B68     		ldr	r3, [r3]
 8630 00b4 1B68     		ldr	r3, [r3]
 8631 00b6 03F00403 		and	r3, r3, #4
 8632              		.loc 1 3556 10
 8633 00ba 002B     		cmp	r3, #0
 8634 00bc 4FD0     		beq	.L488
3557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8635              		.loc 1 3558 13
 8636 00be FB68     		ldr	r3, [r7, #12]
 8637 00c0 1B68     		ldr	r3, [r3]
 8638 00c2 DB69     		ldr	r3, [r3, #28]
 8639 00c4 03F40063 		and	r3, r3, #2048
 8640              		.loc 1 3558 12
 8641 00c8 B3F5006F 		cmp	r3, #2048
 8642 00cc 47D1     		bne	.L488
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8643              		.loc 1 3561 11
 8644 00ce FB68     		ldr	r3, [r7, #12]
 8645 00d0 1B68     		ldr	r3, [r3]
 8646 00d2 4FF40062 		mov	r2, #2048
 8647 00d6 1A62     		str	r2, [r3, #32]
 8648              	.L500:
 8649              	.LBB673:
3562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              interrupts for the interrupt process */
3565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
3567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                                   USART_CR1_TXEIE_TXFNFIE));
3568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXE
 8650              		.loc 1 3569 11 discriminator 1
 8651 00d8 FB68     		ldr	r3, [r7, #12]
 8652 00da 1B68     		ldr	r3, [r3]
 8653 00dc BB62     		str	r3, [r7, #40]
 8654              	.LBB674:
 8655              	.LBB675:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8656              		.loc 2 1155 4 discriminator 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 238


 8657 00de BB6A     		ldr	r3, [r7, #40]
 8658              		.syntax unified
 8659              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8660 00e0 53E8003F 		ldrex r3, [r3]
 8661              	@ 0 "" 2
 8662              		.thumb
 8663              		.syntax unified
 8664 00e4 7B62     		str	r3, [r7, #36]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8665              		.loc 2 1156 10 discriminator 1
 8666 00e6 7B6A     		ldr	r3, [r7, #36]
 8667              	.LBE675:
 8668              	.LBE674:
 8669              		.loc 1 3569 11 discriminator 1
 8670 00e8 23F4D073 		bic	r3, r3, #416
 8671 00ec FB66     		str	r3, [r7, #108]
 8672 00ee FB68     		ldr	r3, [r7, #12]
 8673 00f0 1B68     		ldr	r3, [r3]
 8674 00f2 1A46     		mov	r2, r3
 8675 00f4 FB6E     		ldr	r3, [r7, #108]
 8676 00f6 7B63     		str	r3, [r7, #52]
 8677 00f8 3A63     		str	r2, [r7, #48]
 8678              	.LBB676:
 8679              	.LBB677:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8680              		.loc 2 1206 4 discriminator 1
 8681 00fa 396B     		ldr	r1, [r7, #48]
 8682 00fc 7A6B     		ldr	r2, [r7, #52]
 8683              		.syntax unified
 8684              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8685 00fe 41E80023 		strex r3, r2, [r1]
 8686              	@ 0 "" 2
 8687              		.thumb
 8688              		.syntax unified
 8689 0102 FB62     		str	r3, [r7, #44]
 8690              		.loc 2 1207 10 discriminator 1
 8691 0104 FB6A     		ldr	r3, [r7, #44]
 8692              	.LBE677:
 8693              	.LBE676:
 8694              		.loc 1 3569 11 discriminator 1
 8695 0106 002B     		cmp	r3, #0
 8696 0108 E6D1     		bne	.L500
 8697              	.L503:
 8698              	.LBE673:
 8699              	.LBB678:
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8700              		.loc 1 3571 11 discriminator 1
 8701 010a FB68     		ldr	r3, [r7, #12]
 8702 010c 1B68     		ldr	r3, [r3]
 8703 010e 0833     		adds	r3, r3, #8
 8704 0110 7B61     		str	r3, [r7, #20]
 8705              	.LBB679:
 8706              	.LBB680:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8707              		.loc 2 1155 4 discriminator 1
 8708 0112 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 239


 8709              		.syntax unified
 8710              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8711 0114 53E8003F 		ldrex r3, [r3]
 8712              	@ 0 "" 2
 8713              		.thumb
 8714              		.syntax unified
 8715 0118 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8716              		.loc 2 1156 10 discriminator 1
 8717 011a 3B69     		ldr	r3, [r7, #16]
 8718              	.LBE680:
 8719              	.LBE679:
 8720              		.loc 1 3571 11 discriminator 1
 8721 011c 23F00103 		bic	r3, r3, #1
 8722 0120 BB66     		str	r3, [r7, #104]
 8723 0122 FB68     		ldr	r3, [r7, #12]
 8724 0124 1B68     		ldr	r3, [r3]
 8725 0126 0833     		adds	r3, r3, #8
 8726 0128 BA6E     		ldr	r2, [r7, #104]
 8727 012a 3A62     		str	r2, [r7, #32]
 8728 012c FB61     		str	r3, [r7, #28]
 8729              	.LBB681:
 8730              	.LBB682:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8731              		.loc 2 1206 4 discriminator 1
 8732 012e F969     		ldr	r1, [r7, #28]
 8733 0130 3A6A     		ldr	r2, [r7, #32]
 8734              		.syntax unified
 8735              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8736 0132 41E80023 		strex r3, r2, [r1]
 8737              	@ 0 "" 2
 8738              		.thumb
 8739              		.syntax unified
 8740 0136 BB61     		str	r3, [r7, #24]
 8741              		.loc 2 1207 10 discriminator 1
 8742 0138 BB69     		ldr	r3, [r7, #24]
 8743              	.LBE682:
 8744              	.LBE681:
 8745              		.loc 1 3571 11 discriminator 1
 8746 013a 002B     		cmp	r3, #0
 8747 013c E5D1     		bne	.L503
 8748              	.LBE678:
3572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
 8749              		.loc 1 3573 25
 8750 013e FB68     		ldr	r3, [r7, #12]
 8751 0140 2022     		movs	r2, #32
 8752 0142 9A67     		str	r2, [r3, #120]
3574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 8753              		.loc 1 3574 26
 8754 0144 FB68     		ldr	r3, [r7, #12]
 8755 0146 2022     		movs	r2, #32
 8756 0148 DA67     		str	r2, [r3, #124]
3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 8757              		.loc 1 3575 28
 8758 014a FB68     		ldr	r3, [r7, #12]
 8759 014c 2022     		movs	r2, #32
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 240


 8760 014e C3F88020 		str	r2, [r3, #128]
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Process Unlocked */
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 8761              		.loc 1 3578 11
 8762 0152 FB68     		ldr	r3, [r7, #12]
 8763 0154 0022     		movs	r2, #0
 8764 0156 83F87420 		strb	r2, [r3, #116]
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 8765              		.loc 1 3580 18
 8766 015a 0323     		movs	r3, #3
 8767 015c 10E0     		b	.L497
 8768              	.L488:
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 8769              		.loc 1 3531 11
 8770 015e FB68     		ldr	r3, [r7, #12]
 8771 0160 1B68     		ldr	r3, [r3]
 8772 0162 DA69     		ldr	r2, [r3, #28]
 8773 0164 BB68     		ldr	r3, [r7, #8]
 8774 0166 1340     		ands	r3, r3, r2
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 8775              		.loc 1 3531 50
 8776 0168 BA68     		ldr	r2, [r7, #8]
 8777 016a 9A42     		cmp	r2, r3
 8778 016c 0CBF     		ite	eq
 8779 016e 0123     		moveq	r3, #1
 8780 0170 0023     		movne	r3, #0
 8781 0172 DBB2     		uxtb	r3, r3
 8782 0174 1A46     		mov	r2, r3
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 8783              		.loc 1 3531 59
 8784 0176 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 8785              		.loc 1 3531 9
 8786 0178 9A42     		cmp	r2, r3
 8787 017a 3FF44AAF 		beq	.L504
3581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 8788              		.loc 1 3585 10
 8789 017e 0023     		movs	r3, #0
 8790              	.L497:
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 8791              		.loc 1 3586 1
 8792 0180 1846     		mov	r0, r3
 8793 0182 7037     		adds	r7, r7, #112
 8794              	.LCFI257:
 8795              		.cfi_def_cfa_offset 8
 8796 0184 BD46     		mov	sp, r7
 8797              	.LCFI258:
 8798              		.cfi_def_cfa_register 13
 8799              		@ sp needed
 8800 0186 80BD     		pop	{r7, pc}
 8801              		.cfi_endproc
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 241


 8802              	.LFE338:
 8804              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 8805              		.align	1
 8806              		.global	UART_Start_Receive_IT
 8807              		.syntax unified
 8808              		.thumb
 8809              		.thumb_func
 8810              		.fpu fpv4-sp-d16
 8812              	UART_Start_Receive_IT:
 8813              	.LFB339:
3587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 8814              		.loc 1 3600 1
 8815              		.cfi_startproc
 8816              		@ args = 0, pretend = 0, frame = 88
 8817              		@ frame_needed = 1, uses_anonymous_args = 0
 8818              		@ link register save eliminated.
 8819 0000 80B4     		push	{r7}
 8820              	.LCFI259:
 8821              		.cfi_def_cfa_offset 4
 8822              		.cfi_offset 7, -4
 8823 0002 97B0     		sub	sp, sp, #92
 8824              	.LCFI260:
 8825              		.cfi_def_cfa_offset 96
 8826 0004 00AF     		add	r7, sp, #0
 8827              	.LCFI261:
 8828              		.cfi_def_cfa_register 7
 8829 0006 F860     		str	r0, [r7, #12]
 8830 0008 B960     		str	r1, [r7, #8]
 8831 000a 1346     		mov	r3, r2
 8832 000c FB80     		strh	r3, [r7, #6]	@ movhi
3601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 8833              		.loc 1 3601 22
 8834 000e FB68     		ldr	r3, [r7, #12]
 8835 0010 BA68     		ldr	r2, [r7, #8]
 8836 0012 5A65     		str	r2, [r3, #84]
3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferSize  = Size;
 8837              		.loc 1 3602 22
 8838 0014 FB68     		ldr	r3, [r7, #12]
 8839 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 8840 0018 A3F85820 		strh	r2, [r3, #88]	@ movhi
3603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = Size;
 8841              		.loc 1 3603 22
 8842 001c FB68     		ldr	r3, [r7, #12]
 8843 001e FA88     		ldrh	r2, [r7, #6]	@ movhi
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 242


 8844 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR       = NULL;
 8845              		.loc 1 3604 22
 8846 0024 FB68     		ldr	r3, [r7, #12]
 8847 0026 0022     		movs	r2, #0
 8848 0028 5A66     		str	r2, [r3, #100]
3605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
 8849              		.loc 1 3607 3
 8850 002a FB68     		ldr	r3, [r7, #12]
 8851 002c 9B68     		ldr	r3, [r3, #8]
 8852 002e B3F5805F 		cmp	r3, #4096
 8853 0032 0ED1     		bne	.L506
 8854              		.loc 1 3607 3 is_stmt 0 discriminator 1
 8855 0034 FB68     		ldr	r3, [r7, #12]
 8856 0036 1B69     		ldr	r3, [r3, #16]
 8857 0038 002B     		cmp	r3, #0
 8858 003a 05D1     		bne	.L507
 8859              		.loc 1 3607 3 discriminator 3
 8860 003c FB68     		ldr	r3, [r7, #12]
 8861 003e 40F2FF12 		movw	r2, #511
 8862 0042 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8863 0046 2DE0     		b	.L508
 8864              	.L507:
 8865              		.loc 1 3607 3 discriminator 4
 8866 0048 FB68     		ldr	r3, [r7, #12]
 8867 004a FF22     		movs	r2, #255
 8868 004c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8869 0050 28E0     		b	.L508
 8870              	.L506:
 8871              		.loc 1 3607 3 discriminator 2
 8872 0052 FB68     		ldr	r3, [r7, #12]
 8873 0054 9B68     		ldr	r3, [r3, #8]
 8874 0056 002B     		cmp	r3, #0
 8875 0058 0DD1     		bne	.L509
 8876              		.loc 1 3607 3 discriminator 5
 8877 005a FB68     		ldr	r3, [r7, #12]
 8878 005c 1B69     		ldr	r3, [r3, #16]
 8879 005e 002B     		cmp	r3, #0
 8880 0060 04D1     		bne	.L510
 8881              		.loc 1 3607 3 discriminator 7
 8882 0062 FB68     		ldr	r3, [r7, #12]
 8883 0064 FF22     		movs	r2, #255
 8884 0066 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8885 006a 1BE0     		b	.L508
 8886              	.L510:
 8887              		.loc 1 3607 3 discriminator 8
 8888 006c FB68     		ldr	r3, [r7, #12]
 8889 006e 7F22     		movs	r2, #127
 8890 0070 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8891 0074 16E0     		b	.L508
 8892              	.L509:
 8893              		.loc 1 3607 3 discriminator 6
 8894 0076 FB68     		ldr	r3, [r7, #12]
 8895 0078 9B68     		ldr	r3, [r3, #8]
 8896 007a B3F1805F 		cmp	r3, #268435456
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 243


 8897 007e 0DD1     		bne	.L511
 8898              		.loc 1 3607 3 discriminator 9
 8899 0080 FB68     		ldr	r3, [r7, #12]
 8900 0082 1B69     		ldr	r3, [r3, #16]
 8901 0084 002B     		cmp	r3, #0
 8902 0086 04D1     		bne	.L512
 8903              		.loc 1 3607 3 discriminator 11
 8904 0088 FB68     		ldr	r3, [r7, #12]
 8905 008a 7F22     		movs	r2, #127
 8906 008c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8907 0090 08E0     		b	.L508
 8908              	.L512:
 8909              		.loc 1 3607 3 discriminator 12
 8910 0092 FB68     		ldr	r3, [r7, #12]
 8911 0094 3F22     		movs	r2, #63
 8912 0096 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8913 009a 03E0     		b	.L508
 8914              	.L511:
 8915              		.loc 1 3607 3 discriminator 10
 8916 009c FB68     		ldr	r3, [r7, #12]
 8917 009e 0022     		movs	r2, #0
 8918 00a0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 8919              	.L508:
3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8920              		.loc 1 3609 20 is_stmt 1
 8921 00a4 FB68     		ldr	r3, [r7, #12]
 8922 00a6 0022     		movs	r2, #0
 8923 00a8 C3F88020 		str	r2, [r3, #128]
3610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8924              		.loc 1 3610 18
 8925 00ac FB68     		ldr	r3, [r7, #12]
 8926 00ae 2222     		movs	r2, #34
 8927 00b0 DA67     		str	r2, [r3, #124]
 8928              	.L515:
 8929              	.LBB683:
3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8930              		.loc 1 3613 3 discriminator 1
 8931 00b2 FB68     		ldr	r3, [r7, #12]
 8932 00b4 1B68     		ldr	r3, [r3]
 8933 00b6 0833     		adds	r3, r3, #8
 8934 00b8 FB63     		str	r3, [r7, #60]
 8935              	.LBB684:
 8936              	.LBB685:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8937              		.loc 2 1155 4 discriminator 1
 8938 00ba FB6B     		ldr	r3, [r7, #60]
 8939              		.syntax unified
 8940              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8941 00bc 53E8003F 		ldrex r3, [r3]
 8942              	@ 0 "" 2
 8943              		.thumb
 8944              		.syntax unified
 8945 00c0 BB63     		str	r3, [r7, #56]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 244


 8946              		.loc 2 1156 10 discriminator 1
 8947 00c2 BB6B     		ldr	r3, [r7, #56]
 8948              	.LBE685:
 8949              	.LBE684:
 8950              		.loc 1 3613 3 discriminator 1
 8951 00c4 43F00103 		orr	r3, r3, #1
 8952 00c8 7B65     		str	r3, [r7, #84]
 8953 00ca FB68     		ldr	r3, [r7, #12]
 8954 00cc 1B68     		ldr	r3, [r3]
 8955 00ce 0833     		adds	r3, r3, #8
 8956 00d0 7A6D     		ldr	r2, [r7, #84]
 8957 00d2 BA64     		str	r2, [r7, #72]
 8958 00d4 7B64     		str	r3, [r7, #68]
 8959              	.LBB686:
 8960              	.LBB687:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8961              		.loc 2 1206 4 discriminator 1
 8962 00d6 796C     		ldr	r1, [r7, #68]
 8963 00d8 BA6C     		ldr	r2, [r7, #72]
 8964              		.syntax unified
 8965              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8966 00da 41E80023 		strex r3, r2, [r1]
 8967              	@ 0 "" 2
 8968              		.thumb
 8969              		.syntax unified
 8970 00de 3B64     		str	r3, [r7, #64]
 8971              		.loc 2 1207 10 discriminator 1
 8972 00e0 3B6C     		ldr	r3, [r7, #64]
 8973              	.LBE687:
 8974              	.LBE686:
 8975              		.loc 1 3613 3 discriminator 1
 8976 00e2 002B     		cmp	r3, #0
 8977 00e4 E5D1     		bne	.L515
 8978              	.LBE683:
3614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure Rx interrupt processing */
3617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
3618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT_FIFOEN;
3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT_FIFOEN;
3627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
3630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
3632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
3633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 245


3637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
3644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
3648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
3651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
3654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
3656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
3660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the Rx ISR function pointer according to the data word length */
3664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8979              		.loc 1 3664 19
 8980 00e6 FB68     		ldr	r3, [r7, #12]
 8981 00e8 9B68     		ldr	r3, [r3, #8]
 8982              		.loc 1 3664 6
 8983 00ea B3F5805F 		cmp	r3, #4096
 8984 00ee 07D1     		bne	.L516
 8985              		.loc 1 3664 69 discriminator 1
 8986 00f0 FB68     		ldr	r3, [r7, #12]
 8987 00f2 1B69     		ldr	r3, [r3, #16]
 8988              		.loc 1 3664 54 discriminator 1
 8989 00f4 002B     		cmp	r3, #0
 8990 00f6 03D1     		bne	.L516
3665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = UART_RxISR_16BIT;
 8991              		.loc 1 3666 18
 8992 00f8 FB68     		ldr	r3, [r7, #12]
 8993 00fa 244A     		ldr	r2, .L526
 8994 00fc 5A66     		str	r2, [r3, #100]
 8995 00fe 02E0     		b	.L517
 8996              	.L516:
3667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = UART_RxISR_8BIT;
 8997              		.loc 1 3670 18
 8998 0100 FB68     		ldr	r3, [r7, #12]
 8999 0102 234A     		ldr	r2, .L526+4
 9000 0104 5A66     		str	r2, [r3, #100]
 9001              	.L517:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 246


3671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 9002              		.loc 1 3673 3
 9003 0106 FB68     		ldr	r3, [r7, #12]
 9004 0108 0022     		movs	r2, #0
 9005 010a 83F87420 		strb	r2, [r3, #116]
3674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 9006              		.loc 1 3676 18
 9007 010e FB68     		ldr	r3, [r7, #12]
 9008 0110 1B69     		ldr	r3, [r3, #16]
 9009              		.loc 1 3676 6
 9010 0112 002B     		cmp	r3, #0
 9011 0114 19D0     		beq	.L518
 9012              	.L521:
 9013              	.LBB688:
3677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 9014              		.loc 1 3678 5 discriminator 1
 9015 0116 FB68     		ldr	r3, [r7, #12]
 9016 0118 1B68     		ldr	r3, [r3]
 9017 011a BB62     		str	r3, [r7, #40]
 9018              	.LBB689:
 9019              	.LBB690:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9020              		.loc 2 1155 4 discriminator 1
 9021 011c BB6A     		ldr	r3, [r7, #40]
 9022              		.syntax unified
 9023              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9024 011e 53E8003F 		ldrex r3, [r3]
 9025              	@ 0 "" 2
 9026              		.thumb
 9027              		.syntax unified
 9028 0122 7B62     		str	r3, [r7, #36]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9029              		.loc 2 1156 10 discriminator 1
 9030 0124 7B6A     		ldr	r3, [r7, #36]
 9031              	.LBE690:
 9032              	.LBE689:
 9033              		.loc 1 3678 5 discriminator 1
 9034 0126 43F49073 		orr	r3, r3, #288
 9035 012a FB64     		str	r3, [r7, #76]
 9036 012c FB68     		ldr	r3, [r7, #12]
 9037 012e 1B68     		ldr	r3, [r3]
 9038 0130 1A46     		mov	r2, r3
 9039 0132 FB6C     		ldr	r3, [r7, #76]
 9040 0134 7B63     		str	r3, [r7, #52]
 9041 0136 3A63     		str	r2, [r7, #48]
 9042              	.LBB691:
 9043              	.LBB692:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9044              		.loc 2 1206 4 discriminator 1
 9045 0138 396B     		ldr	r1, [r7, #48]
 9046 013a 7A6B     		ldr	r2, [r7, #52]
 9047              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 247


 9048              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9049 013c 41E80023 		strex r3, r2, [r1]
 9050              	@ 0 "" 2
 9051              		.thumb
 9052              		.syntax unified
 9053 0140 FB62     		str	r3, [r7, #44]
 9054              		.loc 2 1207 10 discriminator 1
 9055 0142 FB6A     		ldr	r3, [r7, #44]
 9056              	.LBE692:
 9057              	.LBE691:
 9058              		.loc 1 3678 5 discriminator 1
 9059 0144 002B     		cmp	r3, #0
 9060 0146 E6D1     		bne	.L521
 9061 0148 18E0     		b	.L522
 9062              	.L518:
 9063              	.LBE688:
 9064              	.LBB693:
3679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE);
 9065              		.loc 1 3682 5 discriminator 1
 9066 014a FB68     		ldr	r3, [r7, #12]
 9067 014c 1B68     		ldr	r3, [r3]
 9068 014e 7B61     		str	r3, [r7, #20]
 9069              	.LBB694:
 9070              	.LBB695:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9071              		.loc 2 1155 4 discriminator 1
 9072 0150 7B69     		ldr	r3, [r7, #20]
 9073              		.syntax unified
 9074              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9075 0152 53E8003F 		ldrex r3, [r3]
 9076              	@ 0 "" 2
 9077              		.thumb
 9078              		.syntax unified
 9079 0156 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9080              		.loc 2 1156 10 discriminator 1
 9081 0158 3B69     		ldr	r3, [r7, #16]
 9082              	.LBE695:
 9083              	.LBE694:
 9084              		.loc 1 3682 5 discriminator 1
 9085 015a 43F02003 		orr	r3, r3, #32
 9086 015e 3B65     		str	r3, [r7, #80]
 9087 0160 FB68     		ldr	r3, [r7, #12]
 9088 0162 1B68     		ldr	r3, [r3]
 9089 0164 1A46     		mov	r2, r3
 9090 0166 3B6D     		ldr	r3, [r7, #80]
 9091 0168 3B62     		str	r3, [r7, #32]
 9092 016a FA61     		str	r2, [r7, #28]
 9093              	.LBB696:
 9094              	.LBB697:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9095              		.loc 2 1206 4 discriminator 1
 9096 016c F969     		ldr	r1, [r7, #28]
 9097 016e 3A6A     		ldr	r2, [r7, #32]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 248


 9098              		.syntax unified
 9099              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9100 0170 41E80023 		strex r3, r2, [r1]
 9101              	@ 0 "" 2
 9102              		.thumb
 9103              		.syntax unified
 9104 0174 BB61     		str	r3, [r7, #24]
 9105              		.loc 2 1207 10 discriminator 1
 9106 0176 BB69     		ldr	r3, [r7, #24]
 9107              	.LBE697:
 9108              	.LBE696:
 9109              		.loc 1 3682 5 discriminator 1
 9110 0178 002B     		cmp	r3, #0
 9111 017a E6D1     		bne	.L518
 9112              	.L522:
 9113              	.LBE693:
3683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 9114              		.loc 1 3685 10
 9115 017c 0023     		movs	r3, #0
3686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 9116              		.loc 1 3686 1
 9117 017e 1846     		mov	r0, r3
 9118 0180 5C37     		adds	r7, r7, #92
 9119              	.LCFI262:
 9120              		.cfi_def_cfa_offset 4
 9121 0182 BD46     		mov	sp, r7
 9122              	.LCFI263:
 9123              		.cfi_def_cfa_register 13
 9124              		@ sp needed
 9125 0184 5DF8047B 		ldr	r7, [sp], #4
 9126              	.LCFI264:
 9127              		.cfi_restore 7
 9128              		.cfi_def_cfa_offset 0
 9129 0188 7047     		bx	lr
 9130              	.L527:
 9131 018a 00BF     		.align	2
 9132              	.L526:
 9133 018c 00000000 		.word	UART_RxISR_16BIT
 9134 0190 00000000 		.word	UART_RxISR_8BIT
 9135              		.cfi_endproc
 9136              	.LFE339:
 9138              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 9139              		.align	1
 9140              		.global	UART_Start_Receive_DMA
 9141              		.syntax unified
 9142              		.thumb
 9143              		.thumb_func
 9144              		.fpu fpv4-sp-d16
 9146              	UART_Start_Receive_DMA:
 9147              	.LFB340:
3687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 249


3692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 9148              		.loc 1 3700 1
 9149              		.cfi_startproc
 9150              		@ args = 0, pretend = 0, frame = 88
 9151              		@ frame_needed = 1, uses_anonymous_args = 0
 9152 0000 80B5     		push	{r7, lr}
 9153              	.LCFI265:
 9154              		.cfi_def_cfa_offset 8
 9155              		.cfi_offset 7, -8
 9156              		.cfi_offset 14, -4
 9157 0002 96B0     		sub	sp, sp, #88
 9158              	.LCFI266:
 9159              		.cfi_def_cfa_offset 96
 9160 0004 00AF     		add	r7, sp, #0
 9161              	.LCFI267:
 9162              		.cfi_def_cfa_register 7
 9163 0006 F860     		str	r0, [r7, #12]
 9164 0008 B960     		str	r1, [r7, #8]
 9165 000a 1346     		mov	r3, r2
 9166 000c FB80     		strh	r3, [r7, #6]	@ movhi
3701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 9167              		.loc 1 3701 21
 9168 000e FB68     		ldr	r3, [r7, #12]
 9169 0010 BA68     		ldr	r2, [r7, #8]
 9170 0012 5A65     		str	r2, [r3, #84]
3702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferSize = Size;
 9171              		.loc 1 3702 21
 9172 0014 FB68     		ldr	r3, [r7, #12]
 9173 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 9174 0018 A3F85820 		strh	r2, [r3, #88]	@ movhi
3703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 9175              		.loc 1 3704 20
 9176 001c FB68     		ldr	r3, [r7, #12]
 9177 001e 0022     		movs	r2, #0
 9178 0020 C3F88020 		str	r2, [r3, #128]
3705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 9179              		.loc 1 3705 18
 9180 0024 FB68     		ldr	r3, [r7, #12]
 9181 0026 2222     		movs	r2, #34
 9182 0028 DA67     		str	r2, [r3, #124]
3706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 9183              		.loc 1 3707 12
 9184 002a FB68     		ldr	r3, [r7, #12]
 9185 002c 1B6F     		ldr	r3, [r3, #112]
 9186              		.loc 1 3707 6
 9187 002e 002B     		cmp	r3, #0
 9188 0030 2BD0     		beq	.L529
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 250


3708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 9189              		.loc 1 3710 10
 9190 0032 FB68     		ldr	r3, [r7, #12]
 9191 0034 1B6F     		ldr	r3, [r3, #112]
 9192              		.loc 1 3710 37
 9193 0036 424A     		ldr	r2, .L541
 9194 0038 DA62     		str	r2, [r3, #44]
3711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 9195              		.loc 1 3713 10
 9196 003a FB68     		ldr	r3, [r7, #12]
 9197 003c 1B6F     		ldr	r3, [r3, #112]
 9198              		.loc 1 3713 41
 9199 003e 414A     		ldr	r2, .L541+4
 9200 0040 1A63     		str	r2, [r3, #48]
3714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
3716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 9201              		.loc 1 3716 10
 9202 0042 FB68     		ldr	r3, [r7, #12]
 9203 0044 1B6F     		ldr	r3, [r3, #112]
 9204              		.loc 1 3716 38
 9205 0046 404A     		ldr	r2, .L541+8
 9206 0048 5A63     		str	r2, [r3, #52]
3717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
3719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 9207              		.loc 1 3719 10
 9208 004a FB68     		ldr	r3, [r7, #12]
 9209 004c 1B6F     		ldr	r3, [r3, #112]
 9210              		.loc 1 3719 38
 9211 004e 0022     		movs	r2, #0
 9212 0050 9A63     		str	r2, [r3, #56]
3720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA channel */
3722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPt
 9213              		.loc 1 3722 9
 9214 0052 FB68     		ldr	r3, [r7, #12]
 9215 0054 186F     		ldr	r0, [r3, #112]
 9216              		.loc 1 3722 57
 9217 0056 FB68     		ldr	r3, [r7, #12]
 9218 0058 1B68     		ldr	r3, [r3]
 9219              		.loc 1 3722 51
 9220 005a 2433     		adds	r3, r3, #36
 9221              		.loc 1 3722 9
 9222 005c 1946     		mov	r1, r3
 9223              		.loc 1 3722 89
 9224 005e FB68     		ldr	r3, [r7, #12]
 9225 0060 5B6D     		ldr	r3, [r3, #84]
 9226              		.loc 1 3722 9
 9227 0062 1A46     		mov	r2, r3
 9228 0064 FB88     		ldrh	r3, [r7, #6]
 9229 0066 FFF7FEFF 		bl	HAL_DMA_Start_IT
 9230 006a 0346     		mov	r3, r0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 251


 9231              		.loc 1 3722 8
 9232 006c 002B     		cmp	r3, #0
 9233 006e 0CD0     		beq	.L529
3723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set error code to DMA */
3725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
 9234              		.loc 1 3725 24
 9235 0070 FB68     		ldr	r3, [r7, #12]
 9236 0072 1022     		movs	r2, #16
 9237 0074 C3F88020 		str	r2, [r3, #128]
3726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
 9238              		.loc 1 3727 7
 9239 0078 FB68     		ldr	r3, [r7, #12]
 9240 007a 0022     		movs	r2, #0
 9241 007c 83F87420 		strb	r2, [r3, #116]
3728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to ready */
3730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9242              		.loc 1 3730 22
 9243 0080 FB68     		ldr	r3, [r7, #12]
 9244 0082 2022     		movs	r2, #32
 9245 0084 DA67     		str	r2, [r3, #124]
3731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 9246              		.loc 1 3732 14
 9247 0086 0123     		movs	r3, #1
 9248 0088 55E0     		b	.L530
 9249              	.L529:
3733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 9250              		.loc 1 3735 3
 9251 008a FB68     		ldr	r3, [r7, #12]
 9252 008c 0022     		movs	r2, #0
 9253 008e 83F87420 		strb	r2, [r3, #116]
3736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 9254              		.loc 1 3738 18
 9255 0092 FB68     		ldr	r3, [r7, #12]
 9256 0094 1B69     		ldr	r3, [r3, #16]
 9257              		.loc 1 3738 6
 9258 0096 002B     		cmp	r3, #0
 9259 0098 18D0     		beq	.L537
 9260              	.L534:
 9261              	.LBB698:
3739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 9262              		.loc 1 3740 5 discriminator 1
 9263 009a FB68     		ldr	r3, [r7, #12]
 9264 009c 1B68     		ldr	r3, [r3]
 9265 009e FB63     		str	r3, [r7, #60]
 9266              	.LBB699:
 9267              	.LBB700:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9268              		.loc 2 1155 4 discriminator 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 252


 9269 00a0 FB6B     		ldr	r3, [r7, #60]
 9270              		.syntax unified
 9271              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9272 00a2 53E8003F 		ldrex r3, [r3]
 9273              	@ 0 "" 2
 9274              		.thumb
 9275              		.syntax unified
 9276 00a6 BB63     		str	r3, [r7, #56]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9277              		.loc 2 1156 10 discriminator 1
 9278 00a8 BB6B     		ldr	r3, [r7, #56]
 9279              	.LBE700:
 9280              	.LBE699:
 9281              		.loc 1 3740 5 discriminator 1
 9282 00aa 43F48073 		orr	r3, r3, #256
 9283 00ae 7B65     		str	r3, [r7, #84]
 9284 00b0 FB68     		ldr	r3, [r7, #12]
 9285 00b2 1B68     		ldr	r3, [r3]
 9286 00b4 1A46     		mov	r2, r3
 9287 00b6 7B6D     		ldr	r3, [r7, #84]
 9288 00b8 BB64     		str	r3, [r7, #72]
 9289 00ba 7A64     		str	r2, [r7, #68]
 9290              	.LBB701:
 9291              	.LBB702:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9292              		.loc 2 1206 4 discriminator 1
 9293 00bc 796C     		ldr	r1, [r7, #68]
 9294 00be BA6C     		ldr	r2, [r7, #72]
 9295              		.syntax unified
 9296              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9297 00c0 41E80023 		strex r3, r2, [r1]
 9298              	@ 0 "" 2
 9299              		.thumb
 9300              		.syntax unified
 9301 00c4 3B64     		str	r3, [r7, #64]
 9302              		.loc 2 1207 10 discriminator 1
 9303 00c6 3B6C     		ldr	r3, [r7, #64]
 9304              	.LBE702:
 9305              	.LBE701:
 9306              		.loc 1 3740 5 discriminator 1
 9307 00c8 002B     		cmp	r3, #0
 9308 00ca E6D1     		bne	.L534
 9309              	.L537:
 9310              	.LBE698:
 9311              	.LBB703:
3741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9312              		.loc 1 3744 3 discriminator 1
 9313 00cc FB68     		ldr	r3, [r7, #12]
 9314 00ce 1B68     		ldr	r3, [r3]
 9315 00d0 0833     		adds	r3, r3, #8
 9316 00d2 BB62     		str	r3, [r7, #40]
 9317              	.LBB704:
 9318              	.LBB705:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 253


 9319              		.loc 2 1155 4 discriminator 1
 9320 00d4 BB6A     		ldr	r3, [r7, #40]
 9321              		.syntax unified
 9322              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9323 00d6 53E8003F 		ldrex r3, [r3]
 9324              	@ 0 "" 2
 9325              		.thumb
 9326              		.syntax unified
 9327 00da 7B62     		str	r3, [r7, #36]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9328              		.loc 2 1156 10 discriminator 1
 9329 00dc 7B6A     		ldr	r3, [r7, #36]
 9330              	.LBE705:
 9331              	.LBE704:
 9332              		.loc 1 3744 3 discriminator 1
 9333 00de 43F00103 		orr	r3, r3, #1
 9334 00e2 3B65     		str	r3, [r7, #80]
 9335 00e4 FB68     		ldr	r3, [r7, #12]
 9336 00e6 1B68     		ldr	r3, [r3]
 9337 00e8 0833     		adds	r3, r3, #8
 9338 00ea 3A6D     		ldr	r2, [r7, #80]
 9339 00ec 7A63     		str	r2, [r7, #52]
 9340 00ee 3B63     		str	r3, [r7, #48]
 9341              	.LBB706:
 9342              	.LBB707:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9343              		.loc 2 1206 4 discriminator 1
 9344 00f0 396B     		ldr	r1, [r7, #48]
 9345 00f2 7A6B     		ldr	r2, [r7, #52]
 9346              		.syntax unified
 9347              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9348 00f4 41E80023 		strex r3, r2, [r1]
 9349              	@ 0 "" 2
 9350              		.thumb
 9351              		.syntax unified
 9352 00f8 FB62     		str	r3, [r7, #44]
 9353              		.loc 2 1207 10 discriminator 1
 9354 00fa FB6A     		ldr	r3, [r7, #44]
 9355              	.LBE707:
 9356              	.LBE706:
 9357              		.loc 1 3744 3 discriminator 1
 9358 00fc 002B     		cmp	r3, #0
 9359 00fe E5D1     		bne	.L537
 9360              	.L540:
 9361              	.LBE703:
 9362              	.LBB708:
3745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   in the UART CR3 register */
3748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 9363              		.loc 1 3748 3 discriminator 1
 9364 0100 FB68     		ldr	r3, [r7, #12]
 9365 0102 1B68     		ldr	r3, [r3]
 9366 0104 0833     		adds	r3, r3, #8
 9367 0106 7B61     		str	r3, [r7, #20]
 9368              	.LBB709:
 9369              	.LBB710:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 254


1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9370              		.loc 2 1155 4 discriminator 1
 9371 0108 7B69     		ldr	r3, [r7, #20]
 9372              		.syntax unified
 9373              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9374 010a 53E8003F 		ldrex r3, [r3]
 9375              	@ 0 "" 2
 9376              		.thumb
 9377              		.syntax unified
 9378 010e 3B61     		str	r3, [r7, #16]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9379              		.loc 2 1156 10 discriminator 1
 9380 0110 3B69     		ldr	r3, [r7, #16]
 9381              	.LBE710:
 9382              	.LBE709:
 9383              		.loc 1 3748 3 discriminator 1
 9384 0112 43F04003 		orr	r3, r3, #64
 9385 0116 FB64     		str	r3, [r7, #76]
 9386 0118 FB68     		ldr	r3, [r7, #12]
 9387 011a 1B68     		ldr	r3, [r3]
 9388 011c 0833     		adds	r3, r3, #8
 9389 011e FA6C     		ldr	r2, [r7, #76]
 9390 0120 3A62     		str	r2, [r7, #32]
 9391 0122 FB61     		str	r3, [r7, #28]
 9392              	.LBB711:
 9393              	.LBB712:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9394              		.loc 2 1206 4 discriminator 1
 9395 0124 F969     		ldr	r1, [r7, #28]
 9396 0126 3A6A     		ldr	r2, [r7, #32]
 9397              		.syntax unified
 9398              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9399 0128 41E80023 		strex r3, r2, [r1]
 9400              	@ 0 "" 2
 9401              		.thumb
 9402              		.syntax unified
 9403 012c BB61     		str	r3, [r7, #24]
 9404              		.loc 2 1207 10 discriminator 1
 9405 012e BB69     		ldr	r3, [r7, #24]
 9406              	.LBE712:
 9407              	.LBE711:
 9408              		.loc 1 3748 3 discriminator 1
 9409 0130 002B     		cmp	r3, #0
 9410 0132 E5D1     		bne	.L540
 9411              	.LBE708:
3749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 9412              		.loc 1 3750 10
 9413 0134 0023     		movs	r3, #0
 9414              	.L530:
3751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 9415              		.loc 1 3751 1
 9416 0136 1846     		mov	r0, r3
 9417 0138 5837     		adds	r7, r7, #88
 9418              	.LCFI268:
 9419              		.cfi_def_cfa_offset 8
 9420 013a BD46     		mov	sp, r7
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 255


 9421              	.LCFI269:
 9422              		.cfi_def_cfa_register 13
 9423              		@ sp needed
 9424 013c 80BD     		pop	{r7, pc}
 9425              	.L542:
 9426 013e 00BF     		.align	2
 9427              	.L541:
 9428 0140 00000000 		.word	UART_DMAReceiveCplt
 9429 0144 00000000 		.word	UART_DMARxHalfCplt
 9430 0148 00000000 		.word	UART_DMAError
 9431              		.cfi_endproc
 9432              	.LFE340:
 9434              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 9435              		.align	1
 9436              		.syntax unified
 9437              		.thumb
 9438              		.thumb_func
 9439              		.fpu fpv4-sp-d16
 9441              	UART_EndTxTransfer:
 9442              	.LFB341:
3752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 9443              		.loc 1 3760 1
 9444              		.cfi_startproc
 9445              		@ args = 0, pretend = 0, frame = 32
 9446              		@ frame_needed = 1, uses_anonymous_args = 0
 9447              		@ link register save eliminated.
 9448 0000 80B4     		push	{r7}
 9449              	.LCFI270:
 9450              		.cfi_def_cfa_offset 4
 9451              		.cfi_offset 7, -4
 9452 0002 89B0     		sub	sp, sp, #36
 9453              	.LCFI271:
 9454              		.cfi_def_cfa_offset 40
 9455 0004 00AF     		add	r7, sp, #0
 9456              	.LCFI272:
 9457              		.cfi_def_cfa_register 7
 9458 0006 7860     		str	r0, [r7, #4]
 9459              	.L546:
 9460              	.LBB713:
3761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
3764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
3765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 9461              		.loc 1 3767 3 discriminator 1
 9462 0008 7B68     		ldr	r3, [r7, #4]
 9463 000a 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 256


 9464 000c FB60     		str	r3, [r7, #12]
 9465              	.LBB714:
 9466              	.LBB715:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9467              		.loc 2 1155 4 discriminator 1
 9468 000e FB68     		ldr	r3, [r7, #12]
 9469              		.syntax unified
 9470              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9471 0010 53E8003F 		ldrex r3, [r3]
 9472              	@ 0 "" 2
 9473              		.thumb
 9474              		.syntax unified
 9475 0014 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9476              		.loc 2 1156 10 discriminator 1
 9477 0016 BB68     		ldr	r3, [r7, #8]
 9478              	.LBE715:
 9479              	.LBE714:
 9480              		.loc 1 3767 3 discriminator 1
 9481 0018 23F0C003 		bic	r3, r3, #192
 9482 001c FB61     		str	r3, [r7, #28]
 9483 001e 7B68     		ldr	r3, [r7, #4]
 9484 0020 1B68     		ldr	r3, [r3]
 9485 0022 1A46     		mov	r2, r3
 9486 0024 FB69     		ldr	r3, [r7, #28]
 9487 0026 BB61     		str	r3, [r7, #24]
 9488 0028 7A61     		str	r2, [r7, #20]
 9489              	.LBB716:
 9490              	.LBB717:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9491              		.loc 2 1206 4 discriminator 1
 9492 002a 7969     		ldr	r1, [r7, #20]
 9493 002c BA69     		ldr	r2, [r7, #24]
 9494              		.syntax unified
 9495              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9496 002e 41E80023 		strex r3, r2, [r1]
 9497              	@ 0 "" 2
 9498              		.thumb
 9499              		.syntax unified
 9500 0032 3B61     		str	r3, [r7, #16]
 9501              		.loc 2 1207 10 discriminator 1
 9502 0034 3B69     		ldr	r3, [r7, #16]
 9503              	.LBE717:
 9504              	.LBE716:
 9505              		.loc 1 3767 3 discriminator 1
 9506 0036 002B     		cmp	r3, #0
 9507 0038 E6D1     		bne	.L546
 9508              	.LBE713:
3768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9509              		.loc 1 3771 17
 9510 003a 7B68     		ldr	r3, [r7, #4]
 9511 003c 2022     		movs	r2, #32
 9512 003e 9A67     		str	r2, [r3, #120]
3772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 257


 9513              		.loc 1 3772 1
 9514 0040 00BF     		nop
 9515 0042 2437     		adds	r7, r7, #36
 9516              	.LCFI273:
 9517              		.cfi_def_cfa_offset 4
 9518 0044 BD46     		mov	sp, r7
 9519              	.LCFI274:
 9520              		.cfi_def_cfa_register 13
 9521              		@ sp needed
 9522 0046 5DF8047B 		ldr	r7, [sp], #4
 9523              	.LCFI275:
 9524              		.cfi_restore 7
 9525              		.cfi_def_cfa_offset 0
 9526 004a 7047     		bx	lr
 9527              		.cfi_endproc
 9528              	.LFE341:
 9530              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 9531              		.align	1
 9532              		.syntax unified
 9533              		.thumb
 9534              		.thumb_func
 9535              		.fpu fpv4-sp-d16
 9537              	UART_EndRxTransfer:
 9538              	.LFB342:
3773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 9539              		.loc 1 3781 1
 9540              		.cfi_startproc
 9541              		@ args = 0, pretend = 0, frame = 80
 9542              		@ frame_needed = 1, uses_anonymous_args = 0
 9543              		@ link register save eliminated.
 9544 0000 80B4     		push	{r7}
 9545              	.LCFI276:
 9546              		.cfi_def_cfa_offset 4
 9547              		.cfi_offset 7, -4
 9548 0002 95B0     		sub	sp, sp, #84
 9549              	.LCFI277:
 9550              		.cfi_def_cfa_offset 88
 9551 0004 00AF     		add	r7, sp, #0
 9552              	.LCFI278:
 9553              		.cfi_def_cfa_register 7
 9554 0006 7860     		str	r0, [r7, #4]
 9555              	.L550:
 9556              	.LBB718:
3782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 258


 9557              		.loc 1 3787 3 discriminator 1
 9558 0008 7B68     		ldr	r3, [r7, #4]
 9559 000a 1B68     		ldr	r3, [r3]
 9560 000c 7B63     		str	r3, [r7, #52]
 9561              	.LBB719:
 9562              	.LBB720:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9563              		.loc 2 1155 4 discriminator 1
 9564 000e 7B6B     		ldr	r3, [r7, #52]
 9565              		.syntax unified
 9566              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9567 0010 53E8003F 		ldrex r3, [r3]
 9568              	@ 0 "" 2
 9569              		.thumb
 9570              		.syntax unified
 9571 0014 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9572              		.loc 2 1156 10 discriminator 1
 9573 0016 3B6B     		ldr	r3, [r7, #48]
 9574              	.LBE720:
 9575              	.LBE719:
 9576              		.loc 1 3787 3 discriminator 1
 9577 0018 23F49073 		bic	r3, r3, #288
 9578 001c FB64     		str	r3, [r7, #76]
 9579 001e 7B68     		ldr	r3, [r7, #4]
 9580 0020 1B68     		ldr	r3, [r3]
 9581 0022 1A46     		mov	r2, r3
 9582 0024 FB6C     		ldr	r3, [r7, #76]
 9583 0026 3B64     		str	r3, [r7, #64]
 9584 0028 FA63     		str	r2, [r7, #60]
 9585              	.LBB721:
 9586              	.LBB722:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9587              		.loc 2 1206 4 discriminator 1
 9588 002a F96B     		ldr	r1, [r7, #60]
 9589 002c 3A6C     		ldr	r2, [r7, #64]
 9590              		.syntax unified
 9591              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9592 002e 41E80023 		strex r3, r2, [r1]
 9593              	@ 0 "" 2
 9594              		.thumb
 9595              		.syntax unified
 9596 0032 BB63     		str	r3, [r7, #56]
 9597              		.loc 2 1207 10 discriminator 1
 9598 0034 BB6B     		ldr	r3, [r7, #56]
 9599              	.LBE722:
 9600              	.LBE721:
 9601              		.loc 1 3787 3 discriminator 1
 9602 0036 002B     		cmp	r3, #0
 9603 0038 E6D1     		bne	.L550
 9604              	.L553:
 9605              	.LBE718:
 9606              	.LBB723:
3788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 9607              		.loc 1 3788 3 discriminator 1
 9608 003a 7B68     		ldr	r3, [r7, #4]
 9609 003c 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 259


 9610 003e 0833     		adds	r3, r3, #8
 9611 0040 3B62     		str	r3, [r7, #32]
 9612              	.LBB724:
 9613              	.LBB725:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9614              		.loc 2 1155 4 discriminator 1
 9615 0042 3B6A     		ldr	r3, [r7, #32]
 9616              		.syntax unified
 9617              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9618 0044 53E8003F 		ldrex r3, [r3]
 9619              	@ 0 "" 2
 9620              		.thumb
 9621              		.syntax unified
 9622 0048 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9623              		.loc 2 1156 10 discriminator 1
 9624 004a FB69     		ldr	r3, [r7, #28]
 9625              	.LBE725:
 9626              	.LBE724:
 9627              		.loc 1 3788 3 discriminator 1
 9628 004c 23F00103 		bic	r3, r3, #1
 9629 0050 BB64     		str	r3, [r7, #72]
 9630 0052 7B68     		ldr	r3, [r7, #4]
 9631 0054 1B68     		ldr	r3, [r3]
 9632 0056 0833     		adds	r3, r3, #8
 9633 0058 BA6C     		ldr	r2, [r7, #72]
 9634 005a FA62     		str	r2, [r7, #44]
 9635 005c BB62     		str	r3, [r7, #40]
 9636              	.LBB726:
 9637              	.LBB727:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9638              		.loc 2 1206 4 discriminator 1
 9639 005e B96A     		ldr	r1, [r7, #40]
 9640 0060 FA6A     		ldr	r2, [r7, #44]
 9641              		.syntax unified
 9642              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9643 0062 41E80023 		strex r3, r2, [r1]
 9644              	@ 0 "" 2
 9645              		.thumb
 9646              		.syntax unified
 9647 0066 7B62     		str	r3, [r7, #36]
 9648              		.loc 2 1207 10 discriminator 1
 9649 0068 7B6A     		ldr	r3, [r7, #36]
 9650              	.LBE727:
 9651              	.LBE726:
 9652              		.loc 1 3788 3 discriminator 1
 9653 006a 002B     		cmp	r3, #0
 9654 006c E5D1     		bne	.L553
 9655              	.LBE723:
3789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9656              		.loc 1 3792 12
 9657 006e 7B68     		ldr	r3, [r7, #4]
 9658 0070 1B6E     		ldr	r3, [r3, #96]
 9659              		.loc 1 3792 6
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 260


 9660 0072 012B     		cmp	r3, #1
 9661 0074 18D1     		bne	.L554
 9662              	.L557:
 9663              	.LBB728:
3793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9664              		.loc 1 3794 5 discriminator 1
 9665 0076 7B68     		ldr	r3, [r7, #4]
 9666 0078 1B68     		ldr	r3, [r3]
 9667 007a FB60     		str	r3, [r7, #12]
 9668              	.LBB729:
 9669              	.LBB730:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9670              		.loc 2 1155 4 discriminator 1
 9671 007c FB68     		ldr	r3, [r7, #12]
 9672              		.syntax unified
 9673              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9674 007e 53E8003F 		ldrex r3, [r3]
 9675              	@ 0 "" 2
 9676              		.thumb
 9677              		.syntax unified
 9678 0082 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9679              		.loc 2 1156 10 discriminator 1
 9680 0084 BB68     		ldr	r3, [r7, #8]
 9681              	.LBE730:
 9682              	.LBE729:
 9683              		.loc 1 3794 5 discriminator 1
 9684 0086 23F01003 		bic	r3, r3, #16
 9685 008a 7B64     		str	r3, [r7, #68]
 9686 008c 7B68     		ldr	r3, [r7, #4]
 9687 008e 1B68     		ldr	r3, [r3]
 9688 0090 1A46     		mov	r2, r3
 9689 0092 7B6C     		ldr	r3, [r7, #68]
 9690 0094 BB61     		str	r3, [r7, #24]
 9691 0096 7A61     		str	r2, [r7, #20]
 9692              	.LBB731:
 9693              	.LBB732:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9694              		.loc 2 1206 4 discriminator 1
 9695 0098 7969     		ldr	r1, [r7, #20]
 9696 009a BA69     		ldr	r2, [r7, #24]
 9697              		.syntax unified
 9698              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9699 009c 41E80023 		strex r3, r2, [r1]
 9700              	@ 0 "" 2
 9701              		.thumb
 9702              		.syntax unified
 9703 00a0 3B61     		str	r3, [r7, #16]
 9704              		.loc 2 1207 10 discriminator 1
 9705 00a2 3B69     		ldr	r3, [r7, #16]
 9706              	.LBE732:
 9707              	.LBE731:
 9708              		.loc 1 3794 5 discriminator 1
 9709 00a4 002B     		cmp	r3, #0
 9710 00a6 E6D1     		bne	.L557
 9711              	.L554:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 261


 9712              	.LBE728:
3795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9713              		.loc 1 3798 18
 9714 00a8 7B68     		ldr	r3, [r7, #4]
 9715 00aa 2022     		movs	r2, #32
 9716 00ac DA67     		str	r2, [r3, #124]
3799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9717              		.loc 1 3799 24
 9718 00ae 7B68     		ldr	r3, [r7, #4]
 9719 00b0 0022     		movs	r2, #0
 9720 00b2 1A66     		str	r2, [r3, #96]
3800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
 9721              		.loc 1 3802 16
 9722 00b4 7B68     		ldr	r3, [r7, #4]
 9723 00b6 0022     		movs	r2, #0
 9724 00b8 5A66     		str	r2, [r3, #100]
3803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 9725              		.loc 1 3803 1
 9726 00ba 00BF     		nop
 9727 00bc 5437     		adds	r7, r7, #84
 9728              	.LCFI279:
 9729              		.cfi_def_cfa_offset 4
 9730 00be BD46     		mov	sp, r7
 9731              	.LCFI280:
 9732              		.cfi_def_cfa_register 13
 9733              		@ sp needed
 9734 00c0 5DF8047B 		ldr	r7, [sp], #4
 9735              	.LCFI281:
 9736              		.cfi_restore 7
 9737              		.cfi_def_cfa_offset 0
 9738 00c4 7047     		bx	lr
 9739              		.cfi_endproc
 9740              	.LFE342:
 9742              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 9743              		.align	1
 9744              		.syntax unified
 9745              		.thumb
 9746              		.thumb_func
 9747              		.fpu fpv4-sp-d16
 9749              	UART_DMATransmitCplt:
 9750              	.LFB343:
3804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 9751              		.loc 1 3812 1
 9752              		.cfi_startproc
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 262


 9753              		@ args = 0, pretend = 0, frame = 64
 9754              		@ frame_needed = 1, uses_anonymous_args = 0
 9755 0000 80B5     		push	{r7, lr}
 9756              	.LCFI282:
 9757              		.cfi_def_cfa_offset 8
 9758              		.cfi_offset 7, -8
 9759              		.cfi_offset 14, -4
 9760 0002 90B0     		sub	sp, sp, #64
 9761              	.LCFI283:
 9762              		.cfi_def_cfa_offset 72
 9763 0004 00AF     		add	r7, sp, #0
 9764              	.LCFI284:
 9765              		.cfi_def_cfa_register 7
 9766 0006 7860     		str	r0, [r7, #4]
3813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9767              		.loc 1 3813 23
 9768 0008 7B68     		ldr	r3, [r7, #4]
 9769 000a 9B6A     		ldr	r3, [r3, #40]
 9770 000c FB63     		str	r3, [r7, #60]
3814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
 9771              		.loc 1 3816 7
 9772 000e 7B68     		ldr	r3, [r7, #4]
 9773 0010 1B68     		ldr	r3, [r3]
 9774 0012 1B68     		ldr	r3, [r3]
 9775 0014 03F02003 		and	r3, r3, #32
 9776              		.loc 1 3816 6
 9777 0018 002B     		cmp	r3, #0
 9778 001a 37D1     		bne	.L559
3817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 9779              		.loc 1 3818 24
 9780 001c FB6B     		ldr	r3, [r7, #60]
 9781 001e 0022     		movs	r2, #0
 9782 0020 A3F85220 		strh	r2, [r3, #82]	@ movhi
 9783              	.L562:
 9784              	.LBB733:
3819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 9785              		.loc 1 3822 5 discriminator 1
 9786 0024 FB6B     		ldr	r3, [r7, #60]
 9787 0026 1B68     		ldr	r3, [r3]
 9788 0028 0833     		adds	r3, r3, #8
 9789 002a 7B62     		str	r3, [r7, #36]
 9790              	.LBB734:
 9791              	.LBB735:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9792              		.loc 2 1155 4 discriminator 1
 9793 002c 7B6A     		ldr	r3, [r7, #36]
 9794              		.syntax unified
 9795              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9796 002e 53E8003F 		ldrex r3, [r3]
 9797              	@ 0 "" 2
 9798              		.thumb
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 263


 9799              		.syntax unified
 9800 0032 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9801              		.loc 2 1156 10 discriminator 1
 9802 0034 3B6A     		ldr	r3, [r7, #32]
 9803              	.LBE735:
 9804              	.LBE734:
 9805              		.loc 1 3822 5 discriminator 1
 9806 0036 23F08003 		bic	r3, r3, #128
 9807 003a BB63     		str	r3, [r7, #56]
 9808 003c FB6B     		ldr	r3, [r7, #60]
 9809 003e 1B68     		ldr	r3, [r3]
 9810 0040 0833     		adds	r3, r3, #8
 9811 0042 BA6B     		ldr	r2, [r7, #56]
 9812 0044 3A63     		str	r2, [r7, #48]
 9813 0046 FB62     		str	r3, [r7, #44]
 9814              	.LBB736:
 9815              	.LBB737:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9816              		.loc 2 1206 4 discriminator 1
 9817 0048 F96A     		ldr	r1, [r7, #44]
 9818 004a 3A6B     		ldr	r2, [r7, #48]
 9819              		.syntax unified
 9820              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9821 004c 41E80023 		strex r3, r2, [r1]
 9822              	@ 0 "" 2
 9823              		.thumb
 9824              		.syntax unified
 9825 0050 BB62     		str	r3, [r7, #40]
 9826              		.loc 2 1207 10 discriminator 1
 9827 0052 BB6A     		ldr	r3, [r7, #40]
 9828              	.LBE737:
 9829              	.LBE736:
 9830              		.loc 1 3822 5 discriminator 1
 9831 0054 002B     		cmp	r3, #0
 9832 0056 E5D1     		bne	.L562
 9833              	.L565:
 9834              	.LBE733:
 9835              	.LBB738:
3823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 9836              		.loc 1 3825 5 discriminator 1
 9837 0058 FB6B     		ldr	r3, [r7, #60]
 9838 005a 1B68     		ldr	r3, [r3]
 9839 005c 3B61     		str	r3, [r7, #16]
 9840              	.LBB739:
 9841              	.LBB740:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9842              		.loc 2 1155 4 discriminator 1
 9843 005e 3B69     		ldr	r3, [r7, #16]
 9844              		.syntax unified
 9845              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9846 0060 53E8003F 		ldrex r3, [r3]
 9847              	@ 0 "" 2
 9848              		.thumb
 9849              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 264


 9850 0064 FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9851              		.loc 2 1156 10 discriminator 1
 9852 0066 FB68     		ldr	r3, [r7, #12]
 9853              	.LBE740:
 9854              	.LBE739:
 9855              		.loc 1 3825 5 discriminator 1
 9856 0068 43F04003 		orr	r3, r3, #64
 9857 006c 7B63     		str	r3, [r7, #52]
 9858 006e FB6B     		ldr	r3, [r7, #60]
 9859 0070 1B68     		ldr	r3, [r3]
 9860 0072 1A46     		mov	r2, r3
 9861 0074 7B6B     		ldr	r3, [r7, #52]
 9862 0076 FB61     		str	r3, [r7, #28]
 9863 0078 BA61     		str	r2, [r7, #24]
 9864              	.LBB741:
 9865              	.LBB742:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9866              		.loc 2 1206 4 discriminator 1
 9867 007a B969     		ldr	r1, [r7, #24]
 9868 007c FA69     		ldr	r2, [r7, #28]
 9869              		.syntax unified
 9870              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9871 007e 41E80023 		strex r3, r2, [r1]
 9872              	@ 0 "" 2
 9873              		.thumb
 9874              		.syntax unified
 9875 0082 7B61     		str	r3, [r7, #20]
 9876              		.loc 2 1207 10 discriminator 1
 9877 0084 7B69     		ldr	r3, [r7, #20]
 9878              	.LBE742:
 9879              	.LBE741:
 9880              		.loc 1 3825 5 discriminator 1
 9881 0086 002B     		cmp	r3, #0
 9882 0088 E6D1     		bne	.L565
 9883              	.LBE738:
3826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
3828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 9884              		.loc 1 3838 1
 9885 008a 02E0     		b	.L567
 9886              	.L559:
3835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 9887              		.loc 1 3835 5
 9888 008c F86B     		ldr	r0, [r7, #60]
 9889 008e FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 9890              	.L567:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 265


 9891              		.loc 1 3838 1
 9892 0092 00BF     		nop
 9893 0094 4037     		adds	r7, r7, #64
 9894              	.LCFI285:
 9895              		.cfi_def_cfa_offset 8
 9896 0096 BD46     		mov	sp, r7
 9897              	.LCFI286:
 9898              		.cfi_def_cfa_register 13
 9899              		@ sp needed
 9900 0098 80BD     		pop	{r7, pc}
 9901              		.cfi_endproc
 9902              	.LFE343:
 9904              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 9905              		.align	1
 9906              		.syntax unified
 9907              		.thumb
 9908              		.thumb_func
 9909              		.fpu fpv4-sp-d16
 9911              	UART_DMATxHalfCplt:
 9912              	.LFB344:
3839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 9913              		.loc 1 3846 1
 9914              		.cfi_startproc
 9915              		@ args = 0, pretend = 0, frame = 16
 9916              		@ frame_needed = 1, uses_anonymous_args = 0
 9917 0000 80B5     		push	{r7, lr}
 9918              	.LCFI287:
 9919              		.cfi_def_cfa_offset 8
 9920              		.cfi_offset 7, -8
 9921              		.cfi_offset 14, -4
 9922 0002 84B0     		sub	sp, sp, #16
 9923              	.LCFI288:
 9924              		.cfi_def_cfa_offset 24
 9925 0004 00AF     		add	r7, sp, #0
 9926              	.LCFI289:
 9927              		.cfi_def_cfa_register 7
 9928 0006 7860     		str	r0, [r7, #4]
3847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9929              		.loc 1 3847 23
 9930 0008 7B68     		ldr	r3, [r7, #4]
 9931 000a 9B6A     		ldr	r3, [r3, #40]
 9932 000c FB60     		str	r3, [r7, #12]
3848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 9933              		.loc 1 3854 3
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 266


 9934 000e F868     		ldr	r0, [r7, #12]
 9935 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 9936              		.loc 1 3856 1
 9937 0014 00BF     		nop
 9938 0016 1037     		adds	r7, r7, #16
 9939              	.LCFI290:
 9940              		.cfi_def_cfa_offset 8
 9941 0018 BD46     		mov	sp, r7
 9942              	.LCFI291:
 9943              		.cfi_def_cfa_register 13
 9944              		@ sp needed
 9945 001a 80BD     		pop	{r7, pc}
 9946              		.cfi_endproc
 9947              	.LFE344:
 9949              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 9950              		.align	1
 9951              		.syntax unified
 9952              		.thumb
 9953              		.thumb_func
 9954              		.fpu fpv4-sp-d16
 9956              	UART_DMAReceiveCplt:
 9957              	.LFB345:
3857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 9958              		.loc 1 3864 1
 9959              		.cfi_startproc
 9960              		@ args = 0, pretend = 0, frame = 112
 9961              		@ frame_needed = 1, uses_anonymous_args = 0
 9962 0000 80B5     		push	{r7, lr}
 9963              	.LCFI292:
 9964              		.cfi_def_cfa_offset 8
 9965              		.cfi_offset 7, -8
 9966              		.cfi_offset 14, -4
 9967 0002 9CB0     		sub	sp, sp, #112
 9968              	.LCFI293:
 9969              		.cfi_def_cfa_offset 120
 9970 0004 00AF     		add	r7, sp, #0
 9971              	.LCFI294:
 9972              		.cfi_def_cfa_register 7
 9973 0006 7860     		str	r0, [r7, #4]
3865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 9974              		.loc 1 3865 23
 9975 0008 7B68     		ldr	r3, [r7, #4]
 9976 000a 9B6A     		ldr	r3, [r3, #40]
 9977 000c FB66     		str	r3, [r7, #108]
3866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
 9978              		.loc 1 3868 7
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 267


 9979 000e 7B68     		ldr	r3, [r7, #4]
 9980 0010 1B68     		ldr	r3, [r3]
 9981 0012 1B68     		ldr	r3, [r3]
 9982 0014 03F02003 		and	r3, r3, #32
 9983              		.loc 1 3868 6
 9984 0018 002B     		cmp	r3, #0
 9985 001a 70D1     		bne	.L570
3869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 9986              		.loc 1 3870 24
 9987 001c FB6E     		ldr	r3, [r7, #108]
 9988 001e 0022     		movs	r2, #0
 9989 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 9990              	.L573:
 9991              	.LBB743:
3871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 9992              		.loc 1 3873 5 discriminator 1
 9993 0024 FB6E     		ldr	r3, [r7, #108]
 9994 0026 1B68     		ldr	r3, [r3]
 9995 0028 FB64     		str	r3, [r7, #76]
 9996              	.LBB744:
 9997              	.LBB745:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9998              		.loc 2 1155 4 discriminator 1
 9999 002a FB6C     		ldr	r3, [r7, #76]
 10000              		.syntax unified
 10001              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10002 002c 53E8003F 		ldrex r3, [r3]
 10003              	@ 0 "" 2
 10004              		.thumb
 10005              		.syntax unified
 10006 0030 BB64     		str	r3, [r7, #72]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10007              		.loc 2 1156 10 discriminator 1
 10008 0032 BB6C     		ldr	r3, [r7, #72]
 10009              	.LBE745:
 10010              	.LBE744:
 10011              		.loc 1 3873 5 discriminator 1
 10012 0034 23F48073 		bic	r3, r3, #256
 10013 0038 BB66     		str	r3, [r7, #104]
 10014 003a FB6E     		ldr	r3, [r7, #108]
 10015 003c 1B68     		ldr	r3, [r3]
 10016 003e 1A46     		mov	r2, r3
 10017 0040 BB6E     		ldr	r3, [r7, #104]
 10018 0042 BB65     		str	r3, [r7, #88]
 10019 0044 7A65     		str	r2, [r7, #84]
 10020              	.LBB746:
 10021              	.LBB747:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10022              		.loc 2 1206 4 discriminator 1
 10023 0046 796D     		ldr	r1, [r7, #84]
 10024 0048 BA6D     		ldr	r2, [r7, #88]
 10025              		.syntax unified
 10026              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10027 004a 41E80023 		strex r3, r2, [r1]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 268


 10028              	@ 0 "" 2
 10029              		.thumb
 10030              		.syntax unified
 10031 004e 3B65     		str	r3, [r7, #80]
 10032              		.loc 2 1207 10 discriminator 1
 10033 0050 3B6D     		ldr	r3, [r7, #80]
 10034              	.LBE747:
 10035              	.LBE746:
 10036              		.loc 1 3873 5 discriminator 1
 10037 0052 002B     		cmp	r3, #0
 10038 0054 E6D1     		bne	.L573
 10039              	.L576:
 10040              	.LBE743:
 10041              	.LBB748:
3874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 10042              		.loc 1 3874 5 discriminator 1
 10043 0056 FB6E     		ldr	r3, [r7, #108]
 10044 0058 1B68     		ldr	r3, [r3]
 10045 005a 0833     		adds	r3, r3, #8
 10046 005c BB63     		str	r3, [r7, #56]
 10047              	.LBB749:
 10048              	.LBB750:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10049              		.loc 2 1155 4 discriminator 1
 10050 005e BB6B     		ldr	r3, [r7, #56]
 10051              		.syntax unified
 10052              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10053 0060 53E8003F 		ldrex r3, [r3]
 10054              	@ 0 "" 2
 10055              		.thumb
 10056              		.syntax unified
 10057 0064 7B63     		str	r3, [r7, #52]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10058              		.loc 2 1156 10 discriminator 1
 10059 0066 7B6B     		ldr	r3, [r7, #52]
 10060              	.LBE750:
 10061              	.LBE749:
 10062              		.loc 1 3874 5 discriminator 1
 10063 0068 23F00103 		bic	r3, r3, #1
 10064 006c 7B66     		str	r3, [r7, #100]
 10065 006e FB6E     		ldr	r3, [r7, #108]
 10066 0070 1B68     		ldr	r3, [r3]
 10067 0072 0833     		adds	r3, r3, #8
 10068 0074 7A6E     		ldr	r2, [r7, #100]
 10069 0076 7A64     		str	r2, [r7, #68]
 10070 0078 3B64     		str	r3, [r7, #64]
 10071              	.LBB751:
 10072              	.LBB752:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10073              		.loc 2 1206 4 discriminator 1
 10074 007a 396C     		ldr	r1, [r7, #64]
 10075 007c 7A6C     		ldr	r2, [r7, #68]
 10076              		.syntax unified
 10077              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10078 007e 41E80023 		strex r3, r2, [r1]
 10079              	@ 0 "" 2
 10080              		.thumb
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 269


 10081              		.syntax unified
 10082 0082 FB63     		str	r3, [r7, #60]
 10083              		.loc 2 1207 10 discriminator 1
 10084 0084 FB6B     		ldr	r3, [r7, #60]
 10085              	.LBE752:
 10086              	.LBE751:
 10087              		.loc 1 3874 5 discriminator 1
 10088 0086 002B     		cmp	r3, #0
 10089 0088 E5D1     		bne	.L576
 10090              	.L579:
 10091              	.LBE748:
 10092              	.LBB753:
3875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 10093              		.loc 1 3878 5 discriminator 1
 10094 008a FB6E     		ldr	r3, [r7, #108]
 10095 008c 1B68     		ldr	r3, [r3]
 10096 008e 0833     		adds	r3, r3, #8
 10097 0090 7B62     		str	r3, [r7, #36]
 10098              	.LBB754:
 10099              	.LBB755:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10100              		.loc 2 1155 4 discriminator 1
 10101 0092 7B6A     		ldr	r3, [r7, #36]
 10102              		.syntax unified
 10103              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10104 0094 53E8003F 		ldrex r3, [r3]
 10105              	@ 0 "" 2
 10106              		.thumb
 10107              		.syntax unified
 10108 0098 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10109              		.loc 2 1156 10 discriminator 1
 10110 009a 3B6A     		ldr	r3, [r7, #32]
 10111              	.LBE755:
 10112              	.LBE754:
 10113              		.loc 1 3878 5 discriminator 1
 10114 009c 23F04003 		bic	r3, r3, #64
 10115 00a0 3B66     		str	r3, [r7, #96]
 10116 00a2 FB6E     		ldr	r3, [r7, #108]
 10117 00a4 1B68     		ldr	r3, [r3]
 10118 00a6 0833     		adds	r3, r3, #8
 10119 00a8 3A6E     		ldr	r2, [r7, #96]
 10120 00aa 3A63     		str	r2, [r7, #48]
 10121 00ac FB62     		str	r3, [r7, #44]
 10122              	.LBB756:
 10123              	.LBB757:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10124              		.loc 2 1206 4 discriminator 1
 10125 00ae F96A     		ldr	r1, [r7, #44]
 10126 00b0 3A6B     		ldr	r2, [r7, #48]
 10127              		.syntax unified
 10128              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10129 00b2 41E80023 		strex r3, r2, [r1]
 10130              	@ 0 "" 2
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 270


 10131              		.thumb
 10132              		.syntax unified
 10133 00b6 BB62     		str	r3, [r7, #40]
 10134              		.loc 2 1207 10 discriminator 1
 10135 00b8 BB6A     		ldr	r3, [r7, #40]
 10136              	.LBE757:
 10137              	.LBE756:
 10138              		.loc 1 3878 5 discriminator 1
 10139 00ba 002B     		cmp	r3, #0
 10140 00bc E5D1     		bne	.L579
 10141              	.LBE753:
3879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 10142              		.loc 1 3881 20
 10143 00be FB6E     		ldr	r3, [r7, #108]
 10144 00c0 2022     		movs	r2, #32
 10145 00c2 DA67     		str	r2, [r3, #124]
3882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 10146              		.loc 1 3884 14
 10147 00c4 FB6E     		ldr	r3, [r7, #108]
 10148 00c6 1B6E     		ldr	r3, [r3, #96]
 10149              		.loc 1 3884 8
 10150 00c8 012B     		cmp	r3, #1
 10151 00ca 18D1     		bne	.L570
 10152              	.L582:
 10153              	.LBB758:
3885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 10154              		.loc 1 3886 7 discriminator 1
 10155 00cc FB6E     		ldr	r3, [r7, #108]
 10156 00ce 1B68     		ldr	r3, [r3]
 10157 00d0 3B61     		str	r3, [r7, #16]
 10158              	.LBB759:
 10159              	.LBB760:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10160              		.loc 2 1155 4 discriminator 1
 10161 00d2 3B69     		ldr	r3, [r7, #16]
 10162              		.syntax unified
 10163              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10164 00d4 53E8003F 		ldrex r3, [r3]
 10165              	@ 0 "" 2
 10166              		.thumb
 10167              		.syntax unified
 10168 00d8 FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10169              		.loc 2 1156 10 discriminator 1
 10170 00da FB68     		ldr	r3, [r7, #12]
 10171              	.LBE760:
 10172              	.LBE759:
 10173              		.loc 1 3886 7 discriminator 1
 10174 00dc 23F01003 		bic	r3, r3, #16
 10175 00e0 FB65     		str	r3, [r7, #92]
 10176 00e2 FB6E     		ldr	r3, [r7, #108]
 10177 00e4 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 271


 10178 00e6 1A46     		mov	r2, r3
 10179 00e8 FB6D     		ldr	r3, [r7, #92]
 10180 00ea FB61     		str	r3, [r7, #28]
 10181 00ec BA61     		str	r2, [r7, #24]
 10182              	.LBB761:
 10183              	.LBB762:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10184              		.loc 2 1206 4 discriminator 1
 10185 00ee B969     		ldr	r1, [r7, #24]
 10186 00f0 FA69     		ldr	r2, [r7, #28]
 10187              		.syntax unified
 10188              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10189 00f2 41E80023 		strex r3, r2, [r1]
 10190              	@ 0 "" 2
 10191              		.thumb
 10192              		.syntax unified
 10193 00f6 7B61     		str	r3, [r7, #20]
 10194              		.loc 2 1207 10 discriminator 1
 10195 00f8 7B69     		ldr	r3, [r7, #20]
 10196              	.LBE762:
 10197              	.LBE761:
 10198              		.loc 1 3886 7 discriminator 1
 10199 00fa 002B     		cmp	r3, #0
 10200 00fc E6D1     		bne	.L582
 10201              	.L570:
 10202              	.LBE758:
3887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check current reception Mode :
3891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 10203              		.loc 1 3892 12
 10204 00fe FB6E     		ldr	r3, [r7, #108]
 10205 0100 1B6E     		ldr	r3, [r3, #96]
 10206              		.loc 1 3892 6
 10207 0102 012B     		cmp	r3, #1
 10208 0104 07D1     		bne	.L583
3893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 10209              		.loc 1 3899 5
 10210 0106 FB6E     		ldr	r3, [r7, #108]
 10211 0108 B3F85830 		ldrh	r3, [r3, #88]
 10212 010c 1946     		mov	r1, r3
 10213 010e F86E     		ldr	r0, [r7, #108]
 10214 0110 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 272


3906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 10215              		.loc 1 3913 1
 10216 0114 02E0     		b	.L585
 10217              	.L583:
3910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 10218              		.loc 1 3910 5
 10219 0116 F86E     		ldr	r0, [r7, #108]
 10220 0118 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 10221              	.L585:
 10222              		.loc 1 3913 1
 10223 011c 00BF     		nop
 10224 011e 7037     		adds	r7, r7, #112
 10225              	.LCFI295:
 10226              		.cfi_def_cfa_offset 8
 10227 0120 BD46     		mov	sp, r7
 10228              	.LCFI296:
 10229              		.cfi_def_cfa_register 13
 10230              		@ sp needed
 10231 0122 80BD     		pop	{r7, pc}
 10232              		.cfi_endproc
 10233              	.LFE345:
 10235              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 10236              		.align	1
 10237              		.syntax unified
 10238              		.thumb
 10239              		.thumb_func
 10240              		.fpu fpv4-sp-d16
 10242              	UART_DMARxHalfCplt:
 10243              	.LFB346:
3914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 10244              		.loc 1 3921 1
 10245              		.cfi_startproc
 10246              		@ args = 0, pretend = 0, frame = 16
 10247              		@ frame_needed = 1, uses_anonymous_args = 0
 10248 0000 80B5     		push	{r7, lr}
 10249              	.LCFI297:
 10250              		.cfi_def_cfa_offset 8
 10251              		.cfi_offset 7, -8
 10252              		.cfi_offset 14, -4
 10253 0002 84B0     		sub	sp, sp, #16
 10254              	.LCFI298:
 10255              		.cfi_def_cfa_offset 24
 10256 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 273


 10257              	.LCFI299:
 10258              		.cfi_def_cfa_register 7
 10259 0006 7860     		str	r0, [r7, #4]
3922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10260              		.loc 1 3922 23
 10261 0008 7B68     		ldr	r3, [r7, #4]
 10262 000a 9B6A     		ldr	r3, [r3, #40]
 10263 000c FB60     		str	r3, [r7, #12]
3923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check current reception Mode :
3925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 10264              		.loc 1 3926 12
 10265 000e FB68     		ldr	r3, [r7, #12]
 10266 0010 1B6E     		ldr	r3, [r3, #96]
 10267              		.loc 1 3926 6
 10268 0012 012B     		cmp	r3, #1
 10269 0014 09D1     		bne	.L587
3927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 10270              		.loc 1 3933 44
 10271 0016 FB68     		ldr	r3, [r7, #12]
 10272 0018 B3F85830 		ldrh	r3, [r3, #88]
 10273              		.loc 1 3933 5
 10274 001c 5B08     		lsrs	r3, r3, #1
 10275 001e 9BB2     		uxth	r3, r3
 10276 0020 1946     		mov	r1, r3
 10277 0022 F868     		ldr	r0, [r7, #12]
 10278 0024 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 10279              		.loc 1 3947 1
 10280 0028 02E0     		b	.L589
 10281              	.L587:
3944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 10282              		.loc 1 3944 5
 10283 002a F868     		ldr	r0, [r7, #12]
 10284 002c FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 10285              	.L589:
 10286              		.loc 1 3947 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 274


 10287 0030 00BF     		nop
 10288 0032 1037     		adds	r7, r7, #16
 10289              	.LCFI300:
 10290              		.cfi_def_cfa_offset 8
 10291 0034 BD46     		mov	sp, r7
 10292              	.LCFI301:
 10293              		.cfi_def_cfa_register 13
 10294              		@ sp needed
 10295 0036 80BD     		pop	{r7, pc}
 10296              		.cfi_endproc
 10297              	.LFE346:
 10299              		.section	.text.UART_DMAError,"ax",%progbits
 10300              		.align	1
 10301              		.syntax unified
 10302              		.thumb
 10303              		.thumb_func
 10304              		.fpu fpv4-sp-d16
 10306              	UART_DMAError:
 10307              	.LFB347:
3948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 10308              		.loc 1 3955 1
 10309              		.cfi_startproc
 10310              		@ args = 0, pretend = 0, frame = 24
 10311              		@ frame_needed = 1, uses_anonymous_args = 0
 10312 0000 80B5     		push	{r7, lr}
 10313              	.LCFI302:
 10314              		.cfi_def_cfa_offset 8
 10315              		.cfi_offset 7, -8
 10316              		.cfi_offset 14, -4
 10317 0002 86B0     		sub	sp, sp, #24
 10318              	.LCFI303:
 10319              		.cfi_def_cfa_offset 32
 10320 0004 00AF     		add	r7, sp, #0
 10321              	.LCFI304:
 10322              		.cfi_def_cfa_register 7
 10323 0006 7860     		str	r0, [r7, #4]
3956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10324              		.loc 1 3956 23
 10325 0008 7B68     		ldr	r3, [r7, #4]
 10326 000a 9B6A     		ldr	r3, [r3, #40]
 10327 000c 7B61     		str	r3, [r7, #20]
3957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 10328              		.loc 1 3958 31
 10329 000e 7B69     		ldr	r3, [r7, #20]
 10330 0010 9B6F     		ldr	r3, [r3, #120]
 10331 0012 3B61     		str	r3, [r7, #16]
3959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 10332              		.loc 1 3959 31
 10333 0014 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 275


 10334 0016 DB6F     		ldr	r3, [r3, #124]
 10335 0018 FB60     		str	r3, [r7, #12]
3960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 10336              		.loc 1 3962 8
 10337 001a 7B69     		ldr	r3, [r7, #20]
 10338 001c 1B68     		ldr	r3, [r3]
 10339 001e 9B68     		ldr	r3, [r3, #8]
 10340 0020 03F08003 		and	r3, r3, #128
 10341              		.loc 1 3962 6
 10342 0024 802B     		cmp	r3, #128
 10343 0026 09D1     		bne	.L591
 10344              		.loc 1 3962 62 discriminator 1
 10345 0028 3B69     		ldr	r3, [r7, #16]
 10346 002a 212B     		cmp	r3, #33
 10347 002c 06D1     		bne	.L591
3963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 10348              		.loc 1 3965 24
 10349 002e 7B69     		ldr	r3, [r7, #20]
 10350 0030 0022     		movs	r2, #0
 10351 0032 A3F85220 		strh	r2, [r3, #82]	@ movhi
3966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 10352              		.loc 1 3966 5
 10353 0036 7869     		ldr	r0, [r7, #20]
 10354 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 10355              	.L591:
3967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 10356              		.loc 1 3970 8
 10357 003c 7B69     		ldr	r3, [r7, #20]
 10358 003e 1B68     		ldr	r3, [r3]
 10359 0040 9B68     		ldr	r3, [r3, #8]
 10360 0042 03F04003 		and	r3, r3, #64
 10361              		.loc 1 3970 6
 10362 0046 402B     		cmp	r3, #64
 10363 0048 09D1     		bne	.L592
 10364              		.loc 1 3970 62 discriminator 1
 10365 004a FB68     		ldr	r3, [r7, #12]
 10366 004c 222B     		cmp	r3, #34
 10367 004e 06D1     		bne	.L592
3971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 10368              		.loc 1 3973 24
 10369 0050 7B69     		ldr	r3, [r7, #20]
 10370 0052 0022     		movs	r2, #0
 10371 0054 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 10372              		.loc 1 3974 5
 10373 0058 7869     		ldr	r0, [r7, #20]
 10374 005a FFF7FEFF 		bl	UART_EndRxTransfer
 10375              	.L592:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 276


3975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 10376              		.loc 1 3977 20
 10377 005e 7B69     		ldr	r3, [r7, #20]
 10378 0060 D3F88030 		ldr	r3, [r3, #128]
 10379 0064 43F01002 		orr	r2, r3, #16
 10380 0068 7B69     		ldr	r3, [r7, #20]
 10381 006a C3F88020 		str	r2, [r3, #128]
3978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 10382              		.loc 1 3984 3
 10383 006e 7869     		ldr	r0, [r7, #20]
 10384 0070 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 10385              		.loc 1 3986 1
 10386 0074 00BF     		nop
 10387 0076 1837     		adds	r7, r7, #24
 10388              	.LCFI305:
 10389              		.cfi_def_cfa_offset 8
 10390 0078 BD46     		mov	sp, r7
 10391              	.LCFI306:
 10392              		.cfi_def_cfa_register 13
 10393              		@ sp needed
 10394 007a 80BD     		pop	{r7, pc}
 10395              		.cfi_endproc
 10396              	.LFE347:
 10398              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 10399              		.align	1
 10400              		.syntax unified
 10401              		.thumb
 10402              		.thumb_func
 10403              		.fpu fpv4-sp-d16
 10405              	UART_DMAAbortOnError:
 10406              	.LFB348:
3987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 10407              		.loc 1 3995 1
 10408              		.cfi_startproc
 10409              		@ args = 0, pretend = 0, frame = 16
 10410              		@ frame_needed = 1, uses_anonymous_args = 0
 10411 0000 80B5     		push	{r7, lr}
 10412              	.LCFI307:
 10413              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 277


 10414              		.cfi_offset 7, -8
 10415              		.cfi_offset 14, -4
 10416 0002 84B0     		sub	sp, sp, #16
 10417              	.LCFI308:
 10418              		.cfi_def_cfa_offset 24
 10419 0004 00AF     		add	r7, sp, #0
 10420              	.LCFI309:
 10421              		.cfi_def_cfa_register 7
 10422 0006 7860     		str	r0, [r7, #4]
3996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10423              		.loc 1 3996 23
 10424 0008 7B68     		ldr	r3, [r7, #4]
 10425 000a 9B6A     		ldr	r3, [r3, #40]
 10426 000c FB60     		str	r3, [r7, #12]
3997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10427              		.loc 1 3997 22
 10428 000e FB68     		ldr	r3, [r7, #12]
 10429 0010 0022     		movs	r2, #0
 10430 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10431              		.loc 1 3998 22
 10432 0016 FB68     		ldr	r3, [r7, #12]
 10433 0018 0022     		movs	r2, #0
 10434 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
3999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
4002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
4003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
4005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 10435              		.loc 1 4005 3
 10436 001e F868     		ldr	r0, [r7, #12]
 10437 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
4006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 10438              		.loc 1 4007 1
 10439 0024 00BF     		nop
 10440 0026 1037     		adds	r7, r7, #16
 10441              	.LCFI310:
 10442              		.cfi_def_cfa_offset 8
 10443 0028 BD46     		mov	sp, r7
 10444              	.LCFI311:
 10445              		.cfi_def_cfa_register 13
 10446              		@ sp needed
 10447 002a 80BD     		pop	{r7, pc}
 10448              		.cfi_endproc
 10449              	.LFE348:
 10451              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 10452              		.align	1
 10453              		.syntax unified
 10454              		.thumb
 10455              		.thumb_func
 10456              		.fpu fpv4-sp-d16
 10458              	UART_DMATxAbortCallback:
 10459              	.LFB349:
4008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 278


4009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
4011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
4012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
4013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
4014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
4018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 10460              		.loc 1 4018 1
 10461              		.cfi_startproc
 10462              		@ args = 0, pretend = 0, frame = 16
 10463              		@ frame_needed = 1, uses_anonymous_args = 0
 10464 0000 80B5     		push	{r7, lr}
 10465              	.LCFI312:
 10466              		.cfi_def_cfa_offset 8
 10467              		.cfi_offset 7, -8
 10468              		.cfi_offset 14, -4
 10469 0002 84B0     		sub	sp, sp, #16
 10470              	.LCFI313:
 10471              		.cfi_def_cfa_offset 24
 10472 0004 00AF     		add	r7, sp, #0
 10473              	.LCFI314:
 10474              		.cfi_def_cfa_register 7
 10475 0006 7860     		str	r0, [r7, #4]
4019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10476              		.loc 1 4019 23
 10477 0008 7B68     		ldr	r3, [r7, #4]
 10478 000a 9B6A     		ldr	r3, [r3, #40]
 10479 000c FB60     		str	r3, [r7, #12]
4020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 10480              		.loc 1 4021 8
 10481 000e FB68     		ldr	r3, [r7, #12]
 10482 0010 DB6E     		ldr	r3, [r3, #108]
 10483              		.loc 1 4021 36
 10484 0012 0022     		movs	r2, #0
 10485 0014 9A63     		str	r2, [r3, #56]
4022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
4024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 10486              		.loc 1 4024 12
 10487 0016 FB68     		ldr	r3, [r7, #12]
 10488 0018 1B6F     		ldr	r3, [r3, #112]
 10489              		.loc 1 4024 6
 10490 001a 002B     		cmp	r3, #0
 10491 001c 04D0     		beq	.L595
4025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 10492              		.loc 1 4026 14
 10493 001e FB68     		ldr	r3, [r7, #12]
 10494 0020 1B6F     		ldr	r3, [r3, #112]
 10495              		.loc 1 4026 22
 10496 0022 9B6B     		ldr	r3, [r3, #56]
 10497              		.loc 1 4026 8
 10498 0024 002B     		cmp	r3, #0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 279


 10499 0026 1CD1     		bne	.L597
 10500              	.L595:
4027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
4029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
4033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10501              		.loc 1 4033 22
 10502 0028 FB68     		ldr	r3, [r7, #12]
 10503 002a 0022     		movs	r2, #0
 10504 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
4034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10505              		.loc 1 4034 22
 10506 0030 FB68     		ldr	r3, [r7, #12]
 10507 0032 0022     		movs	r2, #0
 10508 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
4035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
4037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 10509              		.loc 1 4037 20
 10510 0038 FB68     		ldr	r3, [r7, #12]
 10511 003a 0022     		movs	r2, #0
 10512 003c C3F88020 		str	r2, [r3, #128]
4038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 10513              		.loc 1 4040 3
 10514 0040 FB68     		ldr	r3, [r7, #12]
 10515 0042 1B68     		ldr	r3, [r3]
 10516 0044 0F22     		movs	r2, #15
 10517 0046 1A62     		str	r2, [r3, #32]
4041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
4044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
4045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
4047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
4051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 10518              		.loc 1 4051 18
 10519 0048 FB68     		ldr	r3, [r7, #12]
 10520 004a 2022     		movs	r2, #32
 10521 004c 9A67     		str	r2, [r3, #120]
4052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 10522              		.loc 1 4052 18
 10523 004e FB68     		ldr	r3, [r7, #12]
 10524 0050 2022     		movs	r2, #32
 10525 0052 DA67     		str	r2, [r3, #124]
4053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 10526              		.loc 1 4053 24
 10527 0054 FB68     		ldr	r3, [r7, #12]
 10528 0056 0022     		movs	r2, #0
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 280


 10529 0058 1A66     		str	r2, [r3, #96]
4054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
4058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
4059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
4061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 10530              		.loc 1 4061 3
 10531 005a F868     		ldr	r0, [r7, #12]
 10532 005c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 10533 0060 00E0     		b	.L594
 10534              	.L597:
4028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 10535              		.loc 1 4028 7
 10536 0062 00BF     		nop
 10537              	.L594:
4062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 10538              		.loc 1 4063 1
 10539 0064 1037     		adds	r7, r7, #16
 10540              	.LCFI315:
 10541              		.cfi_def_cfa_offset 8
 10542 0066 BD46     		mov	sp, r7
 10543              	.LCFI316:
 10544              		.cfi_def_cfa_register 13
 10545              		@ sp needed
 10546 0068 80BD     		pop	{r7, pc}
 10547              		.cfi_endproc
 10548              	.LFE349:
 10550              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 10551              		.align	1
 10552              		.syntax unified
 10553              		.thumb
 10554              		.thumb_func
 10555              		.fpu fpv4-sp-d16
 10557              	UART_DMARxAbortCallback:
 10558              	.LFB350:
4064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
4068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
4069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
4070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
4071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
4075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 10559              		.loc 1 4075 1
 10560              		.cfi_startproc
 10561              		@ args = 0, pretend = 0, frame = 16
 10562              		@ frame_needed = 1, uses_anonymous_args = 0
 10563 0000 80B5     		push	{r7, lr}
 10564              	.LCFI317:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 281


 10565              		.cfi_def_cfa_offset 8
 10566              		.cfi_offset 7, -8
 10567              		.cfi_offset 14, -4
 10568 0002 84B0     		sub	sp, sp, #16
 10569              	.LCFI318:
 10570              		.cfi_def_cfa_offset 24
 10571 0004 00AF     		add	r7, sp, #0
 10572              	.LCFI319:
 10573              		.cfi_def_cfa_register 7
 10574 0006 7860     		str	r0, [r7, #4]
4076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 10575              		.loc 1 4076 23
 10576 0008 7B68     		ldr	r3, [r7, #4]
 10577 000a 9B6A     		ldr	r3, [r3, #40]
 10578 000c FB60     		str	r3, [r7, #12]
4077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 10579              		.loc 1 4078 8
 10580 000e FB68     		ldr	r3, [r7, #12]
 10581 0010 1B6F     		ldr	r3, [r3, #112]
 10582              		.loc 1 4078 36
 10583 0012 0022     		movs	r2, #0
 10584 0014 9A63     		str	r2, [r3, #56]
4079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
4081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 10585              		.loc 1 4081 12
 10586 0016 FB68     		ldr	r3, [r7, #12]
 10587 0018 DB6E     		ldr	r3, [r3, #108]
 10588              		.loc 1 4081 6
 10589 001a 002B     		cmp	r3, #0
 10590 001c 04D0     		beq	.L599
4082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 10591              		.loc 1 4083 14
 10592 001e FB68     		ldr	r3, [r7, #12]
 10593 0020 DB6E     		ldr	r3, [r3, #108]
 10594              		.loc 1 4083 22
 10595 0022 9B6B     		ldr	r3, [r3, #56]
 10596              		.loc 1 4083 8
 10597 0024 002B     		cmp	r3, #0
 10598 0026 26D1     		bne	.L601
 10599              	.L599:
4084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
4086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
4090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10600              		.loc 1 4090 22
 10601 0028 FB68     		ldr	r3, [r7, #12]
 10602 002a 0022     		movs	r2, #0
 10603 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
4091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10604              		.loc 1 4091 22
 10605 0030 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 282


 10606 0032 0022     		movs	r2, #0
 10607 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
4092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
4094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 10608              		.loc 1 4094 20
 10609 0038 FB68     		ldr	r3, [r7, #12]
 10610 003a 0022     		movs	r2, #0
 10611 003c C3F88020 		str	r2, [r3, #128]
4095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 10612              		.loc 1 4097 3
 10613 0040 FB68     		ldr	r3, [r7, #12]
 10614 0042 1B68     		ldr	r3, [r3]
 10615 0044 0F22     		movs	r2, #15
 10616 0046 1A62     		str	r2, [r3, #32]
4098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
4100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 10617              		.loc 1 4100 3
 10618 0048 FB68     		ldr	r3, [r7, #12]
 10619 004a 1B68     		ldr	r3, [r3]
 10620 004c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 10621 004e 9AB2     		uxth	r2, r3
 10622 0050 FB68     		ldr	r3, [r7, #12]
 10623 0052 1B68     		ldr	r3, [r3]
 10624 0054 42F00802 		orr	r2, r2, #8
 10625 0058 92B2     		uxth	r2, r2
 10626 005a 1A83     		strh	r2, [r3, #24]	@ movhi
4101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
4103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 10627              		.loc 1 4103 18
 10628 005c FB68     		ldr	r3, [r7, #12]
 10629 005e 2022     		movs	r2, #32
 10630 0060 9A67     		str	r2, [r3, #120]
4104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 10631              		.loc 1 4104 18
 10632 0062 FB68     		ldr	r3, [r7, #12]
 10633 0064 2022     		movs	r2, #32
 10634 0066 DA67     		str	r2, [r3, #124]
4105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 10635              		.loc 1 4105 24
 10636 0068 FB68     		ldr	r3, [r7, #12]
 10637 006a 0022     		movs	r2, #0
 10638 006c 1A66     		str	r2, [r3, #96]
4106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
4110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
4111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
4113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 10639              		.loc 1 4113 3
 10640 006e F868     		ldr	r0, [r7, #12]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 283


 10641 0070 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 10642 0074 00E0     		b	.L598
 10643              	.L601:
4085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 10644              		.loc 1 4085 7
 10645 0076 00BF     		nop
 10646              	.L598:
4114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 10647              		.loc 1 4115 1
 10648 0078 1037     		adds	r7, r7, #16
 10649              	.LCFI320:
 10650              		.cfi_def_cfa_offset 8
 10651 007a BD46     		mov	sp, r7
 10652              	.LCFI321:
 10653              		.cfi_def_cfa_register 13
 10654              		@ sp needed
 10655 007c 80BD     		pop	{r7, pc}
 10656              		.cfi_endproc
 10657              	.LFE350:
 10659              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 10660              		.align	1
 10661              		.syntax unified
 10662              		.thumb
 10663              		.thumb_func
 10664              		.fpu fpv4-sp-d16
 10666              	UART_DMATxOnlyAbortCallback:
 10667              	.LFB351:
4116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
4120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
4121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
4122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
4123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
4127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 10668              		.loc 1 4127 1
 10669              		.cfi_startproc
 10670              		@ args = 0, pretend = 0, frame = 16
 10671              		@ frame_needed = 1, uses_anonymous_args = 0
 10672 0000 80B5     		push	{r7, lr}
 10673              	.LCFI322:
 10674              		.cfi_def_cfa_offset 8
 10675              		.cfi_offset 7, -8
 10676              		.cfi_offset 14, -4
 10677 0002 84B0     		sub	sp, sp, #16
 10678              	.LCFI323:
 10679              		.cfi_def_cfa_offset 24
 10680 0004 00AF     		add	r7, sp, #0
 10681              	.LCFI324:
 10682              		.cfi_def_cfa_register 7
 10683 0006 7860     		str	r0, [r7, #4]
4128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 284


 10684              		.loc 1 4128 23
 10685 0008 7B68     		ldr	r3, [r7, #4]
 10686 000a 9B6A     		ldr	r3, [r3, #40]
 10687 000c FB60     		str	r3, [r7, #12]
4129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 10688              		.loc 1 4130 22
 10689 000e FB68     		ldr	r3, [r7, #12]
 10690 0010 0022     		movs	r2, #0
 10691 0012 A3F85220 		strh	r2, [r3, #82]	@ movhi
4131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
4134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
4135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
4137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
4141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 10692              		.loc 1 4141 17
 10693 0016 FB68     		ldr	r3, [r7, #12]
 10694 0018 2022     		movs	r2, #32
 10695 001a 9A67     		str	r2, [r3, #120]
4142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
4146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
4147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
4149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 10696              		.loc 1 4149 3
 10697 001c F868     		ldr	r0, [r7, #12]
 10698 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
4150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 10699              		.loc 1 4151 1
 10700 0022 00BF     		nop
 10701 0024 1037     		adds	r7, r7, #16
 10702              	.LCFI325:
 10703              		.cfi_def_cfa_offset 8
 10704 0026 BD46     		mov	sp, r7
 10705              	.LCFI326:
 10706              		.cfi_def_cfa_register 13
 10707              		@ sp needed
 10708 0028 80BD     		pop	{r7, pc}
 10709              		.cfi_endproc
 10710              	.LFE351:
 10712              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 10713              		.align	1
 10714              		.syntax unified
 10715              		.thumb
 10716              		.thumb_func
 10717              		.fpu fpv4-sp-d16
 10719              	UART_DMARxOnlyAbortCallback:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 285


 10720              	.LFB352:
4152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
4155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
4156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
4157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
4158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
4162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 10721              		.loc 1 4162 1
 10722              		.cfi_startproc
 10723              		@ args = 0, pretend = 0, frame = 16
 10724              		@ frame_needed = 1, uses_anonymous_args = 0
 10725 0000 80B5     		push	{r7, lr}
 10726              	.LCFI327:
 10727              		.cfi_def_cfa_offset 8
 10728              		.cfi_offset 7, -8
 10729              		.cfi_offset 14, -4
 10730 0002 84B0     		sub	sp, sp, #16
 10731              	.LCFI328:
 10732              		.cfi_def_cfa_offset 24
 10733 0004 00AF     		add	r7, sp, #0
 10734              	.LCFI329:
 10735              		.cfi_def_cfa_register 7
 10736 0006 7860     		str	r0, [r7, #4]
4163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 10737              		.loc 1 4163 23
 10738 0008 7B68     		ldr	r3, [r7, #4]
 10739 000a 9B6A     		ldr	r3, [r3, #40]
 10740 000c FB60     		str	r3, [r7, #12]
4164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 10741              		.loc 1 4165 22
 10742 000e FB68     		ldr	r3, [r7, #12]
 10743 0010 0022     		movs	r2, #0
 10744 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
4166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 10745              		.loc 1 4168 3
 10746 0016 FB68     		ldr	r3, [r7, #12]
 10747 0018 1B68     		ldr	r3, [r3]
 10748 001a 0F22     		movs	r2, #15
 10749 001c 1A62     		str	r2, [r3, #32]
4169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
4171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 10750              		.loc 1 4171 3
 10751 001e FB68     		ldr	r3, [r7, #12]
 10752 0020 1B68     		ldr	r3, [r3]
 10753 0022 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 10754 0024 9AB2     		uxth	r2, r3
 10755 0026 FB68     		ldr	r3, [r7, #12]
 10756 0028 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 286


 10757 002a 42F00802 		orr	r2, r2, #8
 10758 002e 92B2     		uxth	r2, r2
 10759 0030 1A83     		strh	r2, [r3, #24]	@ movhi
4172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
4174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 10760              		.loc 1 4174 18
 10761 0032 FB68     		ldr	r3, [r7, #12]
 10762 0034 2022     		movs	r2, #32
 10763 0036 DA67     		str	r2, [r3, #124]
4175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 10764              		.loc 1 4175 24
 10765 0038 FB68     		ldr	r3, [r7, #12]
 10766 003a 0022     		movs	r2, #0
 10767 003c 1A66     		str	r2, [r3, #96]
4176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
4180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
4181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
4183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 10768              		.loc 1 4183 3
 10769 003e F868     		ldr	r0, [r7, #12]
 10770 0040 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
4184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 10771              		.loc 1 4185 1
 10772 0044 00BF     		nop
 10773 0046 1037     		adds	r7, r7, #16
 10774              	.LCFI330:
 10775              		.cfi_def_cfa_offset 8
 10776 0048 BD46     		mov	sp, r7
 10777              	.LCFI331:
 10778              		.cfi_def_cfa_register 13
 10779              		@ sp needed
 10780 004a 80BD     		pop	{r7, pc}
 10781              		.cfi_endproc
 10782              	.LFE352:
 10784              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 10785              		.align	1
 10786              		.syntax unified
 10787              		.thumb
 10788              		.thumb_func
 10789              		.fpu fpv4-sp-d16
 10791              	UART_TxISR_8BIT:
 10792              	.LFB353:
4186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
4189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 287


4195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 10793              		.loc 1 4195 1
 10794              		.cfi_startproc
 10795              		@ args = 0, pretend = 0, frame = 56
 10796              		@ frame_needed = 1, uses_anonymous_args = 0
 10797              		@ link register save eliminated.
 10798 0000 80B4     		push	{r7}
 10799              	.LCFI332:
 10800              		.cfi_def_cfa_offset 4
 10801              		.cfi_offset 7, -4
 10802 0002 8FB0     		sub	sp, sp, #60
 10803              	.LCFI333:
 10804              		.cfi_def_cfa_offset 64
 10805 0004 00AF     		add	r7, sp, #0
 10806              	.LCFI334:
 10807              		.cfi_def_cfa_register 7
 10808 0006 7860     		str	r0, [r7, #4]
4196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 10809              		.loc 1 4197 12
 10810 0008 7B68     		ldr	r3, [r7, #4]
 10811 000a 9B6F     		ldr	r3, [r3, #120]
 10812              		.loc 1 4197 6
 10813 000c 212B     		cmp	r3, #33
 10814 000e 4DD1     		bne	.L613
4198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 10815              		.loc 1 4199 14
 10816 0010 7B68     		ldr	r3, [r7, #4]
 10817 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 10818 0016 9BB2     		uxth	r3, r3
 10819              		.loc 1 4199 8
 10820 0018 002B     		cmp	r3, #0
 10821 001a 32D1     		bne	.L606
 10822              	.L609:
 10823              	.LBB763:
4200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
4204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 10824              		.loc 1 4205 7 discriminator 1
 10825 001c 7B68     		ldr	r3, [r7, #4]
 10826 001e 1B68     		ldr	r3, [r3]
 10827 0020 3B62     		str	r3, [r7, #32]
 10828              	.LBB764:
 10829              	.LBB765:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10830              		.loc 2 1155 4 discriminator 1
 10831 0022 3B6A     		ldr	r3, [r7, #32]
 10832              		.syntax unified
 10833              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10834 0024 53E8003F 		ldrex r3, [r3]
 10835              	@ 0 "" 2
 10836              		.thumb
 10837              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 288


 10838 0028 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10839              		.loc 2 1156 10 discriminator 1
 10840 002a FB69     		ldr	r3, [r7, #28]
 10841              	.LBE765:
 10842              	.LBE764:
 10843              		.loc 1 4205 7 discriminator 1
 10844 002c 23F08003 		bic	r3, r3, #128
 10845 0030 7B63     		str	r3, [r7, #52]
 10846 0032 7B68     		ldr	r3, [r7, #4]
 10847 0034 1B68     		ldr	r3, [r3]
 10848 0036 1A46     		mov	r2, r3
 10849 0038 7B6B     		ldr	r3, [r7, #52]
 10850 003a FB62     		str	r3, [r7, #44]
 10851 003c BA62     		str	r2, [r7, #40]
 10852              	.LBB766:
 10853              	.LBB767:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10854              		.loc 2 1206 4 discriminator 1
 10855 003e B96A     		ldr	r1, [r7, #40]
 10856 0040 FA6A     		ldr	r2, [r7, #44]
 10857              		.syntax unified
 10858              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10859 0042 41E80023 		strex r3, r2, [r1]
 10860              	@ 0 "" 2
 10861              		.thumb
 10862              		.syntax unified
 10863 0046 7B62     		str	r3, [r7, #36]
 10864              		.loc 2 1207 10 discriminator 1
 10865 0048 7B6A     		ldr	r3, [r7, #36]
 10866              	.LBE767:
 10867              	.LBE766:
 10868              		.loc 1 4205 7 discriminator 1
 10869 004a 002B     		cmp	r3, #0
 10870 004c E6D1     		bne	.L609
 10871              	.L612:
 10872              	.LBE763:
 10873              	.LBB768:
4206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 10874              		.loc 1 4209 7 discriminator 1
 10875 004e 7B68     		ldr	r3, [r7, #4]
 10876 0050 1B68     		ldr	r3, [r3]
 10877 0052 FB60     		str	r3, [r7, #12]
 10878              	.LBB769:
 10879              	.LBB770:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10880              		.loc 2 1155 4 discriminator 1
 10881 0054 FB68     		ldr	r3, [r7, #12]
 10882              		.syntax unified
 10883              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10884 0056 53E8003F 		ldrex r3, [r3]
 10885              	@ 0 "" 2
 10886              		.thumb
 10887              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 289


 10888 005a BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 10889              		.loc 2 1156 10 discriminator 1
 10890 005c BB68     		ldr	r3, [r7, #8]
 10891              	.LBE770:
 10892              	.LBE769:
 10893              		.loc 1 4209 7 discriminator 1
 10894 005e 43F04003 		orr	r3, r3, #64
 10895 0062 3B63     		str	r3, [r7, #48]
 10896 0064 7B68     		ldr	r3, [r7, #4]
 10897 0066 1B68     		ldr	r3, [r3]
 10898 0068 1A46     		mov	r2, r3
 10899 006a 3B6B     		ldr	r3, [r7, #48]
 10900 006c BB61     		str	r3, [r7, #24]
 10901 006e 7A61     		str	r2, [r7, #20]
 10902              	.LBB771:
 10903              	.LBB772:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 10904              		.loc 2 1206 4 discriminator 1
 10905 0070 7969     		ldr	r1, [r7, #20]
 10906 0072 BA69     		ldr	r2, [r7, #24]
 10907              		.syntax unified
 10908              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 10909 0074 41E80023 		strex r3, r2, [r1]
 10910              	@ 0 "" 2
 10911              		.thumb
 10912              		.syntax unified
 10913 0078 3B61     		str	r3, [r7, #16]
 10914              		.loc 2 1207 10 discriminator 1
 10915 007a 3B69     		ldr	r3, [r7, #16]
 10916              	.LBE772:
 10917              	.LBE771:
 10918              		.loc 1 4209 7 discriminator 1
 10919 007c 002B     		cmp	r3, #0
 10920 007e E6D1     		bne	.L612
 10921              	.LBE768:
4210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
4212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
4215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
4216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 10922              		.loc 1 4218 1
 10923 0080 14E0     		b	.L613
 10924              	.L606:
4213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 10925              		.loc 1 4213 46
 10926 0082 7B68     		ldr	r3, [r7, #4]
 10927 0084 DB6C     		ldr	r3, [r3, #76]
4213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 10928              		.loc 1 4213 40
 10929 0086 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
4213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 10930              		.loc 1 4213 12
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 290


 10931 0088 7B68     		ldr	r3, [r7, #4]
 10932 008a 1B68     		ldr	r3, [r3]
4213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 10933              		.loc 1 4213 30
 10934 008c 92B2     		uxth	r2, r2
4213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 10935              		.loc 1 4213 28
 10936 008e 1A85     		strh	r2, [r3, #40]	@ movhi
4214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 10937              		.loc 1 4214 12
 10938 0090 7B68     		ldr	r3, [r7, #4]
 10939 0092 DB6C     		ldr	r3, [r3, #76]
4214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 10940              		.loc 1 4214 24
 10941 0094 5A1C     		adds	r2, r3, #1
 10942 0096 7B68     		ldr	r3, [r7, #4]
 10943 0098 DA64     		str	r2, [r3, #76]
4215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 10944              		.loc 1 4215 12
 10945 009a 7B68     		ldr	r3, [r7, #4]
 10946 009c B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 10947 00a0 9BB2     		uxth	r3, r3
4215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 10948              		.loc 1 4215 25
 10949 00a2 013B     		subs	r3, r3, #1
 10950 00a4 9AB2     		uxth	r2, r3
 10951 00a6 7B68     		ldr	r3, [r7, #4]
 10952 00a8 A3F85220 		strh	r2, [r3, #82]	@ movhi
 10953              	.L613:
 10954              		.loc 1 4218 1
 10955 00ac 00BF     		nop
 10956 00ae 3C37     		adds	r7, r7, #60
 10957              	.LCFI335:
 10958              		.cfi_def_cfa_offset 4
 10959 00b0 BD46     		mov	sp, r7
 10960              	.LCFI336:
 10961              		.cfi_def_cfa_register 13
 10962              		@ sp needed
 10963 00b2 5DF8047B 		ldr	r7, [sp], #4
 10964              	.LCFI337:
 10965              		.cfi_restore 7
 10966              		.cfi_def_cfa_offset 0
 10967 00b6 7047     		bx	lr
 10968              		.cfi_endproc
 10969              	.LFE353:
 10971              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 10972              		.align	1
 10973              		.syntax unified
 10974              		.thumb
 10975              		.thumb_func
 10976              		.fpu fpv4-sp-d16
 10978              	UART_TxISR_16BIT:
 10979              	.LFB354:
4219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
4222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 291


4223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
4228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 10980              		.loc 1 4228 1
 10981              		.cfi_startproc
 10982              		@ args = 0, pretend = 0, frame = 64
 10983              		@ frame_needed = 1, uses_anonymous_args = 0
 10984              		@ link register save eliminated.
 10985 0000 80B4     		push	{r7}
 10986              	.LCFI338:
 10987              		.cfi_def_cfa_offset 4
 10988              		.cfi_offset 7, -4
 10989 0002 91B0     		sub	sp, sp, #68
 10990              	.LCFI339:
 10991              		.cfi_def_cfa_offset 72
 10992 0004 00AF     		add	r7, sp, #0
 10993              	.LCFI340:
 10994              		.cfi_def_cfa_register 7
 10995 0006 7860     		str	r0, [r7, #4]
4229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const uint16_t *tmp;
4230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 10996              		.loc 1 4232 12
 10997 0008 7B68     		ldr	r3, [r7, #4]
 10998 000a 9B6F     		ldr	r3, [r3, #120]
 10999              		.loc 1 4232 6
 11000 000c 212B     		cmp	r3, #33
 11001 000e 51D1     		bne	.L623
4233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 11002              		.loc 1 4234 14
 11003 0010 7B68     		ldr	r3, [r7, #4]
 11004 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 11005 0016 9BB2     		uxth	r3, r3
 11006              		.loc 1 4234 8
 11007 0018 002B     		cmp	r3, #0
 11008 001a 32D1     		bne	.L616
 11009              	.L619:
 11010              	.LBB773:
4235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
4239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 11011              		.loc 1 4240 7 discriminator 1
 11012 001c 7B68     		ldr	r3, [r7, #4]
 11013 001e 1B68     		ldr	r3, [r3]
 11014 0020 7B62     		str	r3, [r7, #36]
 11015              	.LBB774:
 11016              	.LBB775:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11017              		.loc 2 1155 4 discriminator 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 292


 11018 0022 7B6A     		ldr	r3, [r7, #36]
 11019              		.syntax unified
 11020              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11021 0024 53E8003F 		ldrex r3, [r3]
 11022              	@ 0 "" 2
 11023              		.thumb
 11024              		.syntax unified
 11025 0028 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11026              		.loc 2 1156 10 discriminator 1
 11027 002a 3B6A     		ldr	r3, [r7, #32]
 11028              	.LBE775:
 11029              	.LBE774:
 11030              		.loc 1 4240 7 discriminator 1
 11031 002c 23F08003 		bic	r3, r3, #128
 11032 0030 BB63     		str	r3, [r7, #56]
 11033 0032 7B68     		ldr	r3, [r7, #4]
 11034 0034 1B68     		ldr	r3, [r3]
 11035 0036 1A46     		mov	r2, r3
 11036 0038 BB6B     		ldr	r3, [r7, #56]
 11037 003a 3B63     		str	r3, [r7, #48]
 11038 003c FA62     		str	r2, [r7, #44]
 11039              	.LBB776:
 11040              	.LBB777:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11041              		.loc 2 1206 4 discriminator 1
 11042 003e F96A     		ldr	r1, [r7, #44]
 11043 0040 3A6B     		ldr	r2, [r7, #48]
 11044              		.syntax unified
 11045              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11046 0042 41E80023 		strex r3, r2, [r1]
 11047              	@ 0 "" 2
 11048              		.thumb
 11049              		.syntax unified
 11050 0046 BB62     		str	r3, [r7, #40]
 11051              		.loc 2 1207 10 discriminator 1
 11052 0048 BB6A     		ldr	r3, [r7, #40]
 11053              	.LBE777:
 11054              	.LBE776:
 11055              		.loc 1 4240 7 discriminator 1
 11056 004a 002B     		cmp	r3, #0
 11057 004c E6D1     		bne	.L619
 11058              	.L622:
 11059              	.LBE773:
 11060              	.LBB778:
4241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 11061              		.loc 1 4244 7 discriminator 1
 11062 004e 7B68     		ldr	r3, [r7, #4]
 11063 0050 1B68     		ldr	r3, [r3]
 11064 0052 3B61     		str	r3, [r7, #16]
 11065              	.LBB779:
 11066              	.LBB780:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11067              		.loc 2 1155 4 discriminator 1
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 293


 11068 0054 3B69     		ldr	r3, [r7, #16]
 11069              		.syntax unified
 11070              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11071 0056 53E8003F 		ldrex r3, [r3]
 11072              	@ 0 "" 2
 11073              		.thumb
 11074              		.syntax unified
 11075 005a FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11076              		.loc 2 1156 10 discriminator 1
 11077 005c FB68     		ldr	r3, [r7, #12]
 11078              	.LBE780:
 11079              	.LBE779:
 11080              		.loc 1 4244 7 discriminator 1
 11081 005e 43F04003 		orr	r3, r3, #64
 11082 0062 7B63     		str	r3, [r7, #52]
 11083 0064 7B68     		ldr	r3, [r7, #4]
 11084 0066 1B68     		ldr	r3, [r3]
 11085 0068 1A46     		mov	r2, r3
 11086 006a 7B6B     		ldr	r3, [r7, #52]
 11087 006c FB61     		str	r3, [r7, #28]
 11088 006e BA61     		str	r2, [r7, #24]
 11089              	.LBB781:
 11090              	.LBB782:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11091              		.loc 2 1206 4 discriminator 1
 11092 0070 B969     		ldr	r1, [r7, #24]
 11093 0072 FA69     		ldr	r2, [r7, #28]
 11094              		.syntax unified
 11095              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11096 0074 41E80023 		strex r3, r2, [r1]
 11097              	@ 0 "" 2
 11098              		.thumb
 11099              		.syntax unified
 11100 0078 7B61     		str	r3, [r7, #20]
 11101              		.loc 2 1207 10 discriminator 1
 11102 007a 7B69     		ldr	r3, [r7, #20]
 11103              	.LBE782:
 11104              	.LBE781:
 11105              		.loc 1 4244 7 discriminator 1
 11106 007c 002B     		cmp	r3, #0
 11107 007e E6D1     		bne	.L622
 11108              	.LBE778:
4245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
4247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
4249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
4250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
4251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
4252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 11109              		.loc 1 4254 1
 11110 0080 18E0     		b	.L623
 11111              	.L616:
4248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 294


 11112              		.loc 1 4248 11
 11113 0082 7B68     		ldr	r3, [r7, #4]
 11114 0084 DB6C     		ldr	r3, [r3, #76]
 11115 0086 FB63     		str	r3, [r7, #60]
4249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 11116              		.loc 1 4249 43
 11117 0088 FB6B     		ldr	r3, [r7, #60]
 11118 008a 1A88     		ldrh	r2, [r3]
4249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 11119              		.loc 1 4249 12
 11120 008c 7B68     		ldr	r3, [r7, #4]
 11121 008e 1B68     		ldr	r3, [r3]
4249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 11122              		.loc 1 4249 50
 11123 0090 C2F30802 		ubfx	r2, r2, #0, #9
 11124 0094 92B2     		uxth	r2, r2
4249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 11125              		.loc 1 4249 28
 11126 0096 1A85     		strh	r2, [r3, #40]	@ movhi
4250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 11127              		.loc 1 4250 25
 11128 0098 7B68     		ldr	r3, [r7, #4]
 11129 009a DB6C     		ldr	r3, [r3, #76]
 11130 009c 9A1C     		adds	r2, r3, #2
 11131 009e 7B68     		ldr	r3, [r7, #4]
 11132 00a0 DA64     		str	r2, [r3, #76]
4251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 11133              		.loc 1 4251 12
 11134 00a2 7B68     		ldr	r3, [r7, #4]
 11135 00a4 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 11136 00a8 9BB2     		uxth	r3, r3
4251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 11137              		.loc 1 4251 25
 11138 00aa 013B     		subs	r3, r3, #1
 11139 00ac 9AB2     		uxth	r2, r3
 11140 00ae 7B68     		ldr	r3, [r7, #4]
 11141 00b0 A3F85220 		strh	r2, [r3, #82]	@ movhi
 11142              	.L623:
 11143              		.loc 1 4254 1
 11144 00b4 00BF     		nop
 11145 00b6 4437     		adds	r7, r7, #68
 11146              	.LCFI341:
 11147              		.cfi_def_cfa_offset 4
 11148 00b8 BD46     		mov	sp, r7
 11149              	.LCFI342:
 11150              		.cfi_def_cfa_register 13
 11151              		@ sp needed
 11152 00ba 5DF8047B 		ldr	r7, [sp], #4
 11153              	.LCFI343:
 11154              		.cfi_restore 7
 11155              		.cfi_def_cfa_offset 0
 11156 00be 7047     		bx	lr
 11157              		.cfi_endproc
 11158              	.LFE354:
 11160              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 11161              		.align	1
 11162              		.syntax unified
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 295


 11163              		.thumb
 11164              		.thumb_func
 11165              		.fpu fpv4-sp-d16
 11167              	UART_EndTransmit_IT:
 11168              	.LFB355:
4255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
4259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
4266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
4267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
4270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
4272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
4274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
4277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
4280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
4282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
4284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr++;
4287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
4288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
4290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
4292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
4306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const uint16_t *tmp;
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 296


4307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
4308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
4311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
4313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
4315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
4318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
4321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
4323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
4325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (const uint16_t *) huart->pTxBuffPtr;
4327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
4328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
4329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
4330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
4332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
4334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
4338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
4342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
4343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
4344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
4347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 11169              		.loc 1 4347 1
 11170              		.cfi_startproc
 11171              		@ args = 0, pretend = 0, frame = 32
 11172              		@ frame_needed = 1, uses_anonymous_args = 0
 11173 0000 80B5     		push	{r7, lr}
 11174              	.LCFI344:
 11175              		.cfi_def_cfa_offset 8
 11176              		.cfi_offset 7, -8
 11177              		.cfi_offset 14, -4
 11178 0002 88B0     		sub	sp, sp, #32
 11179              	.LCFI345:
 11180              		.cfi_def_cfa_offset 40
 11181 0004 00AF     		add	r7, sp, #0
 11182              	.LCFI346:
 11183              		.cfi_def_cfa_register 7
 11184 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 297


 11185              	.L627:
 11186              	.LBB783:
4348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
4349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 11187              		.loc 1 4349 3 discriminator 1
 11188 0008 7B68     		ldr	r3, [r7, #4]
 11189 000a 1B68     		ldr	r3, [r3]
 11190 000c FB60     		str	r3, [r7, #12]
 11191              	.LBB784:
 11192              	.LBB785:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11193              		.loc 2 1155 4 discriminator 1
 11194 000e FB68     		ldr	r3, [r7, #12]
 11195              		.syntax unified
 11196              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11197 0010 53E8003F 		ldrex r3, [r3]
 11198              	@ 0 "" 2
 11199              		.thumb
 11200              		.syntax unified
 11201 0014 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11202              		.loc 2 1156 10 discriminator 1
 11203 0016 BB68     		ldr	r3, [r7, #8]
 11204              	.LBE785:
 11205              	.LBE784:
 11206              		.loc 1 4349 3 discriminator 1
 11207 0018 23F04003 		bic	r3, r3, #64
 11208 001c FB61     		str	r3, [r7, #28]
 11209 001e 7B68     		ldr	r3, [r7, #4]
 11210 0020 1B68     		ldr	r3, [r3]
 11211 0022 1A46     		mov	r2, r3
 11212 0024 FB69     		ldr	r3, [r7, #28]
 11213 0026 BB61     		str	r3, [r7, #24]
 11214 0028 7A61     		str	r2, [r7, #20]
 11215              	.LBB786:
 11216              	.LBB787:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11217              		.loc 2 1206 4 discriminator 1
 11218 002a 7969     		ldr	r1, [r7, #20]
 11219 002c BA69     		ldr	r2, [r7, #24]
 11220              		.syntax unified
 11221              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11222 002e 41E80023 		strex r3, r2, [r1]
 11223              	@ 0 "" 2
 11224              		.thumb
 11225              		.syntax unified
 11226 0032 3B61     		str	r3, [r7, #16]
 11227              		.loc 2 1207 10 discriminator 1
 11228 0034 3B69     		ldr	r3, [r7, #16]
 11229              	.LBE787:
 11230              	.LBE786:
 11231              		.loc 1 4349 3 discriminator 1
 11232 0036 002B     		cmp	r3, #0
 11233 0038 E6D1     		bne	.L627
 11234              	.LBE783:
4350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 298


4352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 11235              		.loc 1 4352 17
 11236 003a 7B68     		ldr	r3, [r7, #4]
 11237 003c 2022     		movs	r2, #32
 11238 003e 9A67     		str	r2, [r3, #120]
4353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
4355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 11239              		.loc 1 4355 16
 11240 0040 7B68     		ldr	r3, [r7, #4]
 11241 0042 0022     		movs	r2, #0
 11242 0044 9A66     		str	r2, [r3, #104]
4356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
4359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
4360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
4362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 11243              		.loc 1 4362 3
 11244 0046 7868     		ldr	r0, [r7, #4]
 11245 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
4363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 11246              		.loc 1 4364 1
 11247 004c 00BF     		nop
 11248 004e 2037     		adds	r7, r7, #32
 11249              	.LCFI347:
 11250              		.cfi_def_cfa_offset 8
 11251 0050 BD46     		mov	sp, r7
 11252              	.LCFI348:
 11253              		.cfi_def_cfa_register 13
 11254              		@ sp needed
 11255 0052 80BD     		pop	{r7, pc}
 11256              		.cfi_endproc
 11257              	.LFE355:
 11259              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 11260              		.align	1
 11261              		.syntax unified
 11262              		.thumb
 11263              		.thumb_func
 11264              		.fpu fpv4-sp-d16
 11266              	UART_RxISR_8BIT:
 11267              	.LFB356:
4365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
4368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
4372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 11268              		.loc 1 4372 1
 11269              		.cfi_startproc
 11270              		@ args = 0, pretend = 0, frame = 88
 11271              		@ frame_needed = 1, uses_anonymous_args = 0
 11272 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 299


 11273              	.LCFI349:
 11274              		.cfi_def_cfa_offset 8
 11275              		.cfi_offset 7, -8
 11276              		.cfi_offset 14, -4
 11277 0002 96B0     		sub	sp, sp, #88
 11278              	.LCFI350:
 11279              		.cfi_def_cfa_offset 96
 11280 0004 00AF     		add	r7, sp, #0
 11281              	.LCFI351:
 11282              		.cfi_def_cfa_register 7
 11283 0006 7860     		str	r0, [r7, #4]
4373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 11284              		.loc 1 4373 12
 11285 0008 7B68     		ldr	r3, [r7, #4]
 11286 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 11287 000e A7F85630 		strh	r3, [r7, #86]	@ movhi
4374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
4375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 11288              		.loc 1 4377 12
 11289 0012 7B68     		ldr	r3, [r7, #4]
 11290 0014 DB6F     		ldr	r3, [r3, #124]
 11291              		.loc 1 4377 6
 11292 0016 222B     		cmp	r3, #34
 11293 0018 40F09480 		bne	.L629
4378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 11294              		.loc 1 4379 25
 11295 001c 7B68     		ldr	r3, [r7, #4]
 11296 001e 1B68     		ldr	r3, [r3]
 11297              		.loc 1 4379 12
 11298 0020 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 11299 0022 A7F85430 		strh	r3, [r7, #84]	@ movhi
4380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 11300              		.loc 1 4380 26
 11301 0026 B7F85430 		ldrh	r3, [r7, #84]	@ movhi
 11302 002a D9B2     		uxtb	r1, r3
 11303              		.loc 1 4380 45
 11304 002c B7F85630 		ldrh	r3, [r7, #86]	@ movhi
 11305 0030 DAB2     		uxtb	r2, r3
 11306              		.loc 1 4380 11
 11307 0032 7B68     		ldr	r3, [r7, #4]
 11308 0034 5B6D     		ldr	r3, [r3, #84]
 11309              		.loc 1 4380 26
 11310 0036 0A40     		ands	r2, r2, r1
 11311 0038 D2B2     		uxtb	r2, r2
 11312              		.loc 1 4380 24
 11313 003a 1A70     		strb	r2, [r3]
4381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr++;
 11314              		.loc 1 4381 10
 11315 003c 7B68     		ldr	r3, [r7, #4]
 11316 003e 5B6D     		ldr	r3, [r3, #84]
 11317              		.loc 1 4381 22
 11318 0040 5A1C     		adds	r2, r3, #1
 11319 0042 7B68     		ldr	r3, [r7, #4]
 11320 0044 5A65     		str	r2, [r3, #84]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 300


4382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 11321              		.loc 1 4382 10
 11322 0046 7B68     		ldr	r3, [r7, #4]
 11323 0048 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 11324 004c 9BB2     		uxth	r3, r3
 11325              		.loc 1 4382 23
 11326 004e 013B     		subs	r3, r3, #1
 11327 0050 9AB2     		uxth	r2, r3
 11328 0052 7B68     		ldr	r3, [r7, #4]
 11329 0054 A3F85A20 		strh	r2, [r3, #90]	@ movhi
4383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 11330              		.loc 1 4384 14
 11331 0058 7B68     		ldr	r3, [r7, #4]
 11332 005a B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 11333 005e 9BB2     		uxth	r3, r3
 11334              		.loc 1 4384 8
 11335 0060 002B     		cmp	r3, #0
 11336 0062 79D1     		bne	.L642
 11337              	.L633:
 11338              	.LBB788:
4385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 11339              		.loc 1 4390 7 discriminator 1
 11340 0064 7B68     		ldr	r3, [r7, #4]
 11341 0066 1B68     		ldr	r3, [r3]
 11342 0068 BB63     		str	r3, [r7, #56]
 11343              	.LBB789:
 11344              	.LBB790:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11345              		.loc 2 1155 4 discriminator 1
 11346 006a BB6B     		ldr	r3, [r7, #56]
 11347              		.syntax unified
 11348              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11349 006c 53E8003F 		ldrex r3, [r3]
 11350              	@ 0 "" 2
 11351              		.thumb
 11352              		.syntax unified
 11353 0070 7B63     		str	r3, [r7, #52]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11354              		.loc 2 1156 10 discriminator 1
 11355 0072 7B6B     		ldr	r3, [r7, #52]
 11356              	.LBE790:
 11357              	.LBE789:
 11358              		.loc 1 4390 7 discriminator 1
 11359 0074 23F49073 		bic	r3, r3, #288
 11360 0078 3B65     		str	r3, [r7, #80]
 11361 007a 7B68     		ldr	r3, [r7, #4]
 11362 007c 1B68     		ldr	r3, [r3]
 11363 007e 1A46     		mov	r2, r3
 11364 0080 3B6D     		ldr	r3, [r7, #80]
 11365 0082 7B64     		str	r3, [r7, #68]
 11366 0084 3A64     		str	r2, [r7, #64]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 301


 11367              	.LBB791:
 11368              	.LBB792:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11369              		.loc 2 1206 4 discriminator 1
 11370 0086 396C     		ldr	r1, [r7, #64]
 11371 0088 7A6C     		ldr	r2, [r7, #68]
 11372              		.syntax unified
 11373              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11374 008a 41E80023 		strex r3, r2, [r1]
 11375              	@ 0 "" 2
 11376              		.thumb
 11377              		.syntax unified
 11378 008e FB63     		str	r3, [r7, #60]
 11379              		.loc 2 1207 10 discriminator 1
 11380 0090 FB6B     		ldr	r3, [r7, #60]
 11381              	.LBE792:
 11382              	.LBE791:
 11383              		.loc 1 4390 7 discriminator 1
 11384 0092 002B     		cmp	r3, #0
 11385 0094 E6D1     		bne	.L633
 11386              	.L636:
 11387              	.LBE788:
 11388              	.LBB793:
4391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 11389              		.loc 1 4394 7 discriminator 1
 11390 0096 7B68     		ldr	r3, [r7, #4]
 11391 0098 1B68     		ldr	r3, [r3]
 11392 009a 0833     		adds	r3, r3, #8
 11393 009c 7B62     		str	r3, [r7, #36]
 11394              	.LBB794:
 11395              	.LBB795:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11396              		.loc 2 1155 4 discriminator 1
 11397 009e 7B6A     		ldr	r3, [r7, #36]
 11398              		.syntax unified
 11399              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11400 00a0 53E8003F 		ldrex r3, [r3]
 11401              	@ 0 "" 2
 11402              		.thumb
 11403              		.syntax unified
 11404 00a4 3B62     		str	r3, [r7, #32]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11405              		.loc 2 1156 10 discriminator 1
 11406 00a6 3B6A     		ldr	r3, [r7, #32]
 11407              	.LBE795:
 11408              	.LBE794:
 11409              		.loc 1 4394 7 discriminator 1
 11410 00a8 23F00103 		bic	r3, r3, #1
 11411 00ac FB64     		str	r3, [r7, #76]
 11412 00ae 7B68     		ldr	r3, [r7, #4]
 11413 00b0 1B68     		ldr	r3, [r3]
 11414 00b2 0833     		adds	r3, r3, #8
 11415 00b4 FA6C     		ldr	r2, [r7, #76]
 11416 00b6 3A63     		str	r2, [r7, #48]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 302


 11417 00b8 FB62     		str	r3, [r7, #44]
 11418              	.LBB796:
 11419              	.LBB797:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11420              		.loc 2 1206 4 discriminator 1
 11421 00ba F96A     		ldr	r1, [r7, #44]
 11422 00bc 3A6B     		ldr	r2, [r7, #48]
 11423              		.syntax unified
 11424              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11425 00be 41E80023 		strex r3, r2, [r1]
 11426              	@ 0 "" 2
 11427              		.thumb
 11428              		.syntax unified
 11429 00c2 BB62     		str	r3, [r7, #40]
 11430              		.loc 2 1207 10 discriminator 1
 11431 00c4 BB6A     		ldr	r3, [r7, #40]
 11432              	.LBE797:
 11433              	.LBE796:
 11434              		.loc 1 4394 7 discriminator 1
 11435 00c6 002B     		cmp	r3, #0
 11436 00c8 E5D1     		bne	.L636
 11437              	.LBE793:
4395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 11438              		.loc 1 4397 22
 11439 00ca 7B68     		ldr	r3, [r7, #4]
 11440 00cc 2022     		movs	r2, #32
 11441 00ce DA67     		str	r2, [r3, #124]
4398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 11442              		.loc 1 4400 20
 11443 00d0 7B68     		ldr	r3, [r7, #4]
 11444 00d2 0022     		movs	r2, #0
 11445 00d4 5A66     		str	r2, [r3, #100]
4401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check current reception Mode :
4403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11446              		.loc 1 4404 16
 11447 00d6 7B68     		ldr	r3, [r7, #4]
 11448 00d8 1B6E     		ldr	r3, [r3, #96]
 11449              		.loc 1 4404 10
 11450 00da 012B     		cmp	r3, #1
 11451 00dc 2ED1     		bne	.L637
4405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set reception type to Standard */
4407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 11452              		.loc 1 4407 30
 11453 00de 7B68     		ldr	r3, [r7, #4]
 11454 00e0 0022     		movs	r2, #0
 11455 00e2 1A66     		str	r2, [r3, #96]
 11456              	.L640:
 11457              	.LBB798:
4408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable IDLE interrupt */
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 303


4410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 11458              		.loc 1 4410 9 discriminator 1
 11459 00e4 7B68     		ldr	r3, [r7, #4]
 11460 00e6 1B68     		ldr	r3, [r3]
 11461 00e8 3B61     		str	r3, [r7, #16]
 11462              	.LBB799:
 11463              	.LBB800:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11464              		.loc 2 1155 4 discriminator 1
 11465 00ea 3B69     		ldr	r3, [r7, #16]
 11466              		.syntax unified
 11467              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11468 00ec 53E8003F 		ldrex r3, [r3]
 11469              	@ 0 "" 2
 11470              		.thumb
 11471              		.syntax unified
 11472 00f0 FB60     		str	r3, [r7, #12]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11473              		.loc 2 1156 10 discriminator 1
 11474 00f2 FB68     		ldr	r3, [r7, #12]
 11475              	.LBE800:
 11476              	.LBE799:
 11477              		.loc 1 4410 9 discriminator 1
 11478 00f4 23F01003 		bic	r3, r3, #16
 11479 00f8 BB64     		str	r3, [r7, #72]
 11480 00fa 7B68     		ldr	r3, [r7, #4]
 11481 00fc 1B68     		ldr	r3, [r3]
 11482 00fe 1A46     		mov	r2, r3
 11483 0100 BB6C     		ldr	r3, [r7, #72]
 11484 0102 FB61     		str	r3, [r7, #28]
 11485 0104 BA61     		str	r2, [r7, #24]
 11486              	.LBB801:
 11487              	.LBB802:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11488              		.loc 2 1206 4 discriminator 1
 11489 0106 B969     		ldr	r1, [r7, #24]
 11490 0108 FA69     		ldr	r2, [r7, #28]
 11491              		.syntax unified
 11492              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11493 010a 41E80023 		strex r3, r2, [r1]
 11494              	@ 0 "" 2
 11495              		.thumb
 11496              		.syntax unified
 11497 010e 7B61     		str	r3, [r7, #20]
 11498              		.loc 2 1207 10 discriminator 1
 11499 0110 7B69     		ldr	r3, [r7, #20]
 11500              	.LBE802:
 11501              	.LBE801:
 11502              		.loc 1 4410 9 discriminator 1
 11503 0112 002B     		cmp	r3, #0
 11504 0114 E6D1     		bne	.L640
 11505              	.LBE798:
4411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 11506              		.loc 1 4412 13
 11507 0116 7B68     		ldr	r3, [r7, #4]
 11508 0118 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 304


 11509 011a DB69     		ldr	r3, [r3, #28]
 11510 011c 03F01003 		and	r3, r3, #16
 11511              		.loc 1 4412 12
 11512 0120 102B     		cmp	r3, #16
 11513 0122 03D1     		bne	.L641
4413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
4414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Clear IDLE Flag */
4415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 11514              		.loc 1 4415 11
 11515 0124 7B68     		ldr	r3, [r7, #4]
 11516 0126 1B68     		ldr	r3, [r3]
 11517 0128 1022     		movs	r2, #16
 11518 012a 1A62     		str	r2, [r3, #32]
 11519              	.L641:
4416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
4417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 11520              		.loc 1 4422 9
 11521 012c 7B68     		ldr	r3, [r7, #4]
 11522 012e B3F85830 		ldrh	r3, [r3, #88]
 11523 0132 1946     		mov	r1, r3
 11524 0134 7868     		ldr	r0, [r7, #4]
 11525 0136 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
4426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Standard reception API called */
4428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
4439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 11526              		.loc 1 4443 1
 11527 013a 0DE0     		b	.L642
 11528              	.L637:
4433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11529              		.loc 1 4433 9
 11530 013c 7868     		ldr	r0, [r7, #4]
 11531 013e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 11532              		.loc 1 4443 1
 11533 0142 09E0     		b	.L642
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 305


 11534              	.L629:
4441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 11535              		.loc 1 4441 5
 11536 0144 7B68     		ldr	r3, [r7, #4]
 11537 0146 1B68     		ldr	r3, [r3]
 11538 0148 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 11539 014a 9AB2     		uxth	r2, r3
 11540 014c 7B68     		ldr	r3, [r7, #4]
 11541 014e 1B68     		ldr	r3, [r3]
 11542 0150 42F00802 		orr	r2, r2, #8
 11543 0154 92B2     		uxth	r2, r2
 11544 0156 1A83     		strh	r2, [r3, #24]	@ movhi
 11545              	.L642:
 11546              		.loc 1 4443 1
 11547 0158 00BF     		nop
 11548 015a 5837     		adds	r7, r7, #88
 11549              	.LCFI352:
 11550              		.cfi_def_cfa_offset 8
 11551 015c BD46     		mov	sp, r7
 11552              	.LCFI353:
 11553              		.cfi_def_cfa_register 13
 11554              		@ sp needed
 11555 015e 80BD     		pop	{r7, pc}
 11556              		.cfi_endproc
 11557              	.LFE356:
 11559              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 11560              		.align	1
 11561              		.syntax unified
 11562              		.thumb
 11563              		.thumb_func
 11564              		.fpu fpv4-sp-d16
 11566              	UART_RxISR_16BIT:
 11567              	.LFB357:
4444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
4446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
4447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
4451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
4452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 11568              		.loc 1 4453 1
 11569              		.cfi_startproc
 11570              		@ args = 0, pretend = 0, frame = 88
 11571              		@ frame_needed = 1, uses_anonymous_args = 0
 11572 0000 80B5     		push	{r7, lr}
 11573              	.LCFI354:
 11574              		.cfi_def_cfa_offset 8
 11575              		.cfi_offset 7, -8
 11576              		.cfi_offset 14, -4
 11577 0002 96B0     		sub	sp, sp, #88
 11578              	.LCFI355:
 11579              		.cfi_def_cfa_offset 96
 11580 0004 00AF     		add	r7, sp, #0
 11581              	.LCFI356:
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 306


 11582              		.cfi_def_cfa_register 7
 11583 0006 7860     		str	r0, [r7, #4]
4454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
4455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 11584              		.loc 1 4455 12
 11585 0008 7B68     		ldr	r3, [r7, #4]
 11586 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 11587 000e A7F85630 		strh	r3, [r7, #86]	@ movhi
4456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
4457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 11588              		.loc 1 4459 12
 11589 0012 7B68     		ldr	r3, [r7, #4]
 11590 0014 DB6F     		ldr	r3, [r3, #124]
 11591              		.loc 1 4459 6
 11592 0016 222B     		cmp	r3, #34
 11593 0018 40F09480 		bne	.L644
4460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 11594              		.loc 1 4461 25
 11595 001c 7B68     		ldr	r3, [r7, #4]
 11596 001e 1B68     		ldr	r3, [r3]
 11597              		.loc 1 4461 12
 11598 0020 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 11599 0022 A7F85430 		strh	r3, [r7, #84]	@ movhi
4462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 11600              		.loc 1 4462 9
 11601 0026 7B68     		ldr	r3, [r7, #4]
 11602 0028 5B6D     		ldr	r3, [r3, #84]
 11603 002a 3B65     		str	r3, [r7, #80]
4463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 11604              		.loc 1 4463 12
 11605 002c B7F85420 		ldrh	r2, [r7, #84]	@ movhi
 11606 0030 B7F85630 		ldrh	r3, [r7, #86]	@ movhi
 11607 0034 1340     		ands	r3, r3, r2
 11608 0036 9AB2     		uxth	r2, r3
 11609              		.loc 1 4463 10
 11610 0038 3B6D     		ldr	r3, [r7, #80]
 11611 003a 1A80     		strh	r2, [r3]	@ movhi
4464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 11612              		.loc 1 4464 23
 11613 003c 7B68     		ldr	r3, [r7, #4]
 11614 003e 5B6D     		ldr	r3, [r3, #84]
 11615 0040 9A1C     		adds	r2, r3, #2
 11616 0042 7B68     		ldr	r3, [r7, #4]
 11617 0044 5A65     		str	r2, [r3, #84]
4465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 11618              		.loc 1 4465 10
 11619 0046 7B68     		ldr	r3, [r7, #4]
 11620 0048 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 11621 004c 9BB2     		uxth	r3, r3
 11622              		.loc 1 4465 23
 11623 004e 013B     		subs	r3, r3, #1
 11624 0050 9AB2     		uxth	r2, r3
 11625 0052 7B68     		ldr	r3, [r7, #4]
 11626 0054 A3F85A20 		strh	r2, [r3, #90]	@ movhi
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 307


4466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 11627              		.loc 1 4467 14
 11628 0058 7B68     		ldr	r3, [r7, #4]
 11629 005a B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 11630 005e 9BB2     		uxth	r3, r3
 11631              		.loc 1 4467 8
 11632 0060 002B     		cmp	r3, #0
 11633 0062 79D1     		bne	.L657
 11634              	.L648:
 11635              	.LBB803:
4468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
4469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 11636              		.loc 1 4473 7 discriminator 1
 11637 0064 7B68     		ldr	r3, [r7, #4]
 11638 0066 1B68     		ldr	r3, [r3]
 11639 0068 7B63     		str	r3, [r7, #52]
 11640              	.LBB804:
 11641              	.LBB805:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11642              		.loc 2 1155 4 discriminator 1
 11643 006a 7B6B     		ldr	r3, [r7, #52]
 11644              		.syntax unified
 11645              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11646 006c 53E8003F 		ldrex r3, [r3]
 11647              	@ 0 "" 2
 11648              		.thumb
 11649              		.syntax unified
 11650 0070 3B63     		str	r3, [r7, #48]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11651              		.loc 2 1156 10 discriminator 1
 11652 0072 3B6B     		ldr	r3, [r7, #48]
 11653              	.LBE805:
 11654              	.LBE804:
 11655              		.loc 1 4473 7 discriminator 1
 11656 0074 23F49073 		bic	r3, r3, #288
 11657 0078 FB64     		str	r3, [r7, #76]
 11658 007a 7B68     		ldr	r3, [r7, #4]
 11659 007c 1B68     		ldr	r3, [r3]
 11660 007e 1A46     		mov	r2, r3
 11661 0080 FB6C     		ldr	r3, [r7, #76]
 11662 0082 3B64     		str	r3, [r7, #64]
 11663 0084 FA63     		str	r2, [r7, #60]
 11664              	.LBB806:
 11665              	.LBB807:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11666              		.loc 2 1206 4 discriminator 1
 11667 0086 F96B     		ldr	r1, [r7, #60]
 11668 0088 3A6C     		ldr	r2, [r7, #64]
 11669              		.syntax unified
 11670              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11671 008a 41E80023 		strex r3, r2, [r1]
 11672              	@ 0 "" 2
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 308


 11673              		.thumb
 11674              		.syntax unified
 11675 008e BB63     		str	r3, [r7, #56]
 11676              		.loc 2 1207 10 discriminator 1
 11677 0090 BB6B     		ldr	r3, [r7, #56]
 11678              	.LBE807:
 11679              	.LBE806:
 11680              		.loc 1 4473 7 discriminator 1
 11681 0092 002B     		cmp	r3, #0
 11682 0094 E6D1     		bne	.L648
 11683              	.L651:
 11684              	.LBE803:
 11685              	.LBB808:
4474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 11686              		.loc 1 4477 7 discriminator 1
 11687 0096 7B68     		ldr	r3, [r7, #4]
 11688 0098 1B68     		ldr	r3, [r3]
 11689 009a 0833     		adds	r3, r3, #8
 11690 009c 3B62     		str	r3, [r7, #32]
 11691              	.LBB809:
 11692              	.LBB810:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11693              		.loc 2 1155 4 discriminator 1
 11694 009e 3B6A     		ldr	r3, [r7, #32]
 11695              		.syntax unified
 11696              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11697 00a0 53E8003F 		ldrex r3, [r3]
 11698              	@ 0 "" 2
 11699              		.thumb
 11700              		.syntax unified
 11701 00a4 FB61     		str	r3, [r7, #28]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11702              		.loc 2 1156 10 discriminator 1
 11703 00a6 FB69     		ldr	r3, [r7, #28]
 11704              	.LBE810:
 11705              	.LBE809:
 11706              		.loc 1 4477 7 discriminator 1
 11707 00a8 23F00103 		bic	r3, r3, #1
 11708 00ac BB64     		str	r3, [r7, #72]
 11709 00ae 7B68     		ldr	r3, [r7, #4]
 11710 00b0 1B68     		ldr	r3, [r3]
 11711 00b2 0833     		adds	r3, r3, #8
 11712 00b4 BA6C     		ldr	r2, [r7, #72]
 11713 00b6 FA62     		str	r2, [r7, #44]
 11714 00b8 BB62     		str	r3, [r7, #40]
 11715              	.LBB811:
 11716              	.LBB812:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11717              		.loc 2 1206 4 discriminator 1
 11718 00ba B96A     		ldr	r1, [r7, #40]
 11719 00bc FA6A     		ldr	r2, [r7, #44]
 11720              		.syntax unified
 11721              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11722 00be 41E80023 		strex r3, r2, [r1]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 309


 11723              	@ 0 "" 2
 11724              		.thumb
 11725              		.syntax unified
 11726 00c2 7B62     		str	r3, [r7, #36]
 11727              		.loc 2 1207 10 discriminator 1
 11728 00c4 7B6A     		ldr	r3, [r7, #36]
 11729              	.LBE812:
 11730              	.LBE811:
 11731              		.loc 1 4477 7 discriminator 1
 11732 00c6 002B     		cmp	r3, #0
 11733 00c8 E5D1     		bne	.L651
 11734              	.LBE808:
4478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 11735              		.loc 1 4480 22
 11736 00ca 7B68     		ldr	r3, [r7, #4]
 11737 00cc 2022     		movs	r2, #32
 11738 00ce DA67     		str	r2, [r3, #124]
4481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 11739              		.loc 1 4483 20
 11740 00d0 7B68     		ldr	r3, [r7, #4]
 11741 00d2 0022     		movs	r2, #0
 11742 00d4 5A66     		str	r2, [r3, #100]
4484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Check current reception Mode :
4486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 11743              		.loc 1 4487 16
 11744 00d6 7B68     		ldr	r3, [r7, #4]
 11745 00d8 1B6E     		ldr	r3, [r3, #96]
 11746              		.loc 1 4487 10
 11747 00da 012B     		cmp	r3, #1
 11748 00dc 2ED1     		bne	.L652
4488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set reception type to Standard */
4490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 11749              		.loc 1 4490 30
 11750 00de 7B68     		ldr	r3, [r7, #4]
 11751 00e0 0022     		movs	r2, #0
 11752 00e2 1A66     		str	r2, [r3, #96]
 11753              	.L655:
 11754              	.LBB813:
4491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable IDLE interrupt */
4493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 11755              		.loc 1 4493 9 discriminator 1
 11756 00e4 7B68     		ldr	r3, [r7, #4]
 11757 00e6 1B68     		ldr	r3, [r3]
 11758 00e8 FB60     		str	r3, [r7, #12]
 11759              	.LBB814:
 11760              	.LBB815:
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11761              		.loc 2 1155 4 discriminator 1
 11762 00ea FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 310


 11763              		.syntax unified
 11764              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11765 00ec 53E8003F 		ldrex r3, [r3]
 11766              	@ 0 "" 2
 11767              		.thumb
 11768              		.syntax unified
 11769 00f0 BB60     		str	r3, [r7, #8]
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 11770              		.loc 2 1156 10 discriminator 1
 11771 00f2 BB68     		ldr	r3, [r7, #8]
 11772              	.LBE815:
 11773              	.LBE814:
 11774              		.loc 1 4493 9 discriminator 1
 11775 00f4 23F01003 		bic	r3, r3, #16
 11776 00f8 7B64     		str	r3, [r7, #68]
 11777 00fa 7B68     		ldr	r3, [r7, #4]
 11778 00fc 1B68     		ldr	r3, [r3]
 11779 00fe 1A46     		mov	r2, r3
 11780 0100 7B6C     		ldr	r3, [r7, #68]
 11781 0102 BB61     		str	r3, [r7, #24]
 11782 0104 7A61     		str	r2, [r7, #20]
 11783              	.LBB816:
 11784              	.LBB817:
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 11785              		.loc 2 1206 4 discriminator 1
 11786 0106 7969     		ldr	r1, [r7, #20]
 11787 0108 BA69     		ldr	r2, [r7, #24]
 11788              		.syntax unified
 11789              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 11790 010a 41E80023 		strex r3, r2, [r1]
 11791              	@ 0 "" 2
 11792              		.thumb
 11793              		.syntax unified
 11794 010e 3B61     		str	r3, [r7, #16]
 11795              		.loc 2 1207 10 discriminator 1
 11796 0110 3B69     		ldr	r3, [r7, #16]
 11797              	.LBE817:
 11798              	.LBE816:
 11799              		.loc 1 4493 9 discriminator 1
 11800 0112 002B     		cmp	r3, #0
 11801 0114 E6D1     		bne	.L655
 11802              	.LBE813:
4494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
4495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 11803              		.loc 1 4495 13
 11804 0116 7B68     		ldr	r3, [r7, #4]
 11805 0118 1B68     		ldr	r3, [r3]
 11806 011a DB69     		ldr	r3, [r3, #28]
 11807 011c 03F01003 		and	r3, r3, #16
 11808              		.loc 1 4495 12
 11809 0120 102B     		cmp	r3, #16
 11810 0122 03D1     		bne	.L656
4496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
4497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Clear IDLE Flag */
4498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 11811              		.loc 1 4498 11
 11812 0124 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 311


 11813 0126 1B68     		ldr	r3, [r3]
 11814 0128 1022     		movs	r2, #16
 11815 012a 1A62     		str	r2, [r3, #32]
 11816              	.L656:
4499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
4500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 11817              		.loc 1 4505 9
 11818 012c 7B68     		ldr	r3, [r7, #4]
 11819 012e B3F85830 		ldrh	r3, [r3, #88]
 11820 0132 1946     		mov	r1, r3
 11821 0134 7868     		ldr	r0, [r7, #4]
 11822 0136 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
4506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
4507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
4509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
4510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Standard reception API called */
4511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
4515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
4519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
4520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
4522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
4523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
4526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 11823              		.loc 1 4526 1
 11824 013a 0DE0     		b	.L657
 11825              	.L652:
4516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 11826              		.loc 1 4516 9
 11827 013c 7868     		ldr	r0, [r7, #4]
 11828 013e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 11829              		.loc 1 4526 1
 11830 0142 09E0     		b	.L657
 11831              	.L644:
4524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 11832              		.loc 1 4524 5
 11833 0144 7B68     		ldr	r3, [r7, #4]
 11834 0146 1B68     		ldr	r3, [r3]
 11835 0148 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 11836 014a 9AB2     		uxth	r2, r3
 11837 014c 7B68     		ldr	r3, [r7, #4]
 11838 014e 1B68     		ldr	r3, [r3]
 11839 0150 42F00802 		orr	r2, r2, #8
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 312


 11840 0154 92B2     		uxth	r2, r2
 11841 0156 1A83     		strh	r2, [r3, #24]	@ movhi
 11842              	.L657:
 11843              		.loc 1 4526 1
 11844 0158 00BF     		nop
 11845 015a 5837     		adds	r7, r7, #88
 11846              	.LCFI357:
 11847              		.cfi_def_cfa_offset 8
 11848 015c BD46     		mov	sp, r7
 11849              	.LCFI358:
 11850              		.cfi_def_cfa_register 13
 11851              		@ sp needed
 11852 015e 80BD     		pop	{r7, pc}
 11853              		.cfi_endproc
 11854              	.LFE357:
 11856              		.text
 11857              	.Letext0:
 11858              		.file 3 "/Users/isikcanyilmaz/KODMOD/b607/test/mcu/tools/gcc9.2.1/mac/arm-none-eabi/include/machin
 11859              		.file 4 "/Users/isikcanyilmaz/KODMOD/b607/test/mcu/tools/gcc9.2.1/mac/arm-none-eabi/include/sys/_s
 11860              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 11861              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 11862              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l452xx.h"
 11863              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 11864              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 11865              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 11866              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 11867              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 11868              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 313


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:18     .text.HAL_UART_Init:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:26     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:698    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7390   .text.UART_SetConfig:0000000000000000 UART_SetConfig
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8138   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8350   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:143    .text.HAL_HalfDuplex_Init:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:150    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:274    .text.HAL_LIN_Init:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:281    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:436    .text.HAL_MultiProcessor_Init:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:443    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:588    .text.HAL_UART_DeInit:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:595    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:741    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:691    .text.HAL_UART_MspInit:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:734    .text.HAL_UART_MspDeInit:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:777    .text.HAL_UART_Transmit:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:784    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8467   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1001   .text.HAL_UART_Receive:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1008   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1297   .text.HAL_UART_Transmit_IT:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1304   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1483   .text.HAL_UART_Transmit_IT:00000000000000d4 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10978  .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10791  .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1489   .text.HAL_UART_Receive_IT:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1496   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8812   .text.UART_Start_Receive_IT:0000000000000000 UART_Start_Receive_IT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1644   .text.HAL_UART_Receive_IT:00000000000000a8 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1649   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1656   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1876   .text.HAL_UART_Transmit_DMA:0000000000000114 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9749   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9911   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10306  .text.UART_DMAError:0000000000000000 UART_DMAError
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1883   .text.HAL_UART_Receive_DMA:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:1890   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9146   .text.UART_Start_Receive_DMA:0000000000000000 UART_Start_Receive_DMA
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:2038   .text.HAL_UART_Receive_DMA:00000000000000a8 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:2043   .text.HAL_UART_DMAPause:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:2050   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:2343   .text.HAL_UART_DMAResume:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:2350   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:2634   .text.HAL_UART_DMAStop:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:2641   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9441   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9537   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:2882   .text.HAL_UART_Abort:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:2889   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:3315   .text.HAL_UART_AbortTransmit:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:3322   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:3512   .text.HAL_UART_AbortReceive:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:3519   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 314


/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:3836   .text.HAL_UART_Abort_IT:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:3843   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6134   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:4325   .text.HAL_UART_Abort_IT:0000000000000248 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10458  .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10557  .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:4331   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:4338   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6177   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:4548   .text.HAL_UART_AbortTransmit_IT:00000000000000ec $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10666  .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:4553   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:4560   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6220   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:4906   .text.HAL_UART_AbortReceive_IT:000000000000018c $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10719  .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:4911   .text.HAL_UART_IRQHandler:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:4918   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6091   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:5314   .text.HAL_UART_IRQHandler:0000000000000298 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10405  .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:5318   .text.HAL_UART_IRQHandler:00000000000002a0 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6263   .text.HAL_UARTEx_RxEventCallback:0000000000000000 HAL_UARTEx_RxEventCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:11167  .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:5912   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:5919   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:5955   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:5962   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:5998   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6005   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6041   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6048   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6084   .text.HAL_UART_ErrorCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6127   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6170   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6213   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6256   .text.HAL_UARTEx_RxEventCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6301   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6308   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6362   .text.HAL_UART_ReceiverTimeout_Config:0000000000000034 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6367   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6374   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6466   .text.HAL_UART_EnableReceiverTimeout:000000000000006c $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6471   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6478   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6570   .text.HAL_UART_DisableReceiverTimeout:000000000000006c $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6575   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6582   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6690   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6697   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6805   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6812   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6858   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:6865   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7029   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7036   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7200   .text.HAL_LIN_SendBreak:0000000000000000 $t
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 315


/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7207   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7281   .text.HAL_UART_GetState:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7288   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7336   .text.HAL_UART_GetError:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7343   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7383   .text.UART_SetConfig:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7499   .text.UART_SetConfig:000000000000009c $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7503   .text.UART_SetConfig:00000000000000ac $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7546   .text.UART_SetConfig:00000000000000e8 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7559   .text.UART_SetConfig:000000000000011c $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7755   .text.UART_SetConfig:0000000000000244 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7764   .text.UART_SetConfig:0000000000000268 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7831   .text.UART_SetConfig:00000000000002bc $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7841   .text.UART_SetConfig:00000000000002dc $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7904   .text.UART_SetConfig:0000000000000358 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:7913   .text.UART_SetConfig:000000000000037c $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8016   .text.UART_SetConfig:0000000000000410 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8025   .text.UART_SetConfig:0000000000000434 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8126   .text.UART_SetConfig:00000000000004b4 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8131   .text.UART_AdvFeatureConfig:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8343   .text.UART_CheckIdleState:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8460   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:8805   .text.UART_Start_Receive_IT:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9133   .text.UART_Start_Receive_IT:000000000000018c $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:11566  .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:11266  .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9139   .text.UART_Start_Receive_DMA:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9428   .text.UART_Start_Receive_DMA:0000000000000140 $d
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9956   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10242  .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9435   .text.UART_EndTxTransfer:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9531   .text.UART_EndRxTransfer:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9743   .text.UART_DMATransmitCplt:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9905   .text.UART_DMATxHalfCplt:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:9950   .text.UART_DMAReceiveCplt:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10236  .text.UART_DMARxHalfCplt:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10300  .text.UART_DMAError:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10399  .text.UART_DMAAbortOnError:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10452  .text.UART_DMATxAbortCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10551  .text.UART_DMARxAbortCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10660  .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10713  .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10785  .text.UART_TxISR_8BIT:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:10972  .text.UART_TxISR_16BIT:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:11161  .text.UART_EndTransmit_IT:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:11260  .text.UART_RxISR_8BIT:0000000000000000 $t
/var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s:11560  .text.UART_RxISR_16BIT:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
ARM GAS  /var/folders/k7/81v8fz9j4v98_s0dd31l1wsr0000gn/T//ccpVz2vH.s 			page 316


HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
